Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/time\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:layout_marginBottom=\"20dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:text=\"00 : 30\"\r\n        android:textColor=\"?attr/colorPrimary\"\r\n        android:textSize=\"24sp\"\r\n        android:textStyle=\"bold\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/submit\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginTop=\"7dp\"\r\n        android:layout_marginEnd=\"10dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"90\" />\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progressBar\"\r\n        style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"5dp\"\r\n        android:layout_below=\"@+id/time\"\r\n        android:max=\"100\"\r\n        android:progress=\"0\"\r\n        android:progressDrawable=\"@drawable/progressbar\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/question\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/progressBar\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"50dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:gravity=\"center\"\r\n        android:letterSpacing=\"0.04\"\r\n        android:lineSpacingExtra=\"10dp\"\r\n        android:text=\"초성에 해당하는\\n단어 3개를 말씀해주세요\"\r\n        android:textSize=\"20sp\" />\r\n\r\n    <FrameLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/question\"\r\n        android:layout_above=\"@+id/gray_view\"\r\n        android:layout_centerInParent=\"true\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/img\"\r\n                android:layout_width=\"160dp\"\r\n                android:layout_height=\"160dp\"\r\n                android:layout_gravity=\"center\"\r\n                app:tint=\"?attr/colorPrimary\"\r\n                android:src=\"@drawable/helper_jump\" />\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/card\"\r\n                android:layout_width=\"230dp\"\r\n                android:layout_height=\"130dp\"\r\n                android:backgroundTint=\"#41C4DAFF\"\r\n                android:elevation=\"20dp\" >\r\n\r\n                <TextView\r\n                    android:id=\"@+id/random_text\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/jejugothic\"\r\n                    android:letterSpacing=\"0.45\"\r\n                    android:layout_gravity=\"center\"\r\n                    android:text=\"ㅇㅅ\"\r\n                    android:textColor=\"?attr/colorOnSecondary\"\r\n                    android:textSize=\"50sp\"\r\n                    android:textStyle=\"bold\"/>\r\n            </androidx.cardview.widget.CardView>\r\n        </LinearLayout>\r\n\r\n        <ImageView\r\n            android:id=\"@+id/shapeRes\"\r\n            android:layout_width=\"180dp\"\r\n            android:layout_height=\"180dp\"\r\n            android:layout_marginTop=\"55dp\"\r\n            android:scaleX=\"1.0\"\r\n            android:scaleY=\"1.0\"\r\n            android:background=\"@drawable/shape_ring\"\r\n            android:backgroundTint=\"#03F4B0\"\r\n            android:layout_gravity=\"center\"\r\n            android:visibility=\"gone\"/>\r\n\r\n        <ImageView\r\n            android:id=\"@+id/shapeX\"\r\n            android:layout_width=\"130dp\"\r\n            android:layout_height=\"130dp\"\r\n            android:layout_marginTop=\"55dp\"\r\n            android:backgroundTint=\"#03F4B0\"\r\n            android:scaleX=\"1.8\"\r\n            android:scaleY=\"1.8\"\r\n            android:layout_gravity=\"center\"\r\n            android:rotation=\"45\"\r\n            android:background=\"@drawable/shape_x\"\r\n            android:visibility=\"gone\"/>\r\n    </FrameLayout>\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/gray_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:background=\"@drawable/shape_round_bar\"\r\n        android:backgroundTint=\"?attr/colorSecondary\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"330dp\"\r\n                android:layout_height=\"70dp\"\r\n                android:layout_gravity=\"center_horizontal\"\r\n                android:layout_marginTop=\"30dp\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/result\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:fontFamily=\"@font/jejugothic\"\r\n                    android:gravity=\"center\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n            <ImageButton\r\n                android:id=\"@+id/sttStart\"\r\n                android:layout_width=\"65dp\"\r\n                android:layout_height=\"65dp\"\r\n                android:layout_gravity=\"center|bottom\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_marginBottom=\"30dp\"\r\n                android:background=\"@drawable/ic_mic\" />\r\n        </LinearLayout>\r\n\r\n    </FrameLayout>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1667440838102)
@@ -153,7 +153,7 @@
                 android:layout_gravity="center|bottom"
                 android:layout_marginTop="20dp"
                 android:layout_marginBottom="30dp"
-                android:background="@drawable/ic_mic" />
+                android:background="@drawable/mic_selector" />
         </LinearLayout>
 
     </FrameLayout>
Index: app/src/main/java/fragment/FragmentSetting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fragment;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.Dialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.TypedValue;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.content.res.ResourcesCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.cbnu.dementiadiagnosis.FirstActivity;\r\nimport com.cbnu.dementiadiagnosis.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\nimport java.util.ResourceBundle;\r\n\r\nimport database.DBHelper;\r\nimport user.EducationAge;\r\nimport user.SharedPreference;\r\nimport user.User;\r\n\r\npublic class FragmentSetting extends Fragment implements View.OnClickListener {\r\n\r\n    TextView inf_retrieve, inf_delete;\r\n    TextView inf_name;\r\n    DBHelper db;\r\n    String serial_code;\r\n    List<EducationAge> eduAgeList = new ArrayList<>();\r\n    private DatePickerDialog.OnDateSetListener mDateSetListener;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_setting, container, false);\r\n\r\n        db = new DBHelper(requireActivity());\r\n        serial_code = SharedPreference.getSerialCode(requireActivity().getApplicationContext());\r\n        inf_name = (TextView) view.findViewById(R.id.userIf_name);\r\n        inf_retrieve = (TextView) view.findViewById(R.id.userIf_retrieve);\r\n        inf_delete = (TextView) view.findViewById(R.id.userIf_delete);\r\n\r\n        User user = db.getUserInf(serial_code);\r\n        inf_name.setText(user.getName());\r\n\r\n        // 수정 버튼\r\n        inf_retrieve.setOnClickListener(this);\r\n        // 삭제 버튼\r\n        inf_delete.setOnClickListener(this);\r\n\r\n        return view;\r\n    }\r\n\r\n    @SuppressLint(\"NonConstantResourceId\")\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.userIf_retrieve:\r\n                onClickRetrieve();\r\n                break;\r\n            case R.id.userIf_delete:\r\n                onClickDelete();\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 사용자 정보 수정 Dialog\r\n    public void onClickRetrieve() {\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_retrieve, null);\r\n        EditText nameEditText = (EditText) dialogView.findViewById(R.id.edit_name);\r\n        EditText birthEditText = (EditText) dialogView.findViewById(R.id.edit_birth);\r\n        Spinner spinnerSex = (Spinner) dialogView.findViewById(R.id.spinner_sex);\r\n        Spinner spinnerEdu = (Spinner) dialogView.findViewById(R.id.spinner_edu);\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(requireActivity());\r\n        builder.setView(dialogView);\r\n\r\n        AlertDialog alertDialog = builder.create();\r\n        alertDialog.setContentView(R.layout.dialog_retrieve);\r\n        alertDialog.getWindow().setBackgroundDrawableResource(R.drawable.round_button);\r\n        WindowManager.LayoutParams params = new WindowManager.LayoutParams();\r\n        params.copyFrom(alertDialog.getWindow().getAttributes());\r\n        params.width = 900;\r\n        params.height = WindowManager.LayoutParams.WRAP_CONTENT;\r\n        alertDialog.show();\r\n        Window window = alertDialog.getWindow();\r\n        window.setAttributes(params);\r\n\r\n        // 수정 전, 기존 사용자 정보 출력\r\n        User user = db.getUserInf(serial_code);\r\n        String name = user.getName();\r\n        String birth = user.getBirth();\r\n        String sex = user.getSex();\r\n        String edu = user.getEdu();\r\n\r\n        nameEditText.setText(name);\r\n        birthEditText.setText(birth);\r\n\r\n        // 생년월일 dialog picker\r\n        birthFun(birthEditText);\r\n\r\n        String[] sexList = new String[2];\r\n        sexList[0] = \"남\";\r\n        sexList[1] = \"여\";\r\n\r\n        ArrayAdapter spinnerAdapterSex;\r\n        spinnerAdapterSex = new ArrayAdapter(requireActivity(), R.layout.spinner, sexList);\r\n        spinnerSex.setAdapter(spinnerAdapterSex);\r\n\r\n        spinnerSex.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        if(sex.equals(\"남\")) {\r\n            spinnerSex.setSelection(0);\r\n        } else {\r\n            spinnerSex.setSelection(1);\r\n        }\r\n\r\n        int eduNum = 0;\r\n        switch(edu) {\r\n            case \"문맹\":\r\n                eduNum = 0;\r\n                break;\r\n            case \"무학\":\r\n                eduNum = 1;\r\n                break;\r\n            case \"초등졸업\":\r\n                eduNum = 2;\r\n                break;\r\n            case \"중등졸업\":\r\n                eduNum = 3;\r\n                break;\r\n            case \"고등졸업\":\r\n                eduNum = 4;\r\n                break;\r\n            case \"대학졸업이상\":\r\n                eduNum = 5;\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        ArrayList<String> eduList = new ArrayList<>();\r\n        eduList.add(\"문맹\");\r\n        eduList.add(\"무학\");\r\n        eduList.add(\"초등졸업\");\r\n        eduList.add(\"중등졸업\");\r\n        eduList.add(\"고등졸업\");\r\n        eduList.add(\"대학졸업이상\");\r\n\r\n        ArrayAdapter spinnerAdapterEdu;\r\n        spinnerAdapterEdu = new ArrayAdapter(requireActivity(),R.layout.spinner, eduList);\r\n        spinnerEdu.setAdapter(spinnerAdapterEdu);\r\n\r\n        spinnerEdu.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        spinnerEdu.setSelection(eduNum);\r\n\r\n        Button cancelBtn = (Button) dialogView.findViewById(R.id.cancelBtn);\r\n        Button retrieveBtn = (Button) dialogView.findViewById(R.id.retrieveBtn);\r\n\r\n        cancelBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        // 수정 확인 버튼 클릭\r\n        retrieveBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String cname = nameEditText.getText().toString();\r\n                String cbirth = birthEditText.getText().toString();\r\n                String csex = spinnerSex.getSelectedItem().toString();\r\n                String cedu = spinnerEdu.getSelectedItem().toString();\r\n                int cage = getAge(cbirth);\r\n                int cscore = getRefScore(cage, cedu);\r\n\r\n                long result = db.updateData(serial_code, cname, cbirth, cage, csex, cedu, cscore);\r\n\r\n                if(result > -1) {\r\n                    Toast.makeText(requireActivity(), \"수정되었습니다\", Toast.LENGTH_SHORT).show();\r\n                    alertDialog.dismiss();\r\n                } else {\r\n                    Toast.makeText(requireActivity(), \"수정에 실패하셨습니다\", Toast.LENGTH_SHORT).show();\r\n                    alertDialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // 사용자 정보 삭제 Dialog\r\n    public void onClickDelete() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(requireActivity());\r\n        builder.setTitle(\"사용자 정보 삭제\");\r\n        builder.setMessage(\"서비스를 이용하는데 사용된 사용자의\\n\" +\r\n                \"개인정보와 기록된 진단 기록을 \\n\" +\r\n                \"삭제하시겠습니까? \\n\" +\r\n                \"\\n\" +\r\n                \"! 삭제하기 버튼을 누르시면 모든 정보가 삭제되고, 삭제된 정보를 복구할 수 없음을 알려드립니다.\");\r\n\r\n        builder.setNegativeButton(\"취소\",\r\n                new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // 취소 이벤트 처리\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n        builder.setPositiveButton(\"삭제\",\r\n                new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // 삭제 이벤트 처리\r\n                        long del_user = db.deleteUser(serial_code);\r\n                        long del_score = db.deleteScore(serial_code);\r\n                        if(del_user > -1 && del_score > -1) {\r\n                            dialog.dismiss();\r\n                            Toast.makeText(requireActivity(), \"사용자 정보 삭제 성공!!!\", Toast.LENGTH_SHORT).show();\r\n                            startActivity(new Intent(getActivity(), FirstActivity.class));\r\n                        } else {\r\n                            Toast.makeText(requireActivity(), \"사용자 정보 삭제 실패ㅜㅜㅜ\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n        Typeface face = ResourcesCompat.getFont(requireContext(),R.font.jejugothic);\r\n        TextView title_of_dialog = new TextView(requireActivity().getApplicationContext());\r\n        title_of_dialog.setText(\"사용자 정보 삭제\");\r\n        title_of_dialog.setTypeface(face);\r\n        title_of_dialog.setTextSize(18f);\r\n        title_of_dialog.setTextColor(Color.BLACK);\r\n        title_of_dialog.setPadding(50, 50, 0, 30);\r\n        builder.setCustomTitle(title_of_dialog);\r\n\r\n        AlertDialog dialog = builder.show();\r\n        TextView msg = (TextView) dialog.findViewById(android.R.id.message);\r\n        msg.setTypeface(face);\r\n        Button btnPositive = dialog.getButton(Dialog.BUTTON_POSITIVE);\r\n        btnPositive.setTypeface(face);\r\n        Button btnNegative = dialog.getButton(Dialog.BUTTON_NEGATIVE);\r\n        btnNegative.setTypeface(face);\r\n    }\r\n\r\n    // 생년월일 datePicker\r\n    public void birthFun(EditText birth) {\r\n        birth.setOnClickListener(v -> {\r\n            Calendar cal = Calendar.getInstance();\r\n            int year = cal.get(Calendar.YEAR);\r\n            int month = cal.get(Calendar.MONTH);\r\n            int day = cal.get(Calendar.DAY_OF_MONTH);\r\n\r\n            DatePickerDialog dialog = new DatePickerDialog(\r\n                    requireActivity(), android.R.style.Theme_Holo_Light_Dialog_MinWidth,\r\n                    mDateSetListener, year, month, day);\r\n\r\n            dialog.getDatePicker().setMaxDate(cal.getTimeInMillis());\r\n            dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n            dialog.show();\r\n        });\r\n        mDateSetListener = (datePicker, year, month, day) -> {\r\n            month = month + 1;\r\n            String date = null;\r\n            String s_month = Integer.toString(month), s_day = Integer.toString(day);\r\n\r\n            if(month < 10) {\r\n                s_month = \"0\" + month;\r\n            }\r\n            if(day < 10) {\r\n                s_day = \"0\" + day;\r\n            }\r\n            date = year + \"/\" + s_month + \"/\" + s_day;\r\n            birth.setText(date);\r\n        };\r\n    }\r\n\r\n    // 사용자 만나이 계산\r\n    public int getAge(String birth) {\r\n        int year, month, day;\r\n        int age;\r\n\r\n        Calendar current = Calendar.getInstance();\r\n        int currentYear = current.get(Calendar.YEAR);\r\n        int currentMonth = current.get(Calendar.MONTH) + 1;\r\n        int currentDay = current.get(Calendar.DAY_OF_MONTH);\r\n\r\n        year = Integer.parseInt(birth.substring(0, 4));\r\n\r\n        if(birth.charAt(5) == '0') {\r\n            month = Integer.parseInt(birth.substring(6, 7));\r\n        } else {\r\n            month = Integer.parseInt(birth.substring(5, 7));\r\n        }\r\n\r\n        if(birth.charAt(8) == '0') {\r\n            day = Integer.parseInt(birth.substring(9, 10));\r\n        } else {\r\n            day = Integer.parseInt(birth.substring(8, 10));\r\n        }\r\n\r\n        age = currentYear - year;\r\n\r\n        // 생일이 지나지 않은 경우 -1\r\n        if(month * 100 + day > currentMonth * 100 + currentDay) {\r\n            age--;\r\n        }\r\n        return age;\r\n    }\r\n\r\n    // 사용자 치매 기준 점수 구하기\r\n    public int getRefScore(int age, String edu) {\r\n        int age_index = 0;\r\n        int ref_score = 0;\r\n\r\n        if(age < 60) {\r\n            age_index = 0;\r\n        } else if(age < 70) {\r\n            age_index = 1;\r\n        } else if(age < 80) {\r\n            age_index = 2;\r\n        } else {\r\n            age_index = 3;\r\n        }\r\n\r\n        eduAgeList = db.getAllEduTable();\r\n\r\n        switch (edu) {\r\n            case \"문맹\":\r\n                ref_score = eduAgeList.get(age_index).getIlliterate();\r\n                break;\r\n            case \"무학\":\r\n                ref_score = eduAgeList.get(age_index).getUneducated();\r\n                break;\r\n            case \"초등졸업\":\r\n                ref_score = eduAgeList.get(age_index).getElementarySchool();\r\n                break;\r\n            case \"중등졸업\":\r\n                ref_score = eduAgeList.get(age_index).getSecondarySchool();\r\n                break;\r\n            case \"고등졸업\":\r\n                ref_score = eduAgeList.get(age_index).getHighSchool();\r\n                break;\r\n            case \"대학졸업이상\":\r\n                ref_score = eduAgeList.get(age_index).getUniversity();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return ref_score;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/fragment/FragmentSetting.java b/app/src/main/java/fragment/FragmentSetting.java
--- a/app/src/main/java/fragment/FragmentSetting.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/fragment/FragmentSetting.java	(date 1667982265756)
@@ -4,14 +4,15 @@
 import android.app.AlertDialog;
 import android.app.DatePickerDialog;
 import android.app.Dialog;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.graphics.Color;
 import android.graphics.Typeface;
 import android.graphics.drawable.ColorDrawable;
+import android.os.Build;
 import android.os.Bundle;
-import android.util.TypedValue;
-import android.view.Gravity;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -21,23 +22,27 @@
 import android.widget.ArrayAdapter;
 import android.widget.Button;
 import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.ImageView;
+import android.widget.SeekBar;
 import android.widget.Spinner;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.annotation.RequiresApi;
 import androidx.core.content.res.ResourcesCompat;
 import androidx.fragment.app.Fragment;
 
 import com.cbnu.dementiadiagnosis.FirstActivity;
+import com.cbnu.dementiadiagnosis.Helper;
+import com.cbnu.dementiadiagnosis.MainSTT;
 import com.cbnu.dementiadiagnosis.R;
 
 import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.List;
-import java.util.Objects;
-import java.util.ResourceBundle;
 
 import database.DBHelper;
 import user.EducationAge;
@@ -46,7 +51,15 @@
 
 public class FragmentSetting extends Fragment implements View.OnClickListener {
 
-    TextView inf_retrieve, inf_delete;
+    MainSTT stt;
+    TextView inf_retrieve, inf_delete, setting_stt;
+    int start, end, speed;
+    SeekBar VOLUME, START, END;
+    TextView V_text, S_text, E_text;
+    ImageView helper_img;
+    ImageButton sttBtn;
+    EditText answer;
+    Helper helper;
     TextView inf_name;
     DBHelper db;
     String serial_code;
@@ -68,6 +81,7 @@
         inf_name = (TextView) view.findViewById(R.id.userIf_name);
         inf_retrieve = (TextView) view.findViewById(R.id.userIf_retrieve);
         inf_delete = (TextView) view.findViewById(R.id.userIf_delete);
+        setting_stt = view.findViewById(R.id.setting_stt);
 
         User user = db.getUserInf(serial_code);
         inf_name.setText(user.getName());
@@ -76,10 +90,13 @@
         inf_retrieve.setOnClickListener(this);
         // 삭제 버튼
         inf_delete.setOnClickListener(this);
+        // 음성인식 옵션 버튼
+        setting_stt.setOnClickListener(this);
 
         return view;
     }
 
+    @RequiresApi(api = Build.VERSION_CODES.N)
     @SuppressLint("NonConstantResourceId")
     @Override
     public void onClick(View v) {
@@ -90,9 +107,145 @@
             case R.id.userIf_delete:
                 onClickDelete();
                 break;
+            case R.id.setting_stt:
+                onClickSettingSTT();
+                break;
         }
     }
 
+    @RequiresApi(api = Build.VERSION_CODES.N)
+    public void onClickSettingSTT() {
+        View dialogView = getLayoutInflater().inflate(R.layout.dialog_stt, null);
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(requireActivity());
+        builder.setView(dialogView);
+
+        AlertDialog alertDialog = builder.create();
+        alertDialog.setContentView(R.layout.dialog_retrieve);
+        alertDialog.getWindow().setBackgroundDrawableResource(R.drawable.round_button);
+        WindowManager.LayoutParams params = new WindowManager.LayoutParams();
+        params.copyFrom(alertDialog.getWindow().getAttributes());
+        params.width = 900;
+        params.height = WindowManager.LayoutParams.WRAP_CONTENT;
+        alertDialog.show();
+        Window window = alertDialog.getWindow();
+        window.setAttributes(params);
+
+        start = SharedPreference.getSTT_start(requireActivity().getApplicationContext());
+        end = SharedPreference.getSTT_end(requireActivity().getApplicationContext());
+        speed = SharedPreference.getSTT_speed(requireActivity().getApplicationContext());
+
+        answer = dialogView.findViewById(R.id.result);
+        answer.setHint("음성인식을 점검해보세요!");
+        answer.setEnabled(false);
+        sttBtn = dialogView.findViewById(R.id.sttStart);
+        stt = new MainSTT(requireActivity(), answer, sttBtn, start, end, speed);
+
+        VOLUME = dialogView.findViewById(R.id.V_seek);
+        V_text = dialogView.findViewById(R.id.V_seekText);
+        START = dialogView.findViewById(R.id.S_seek);
+        S_text = dialogView.findViewById(R.id.S_seekText);
+        END = dialogView.findViewById(R.id.E_seek);
+        E_text = dialogView.findViewById(R.id.E_seekText);
+
+        VOLUME.setProgress(speed, true);
+        V_text.setText(Integer.toString(speed));
+        START.setProgress((start / 50) - 5, true);
+        S_text.setText(Integer.toString(start));
+        END.setProgress((end / 40) - 1, true);
+        E_text.setText(Integer.toString(end));
+
+        Button cancelBtn = (Button) dialogView.findViewById(R.id.cancelBtn);
+        Button retrieveBtn = (Button) dialogView.findViewById(R.id.retrieveBtn);
+
+        helper_img = dialogView.findViewById(R.id.img);
+
+        helper = new Helper(stt, helper_img, requireActivity());
+        helper.setTest();
+
+        VOLUME.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
+            @Override
+            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
+                V_text.setText(String.format("%d", seekBar.getProgress()));
+                speed = seekBar.getProgress();
+            }
+
+            @Override
+            public void onStartTrackingTouch(SeekBar seekBar) {
+
+            }
+
+            @Override
+            public void onStopTrackingTouch(SeekBar seekBar) {
+                stt.setSpeed(speed);
+            }
+        });
+
+        START.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
+            @Override
+            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
+                start = (5 + seekBar.getProgress()) * 50;
+                S_text.setText(String.format("%d", start));
+            }
+
+            @Override
+            public void onStartTrackingTouch(SeekBar seekBar) {
+
+            }
+
+            @Override
+            public void onStopTrackingTouch(SeekBar seekBar) {
+                stt.setStart(start);
+            }
+        });
+
+        END.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
+            @Override
+            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
+                if(start <= (seekBar.getProgress()+2) * 50){
+                    seekBar.setProgress((end/50)-2);
+                    E_text.setText(end);
+                    answer.setError("종료 볼륨은 시작보다 작아야합니다.");
+                }
+                else{
+                    end = (seekBar.getProgress()+2) * 50;
+                    E_text.setText(String.format("%d", end));
+                }
+            }
+
+            @Override
+            public void onStartTrackingTouch(SeekBar seekBar) {
+
+            }
+
+            @Override
+            public void onStopTrackingTouch(SeekBar seekBar) {
+                stt.setEnd(end);
+            }
+        });
+
+        sttBtn.setOnClickListener(new View.OnClickListener() {
+            public void onClick(View v) {
+                stt.start_STT();
+            }
+        });
+
+        cancelBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                alertDialog.dismiss();
+            }
+        });
+
+        retrieveBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                SharedPreference.setSttInf(requireActivity().getApplicationContext(), stt.getStart(), stt.getEnd(), stt.getSpeed());
+                alertDialog.dismiss();
+            }
+        });
+    }
+
     // 사용자 정보 수정 Dialog
     public void onClickRetrieve() {
         View dialogView = getLayoutInflater().inflate(R.layout.dialog_retrieve, null);
@@ -148,14 +301,14 @@
             }
         });
 
-        if(sex.equals("남")) {
+        if (sex.equals("남")) {
             spinnerSex.setSelection(0);
         } else {
             spinnerSex.setSelection(1);
         }
 
         int eduNum = 0;
-        switch(edu) {
+        switch (edu) {
             case "문맹":
                 eduNum = 0;
                 break;
@@ -188,7 +341,7 @@
         eduList.add("대학졸업이상");
 
         ArrayAdapter spinnerAdapterEdu;
-        spinnerAdapterEdu = new ArrayAdapter(requireActivity(),R.layout.spinner, eduList);
+        spinnerAdapterEdu = new ArrayAdapter(requireActivity(), R.layout.spinner, eduList);
         spinnerEdu.setAdapter(spinnerAdapterEdu);
 
         spinnerEdu.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
@@ -227,7 +380,7 @@
 
                 long result = db.updateData(serial_code, cname, cbirth, cage, csex, cedu, cscore);
 
-                if(result > -1) {
+                if (result > -1) {
                     Toast.makeText(requireActivity(), "수정되었습니다", Toast.LENGTH_SHORT).show();
                     alertDialog.dismiss();
                 } else {
@@ -263,7 +416,7 @@
                         // 삭제 이벤트 처리
                         long del_user = db.deleteUser(serial_code);
                         long del_score = db.deleteScore(serial_code);
-                        if(del_user > -1 && del_score > -1) {
+                        if (del_user > -1 && del_score > -1) {
                             dialog.dismiss();
                             Toast.makeText(requireActivity(), "사용자 정보 삭제 성공!!!", Toast.LENGTH_SHORT).show();
                             startActivity(new Intent(getActivity(), FirstActivity.class));
@@ -272,7 +425,7 @@
                         }
                     }
                 });
-        Typeface face = ResourcesCompat.getFont(requireContext(),R.font.jejugothic);
+        Typeface face = ResourcesCompat.getFont(requireContext(), R.font.jejugothic);
         TextView title_of_dialog = new TextView(requireActivity().getApplicationContext());
         title_of_dialog.setText("사용자 정보 삭제");
         title_of_dialog.setTypeface(face);
@@ -311,10 +464,10 @@
             String date = null;
             String s_month = Integer.toString(month), s_day = Integer.toString(day);
 
-            if(month < 10) {
+            if (month < 10) {
                 s_month = "0" + month;
             }
-            if(day < 10) {
+            if (day < 10) {
                 s_day = "0" + day;
             }
             date = year + "/" + s_month + "/" + s_day;
@@ -334,13 +487,13 @@
 
         year = Integer.parseInt(birth.substring(0, 4));
 
-        if(birth.charAt(5) == '0') {
+        if (birth.charAt(5) == '0') {
             month = Integer.parseInt(birth.substring(6, 7));
         } else {
             month = Integer.parseInt(birth.substring(5, 7));
         }
 
-        if(birth.charAt(8) == '0') {
+        if (birth.charAt(8) == '0') {
             day = Integer.parseInt(birth.substring(9, 10));
         } else {
             day = Integer.parseInt(birth.substring(8, 10));
@@ -349,7 +502,7 @@
         age = currentYear - year;
 
         // 생일이 지나지 않은 경우 -1
-        if(month * 100 + day > currentMonth * 100 + currentDay) {
+        if (month * 100 + day > currentMonth * 100 + currentDay) {
             age--;
         }
         return age;
@@ -360,11 +513,11 @@
         int age_index = 0;
         int ref_score = 0;
 
-        if(age < 60) {
+        if (age < 60) {
             age_index = 0;
-        } else if(age < 70) {
+        } else if (age < 70) {
             age_index = 1;
-        } else if(age < 80) {
+        } else if (age < 80) {
             age_index = 2;
         } else {
             age_index = 3;
@@ -397,3 +550,4 @@
         return ref_score;
     }
 }
+
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>dependencyResolutionManagement {\r\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n        maven { url 'https://jitpack.io' }\r\n        maven { url 'https://devrepo.kakao.com/nexus/content/groups/public/' }\r\n    }\r\n}\r\nrootProject.name = \"DementiaDiagnosis\"\r\ninclude ':app'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle b/settings.gradle
--- a/settings.gradle	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/settings.gradle	(date 1668152315503)
@@ -1,3 +1,27 @@
+pluginManagement {
+    repositories {
+        gradlePluginPortal()
+        google()
+        mavenCentral()
+        maven {
+            url 'https://maven.google.com'
+        }
+        jcenter()
+        maven { url 'https://maven.fabric.io/public' }
+    }
+}
+dependencyResolutionManagement {
+    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
+    repositories {
+        google()
+        mavenCentral()
+        maven {
+            url 'https://maven.google.com'
+        }
+        jcenter()
+        maven { url 'https://maven.fabric.io/public' }
+    }
+}
 dependencyResolutionManagement {
     repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
     repositories {
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n\r\n    defaultConfig {\r\n        applicationId \"com.cbnu.dementiadiagnosis\"\r\n        minSdk 21\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.4.2'\r\n    implementation 'com.google.android.material:material:1.6.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'com.tomergoldst.android:tooltips:1.1.1'\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.5'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.5'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n    implementation 'com.google.code.gson:gson:2.9.0'\r\n    implementation 'commons-lang:commons-lang:2.6'\r\n    implementation fileTree(include: ['*.jar'], dir: 'libs')\r\n    implementation files('libs/libDaumMapAndroid.jar')\r\n    implementation 'me.relex:circleindicator:1.2.2'\r\n    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'\r\n    implementation 'com.google.android.flexbox:flexbox:3.0.0'\r\n    implementation platform('com.google.firebase:firebase-bom:30.3.1')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'com.google.firebase:firebase-ml-modeldownloader'\r\n    implementation 'org.tensorflow:tensorflow-lite:2.3.0'\r\n    implementation 'com.squareup.retrofit2:retrofit:2.6.4'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.6.4'\r\n    implementation 'com.squareup.retrofit2:converter-scalars:2.6.4'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/build.gradle	(date 1668152385642)
@@ -56,4 +56,7 @@
     implementation 'com.squareup.retrofit2:retrofit:2.6.4'
     implementation 'com.squareup.retrofit2:converter-gson:2.6.4'
     implementation 'com.squareup.retrofit2:converter-scalars:2.6.4'
+    implementation 'noman.placesapi:placesAPI:1.1.3'
+    implementation 'com.google.android.gms:play-services-maps:18.0.2'
+    implementation 'com.google.android.gms:play-services-location:20.0.0'
 }
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.cbnu.dementiadiagnosis\">\r\n\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.DementiaDiagnosis\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <activity\r\n            android:name=\".FirstActivity\"\r\n            android:exported=\"true\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n         </activity>\r\n        <activity\r\n            android:name=\"simpleTest.S_execution\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\"simpleTest.S_language\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".Result\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".RegisterActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".HomeActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\"memoryQuiz.MainActivity\"\r\n            android:exported=\"false\"/>\r\n\r\n        <activity android:name=\".QuizHOME\" />\r\n        <activity android:name=\".Map\" />\r\n        <activity android:name=\"QuizPage.orientation_Page\" />\r\n        <activity android:name=\"QuizPage.memoryInput_Page\" />\r\n        <activity android:name=\"QuizPage.attention_Page\" />\r\n        <activity android:name=\"QuizPage.ExecutionPage\" />\r\n        <activity android:name=\"QuizPage.memoryOutput_Page\" />\r\n        <activity android:name=\"QuizPage.fluency_Page\" />\r\n        <activity android:name=\"QuizPage.SpaceTimePage\" />\r\n        <activity android:name=\"QuizPage.ComprehensionPage\" />\r\n        <activity android:name=\"QuizPage.LanguagePage\" />\r\n        <activity android:name=\"memoryQuiz.StartActivity\"/>\r\n        <activity android:name=\".VoiceBot\"/>\r\n\r\n        <activity android:name=\"simpleTest.S_orientation\" />\r\n        <activity android:name=\"simpleTest.S_fluency_Page\" />\r\n        <activity android:name=\"simpleTest.S_memoryInput\" />\r\n        <activity android:name=\"simpleTest.S_attention\" />\r\n        <activity android:name=\"simpleTest.S_memoryOutput\" />\r\n        <activity android:name=\"simpleTest.S_SpaceTime\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.kakao.sdk.AppKey\"\r\n            android:value=\"deeed953cb0bd5ce8fb32d971a0039d7\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/AndroidManifest.xml	(date 1668151323855)
@@ -8,22 +8,30 @@
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
 
     <application
-        android:allowBackup="true"
+        android:allowBackup="false"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/Theme.DementiaDiagnosis"
         android:usesCleartextTraffic="true">
+        <activity
+            android:name=".map_google"
+            android:exported="true" />
+
+        <meta-data
+            android:name="com.google.android.geo.API_KEY"
+            android:value="AIzaSyCWKc8mowzL-jCnE899RRDOIw_MG8nDj20" />
+
         <activity
             android:name=".FirstActivity"
-            android:exported="true" >
+            android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
-         </activity>
+        </activity>
         <activity
             android:name="simpleTest.S_execution"
             android:exported="false" />
@@ -41,10 +49,8 @@
             android:exported="false" />
         <activity
             android:name="memoryQuiz.MainActivity"
-            android:exported="false"/>
-
+            android:exported="false" />
         <activity android:name=".QuizHOME" />
-        <activity android:name=".Map" />
         <activity android:name="QuizPage.orientation_Page" />
         <activity android:name="QuizPage.memoryInput_Page" />
         <activity android:name="QuizPage.attention_Page" />
@@ -54,19 +60,14 @@
         <activity android:name="QuizPage.SpaceTimePage" />
         <activity android:name="QuizPage.ComprehensionPage" />
         <activity android:name="QuizPage.LanguagePage" />
-        <activity android:name="memoryQuiz.StartActivity"/>
-        <activity android:name=".VoiceBot"/>
-
+        <activity android:name="memoryQuiz.StartActivity" />
+        <activity android:name=".VoiceBot" />
         <activity android:name="simpleTest.S_orientation" />
         <activity android:name="simpleTest.S_fluency_Page" />
         <activity android:name="simpleTest.S_memoryInput" />
         <activity android:name="simpleTest.S_attention" />
         <activity android:name="simpleTest.S_memoryOutput" />
         <activity android:name="simpleTest.S_SpaceTime" />
-
-        <meta-data
-            android:name="com.kakao.sdk.AppKey"
-            android:value="deeed953cb0bd5ce8fb32d971a0039d7" />
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/cbnu/dementiadiagnosis/Map.java
===================================================================
diff --git a/app/src/main/java/com/cbnu/dementiadiagnosis/Map.java b/app/src/main/java/com/cbnu/dementiadiagnosis/Map.java
deleted file mode 100644
--- a/app/src/main/java/com/cbnu/dementiadiagnosis/Map.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ /dev/null	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
@@ -1,224 +0,0 @@
-package com.cbnu.dementiadiagnosis;
-
-import android.Manifest;
-import android.app.AlertDialog;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.ViewGroup;
-import android.widget.Toast;
-
-import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.core.app.ActivityCompat;
-import androidx.core.content.ContextCompat;
-
-import net.daum.mf.map.api.MapPoint;
-import net.daum.mf.map.api.MapView;
-
-
-public class Map extends AppCompatActivity implements MapView.CurrentLocationEventListener, MapView.MapViewEventListener{
-
-    private static final String LOG_TAG = "Map";
-    private static final int GPS_ENABLE_REQUEST_CODE = 2001;
-    private static final int PERMISSIONS_REQUEST_CODE = 100;
-    String[] REQUIRED_PERMISSIONS  = {Manifest.permission.ACCESS_FINE_LOCATION};
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.map);
-
-        MapView mapView = new MapView(this);
-
-        ViewGroup mapViewContainer = (ViewGroup) findViewById(R.id.map_view);
-        mapViewContainer.addView(mapView);
-        mapView.setMapViewEventListener(this);
-        mapView.setCurrentLocationEventListener(this);
-        if (!checkLocationServicesStatus()) {
-            showDialogForLocationServiceSetting();
-        }else {
-            checkRunTimePermission();
-        }
-        mapView.setCurrentLocationTrackingMode(MapView.CurrentLocationTrackingMode.TrackingModeOnWithHeading);
-    }
-
-    @Override
-    public void onCurrentLocationUpdate(MapView mapView, MapPoint currentLocation, float accuracyInMeters) {
-        MapPoint.GeoCoordinate mapPointGeo = currentLocation.getMapPointGeoCoord();
-        Log.i(LOG_TAG, String.format("MapView onCurrentLocationUpdate (%f,%f) accuracy (%f)", mapPointGeo.latitude, mapPointGeo.longitude, accuracyInMeters));
-    }
-
-    @Override
-    public void onCurrentLocationDeviceHeadingUpdate(MapView mapView, float v) {
-
-    }
-
-    @Override
-    public void onCurrentLocationUpdateFailed(MapView mapView) {
-
-    }
-
-    @Override
-    public void onCurrentLocationUpdateCancelled(MapView mapView) {
-
-    }
-
-    @Override
-    public void onMapViewInitialized(MapView mapView) {
-
-    }
-
-    @Override
-    public void onMapViewCenterPointMoved(MapView mapView, MapPoint mapPoint) {
-
-    }
-
-    @Override
-    public void onMapViewZoomLevelChanged(MapView mapView, int i) {
-
-    }
-
-    @Override
-    public void onMapViewSingleTapped(MapView mapView, MapPoint mapPoint) {
-
-    }
-
-    @Override
-    public void onMapViewDoubleTapped(MapView mapView, MapPoint mapPoint) {
-
-    }
-
-    @Override
-    public void onMapViewLongPressed(MapView mapView, MapPoint mapPoint) {
-
-    }
-
-    @Override
-    public void onMapViewDragStarted(MapView mapView, MapPoint mapPoint) {
-
-    }
-
-    @Override
-    public void onMapViewDragEnded(MapView mapView, MapPoint mapPoint) {
-
-    }
-
-    @Override
-    public void onMapViewMoveFinished(MapView mapView, MapPoint mapPoint) {
-
-    }
-    // ActivityCompat.requestPermissions를 사용한 퍼미션 요청의 결과를 리턴받는 메소드
-    @Override
-    public void onRequestPermissionsResult(int permsRequestCode,
-                                           @NonNull String[] permissions,
-                                           @NonNull int[] grandResults) {
-
-        super.onRequestPermissionsResult(permsRequestCode, permissions, grandResults);
-        if (permsRequestCode == PERMISSIONS_REQUEST_CODE && grandResults.length == REQUIRED_PERMISSIONS.length) {
-
-            // 요청 코드가 PERMISSIONS_REQUEST_CODE 이고, 요청한 퍼미션 개수만큼 수신되었다면
-            boolean check_result = true;
-
-            // 모든 퍼미션을 허용했는지 체크합니다.
-            for (int result : grandResults) {
-                if (result != PackageManager.PERMISSION_GRANTED) {
-                    check_result = false;
-                    break;
-                }
-            }
-
-            if (check_result) {
-                Log.d("@@@", "start");
-                //위치 값을 가져올 수 있음
-
-            } else {
-                // 거부한 퍼미션이 있다면 앱을 사용할 수 없는 이유를 설명해주고 앱을 종료합니다.2 가지 경우가 있다
-                if (ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[0])) {
-                    Toast.makeText(this, "퍼미션이 거부되었습니다. 앱을 다시 실행하여 퍼미션을 허용해주세요.", Toast.LENGTH_LONG).show();
-                    finish();
-                } else {
-                    Toast.makeText(this, "퍼미션이 거부되었습니다. 설정(앱 정보)에서 퍼미션을 허용해야 합니다. ", Toast.LENGTH_LONG).show();
-                }
-            }
-        }
-    }
-    void checkRunTimePermission(){
-
-        //런타임 퍼미션 처리
-        // 1. 위치 퍼미션을 가지고 있는지 체크합니다.
-        int hasFineLocationPermission = ContextCompat.checkSelfPermission(this,
-                Manifest.permission.ACCESS_FINE_LOCATION);
-
-        if (hasFineLocationPermission == PackageManager.PERMISSION_GRANTED ) {
-            // 2. 이미 퍼미션을 가지고 있다면
-            // ( 안드로이드 6.0 이하 버전은 런타임 퍼미션이 필요없기 때문에 이미 허용된 걸로 인식합니다.)
-            // 3.  위치 값을 가져올 수 있음
-
-        } else {  //2. 퍼미션 요청을 허용한 적이 없다면 퍼미션 요청이 필요합니다. 2가지 경우(3-1, 4-1)가 있습니다.
-            // 3-1. 사용자가 퍼미션 거부를 한 적이 있는 경우에는
-            if (ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[0])) {
-                // 3-2. 요청을 진행하기 전에 사용자가에게 퍼미션이 필요한 이유를 설명해줄 필요가 있습니다.
-                Toast.makeText(this, "이 앱을 실행하려면 위치 접근 권한이 필요합니다.", Toast.LENGTH_LONG).show();
-                // 3-3. 사용자게에 퍼미션 요청을 합니다. 요청 결과는 onRequestPermissionResult에서 수신됩니다.
-                ActivityCompat.requestPermissions(this, REQUIRED_PERMISSIONS,
-                        PERMISSIONS_REQUEST_CODE);
-            } else {
-                // 4-1. 사용자가 퍼미션 거부를 한 적이 없는 경우에는 퍼미션 요청을 바로 합니다.
-                // 요청 결과는 onRequestPermissionResult에서 수신됩니다.
-                ActivityCompat.requestPermissions(this, REQUIRED_PERMISSIONS,
-                        PERMISSIONS_REQUEST_CODE);
-            }
-        }
-    }
-    //여기부터는 GPS 활성화를 위한 메소드들
-    private void showDialogForLocationServiceSetting() {
-
-        AlertDialog.Builder builder = new AlertDialog.Builder(this);
-        builder.setTitle("위치 서비스 비활성화");
-        builder.setMessage("앱을 사용하기 위해서는 위치 서비스가 필요합니다.\n"
-                + "위치 설정을 수정하시겠습니까?");
-        builder.setCancelable(true);
-        builder.setPositiveButton("설정", new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int id) {
-                Intent callGPSSettingIntent
-                        = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
-                startActivityForResult(callGPSSettingIntent, GPS_ENABLE_REQUEST_CODE);
-            }
-        });
-        builder.setNegativeButton("취소", new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int id) {
-                dialog.cancel();
-            }
-        });
-        builder.create().show();
-    }
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-
-        switch (requestCode) {
-            case GPS_ENABLE_REQUEST_CODE:
-                //사용자가 GPS 활성 시켰는지 검사
-                if (checkLocationServicesStatus()) {
-                    if (checkLocationServicesStatus()) {
-                        Log.d("@@@", "onActivityResult : GPS 활성화 되있음");
-                        checkRunTimePermission();
-                        return;
-                    }
-                }
-                break;
-        }
-    }
-    public boolean checkLocationServicesStatus() {
-        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
-
-        return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)
-                || locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);
-    }
-}
\ No newline at end of file
Index: app/src/main/res/layout/map.xml
===================================================================
diff --git a/app/src/main/res/layout/map.xml b/app/src/main/res/layout/map.xml
deleted file mode 100644
--- a/app/src/main/res/layout/map.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ /dev/null	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".Map">
-
-    <RelativeLayout
-        android:id="@+id/map_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"/>
-
-</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_mic_press.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_mic_press.xml b/app/src/main/res/drawable/ic_mic_press.xml
new file mode 100644
--- /dev/null	(date 1667440842858)
+++ b/app/src/main/res/drawable/ic_mic_press.xml	(date 1667440842858)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@+id/background">
+        <shape android:shape="oval">
+            <solid android:color="?attr/colorPrimaryVariant"/>
+            <size android:width="130dp" android:height="130dp"/>
+        </shape>
+    </item>
+
+    <item android:id="@+id/mic">
+        <vector android:height="24dp" android:tint="#FFFFFF"
+            android:viewportHeight="24" android:viewportWidth="24"
+            android:width="24dp">
+        <path android:fillColor="@android:color/white" android:pathData="M12,14c1.66,0 2.99,-1.34 2.99,-3L15,5c0,-1.66 -1.34,-3 -3,-3S9,3.34 9,5v6c0,1.66 1.34,3 3,3zM17.3,11c0,3 -2.54,5.1 -5.3,5.1S6.7,14 6.7,11L5,11c0,3.41 2.72,6.23 6,6.72L11,21h2v-3.28c3.28,-0.48 6,-3.3 6,-6.72h-1.7z"/>
+    </vector>
+    </item>
+
+
+</layer-list>
Index: app/src/main/res/drawable/ic_mic_enable_f.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_mic_enable_f.xml b/app/src/main/res/drawable/ic_mic_enable_f.xml
new file mode 100644
--- /dev/null	(date 1667440842868)
+++ b/app/src/main/res/drawable/ic_mic_enable_f.xml	(date 1667440842868)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@+id/background">
+        <shape android:shape="oval">
+            <solid android:color="?attr/colorSecondaryVariant"/>
+            <size android:width="130dp" android:height="130dp"/>
+        </shape>
+    </item>
+
+    <item android:id="@+id/mic">
+        <vector android:height="24dp" android:tint="#FFFFFF"
+            android:viewportHeight="24" android:viewportWidth="24"
+            android:width="24dp">
+        <path android:fillColor="@android:color/white" android:pathData="M12,14c1.66,0 2.99,-1.34 2.99,-3L15,5c0,-1.66 -1.34,-3 -3,-3S9,3.34 9,5v6c0,1.66 1.34,3 3,3zM17.3,11c0,3 -2.54,5.1 -5.3,5.1S6.7,14 6.7,11L5,11c0,3.41 2.72,6.23 6,6.72L11,21h2v-3.28c3.28,-0.48 6,-3.3 6,-6.72h-1.7z"/>
+    </vector>
+    </item>
+
+
+</layer-list>
Index: app/src/main/res/drawable/selector_text_input_color.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/selector_text_input_color.xml b/app/src/main/res/drawable/selector_text_input_color.xml
new file mode 100644
--- /dev/null	(date 1667981271329)
+++ b/app/src/main/res/drawable/selector_text_input_color.xml	(date 1667981271329)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:color="@color/red" android:state_focused="true"/>
+    <item  android:color="@color/red" android:state_hovered="true"/>
+    <item  android:color="@color/red" android:state_enabled="false"/>
+    <item  android:color="?attr/colorSecondary"/>  <!-- unfocused -->
+</selector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_mic_selected.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_mic_selected.xml b/app/src/main/res/drawable/ic_mic_selected.xml
new file mode 100644
--- /dev/null	(date 1667440842709)
+++ b/app/src/main/res/drawable/ic_mic_selected.xml	(date 1667440842709)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:id="@+id/background">
+        <shape android:shape="oval">
+            <solid android:color="?attr/colorPrimaryVariant"/>
+            <size android:width="130dp" android:height="130dp"/>
+        </shape>
+    </item>
+
+    <item android:id="@+id/mic">
+        <vector android:height="24dp" android:tint="#FFFFFF"
+            android:viewportHeight="24" android:viewportWidth="24"
+            android:width="24dp">
+        <path android:fillColor="@android:color/white" android:pathData="M12,14c1.66,0 2.99,-1.34 2.99,-3L15,5c0,-1.66 -1.34,-3 -3,-3S9,3.34 9,5v6c0,1.66 1.34,3 3,3zM17.3,11c0,3 -2.54,5.1 -5.3,5.1S6.7,14 6.7,11L5,11c0,3.41 2.72,6.23 6,6.72L11,21h2v-3.28c3.28,-0.48 6,-3.3 6,-6.72h-1.7z"/>
+    </vector>
+    </item>
+
+
+</layer-list>
Index: app/src/main/res/layout/dialog_stt.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_stt.xml b/app/src/main/res/layout/dialog_stt.xml
new file mode 100644
--- /dev/null	(date 1667983907709)
+++ b/app/src/main/res/layout/dialog_stt.xml	(date 1667983907709)
@@ -0,0 +1,220 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:padding="10dp"
+    android:background="?attr/colorOnPrimary"
+    android:layout_gravity="center"
+    android:clipChildren="false"
+    android:clipToPadding="false">
+
+    <TextView
+        android:id="@+id/textView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="20dp"
+        android:layout_marginTop="15dp"
+        android:layout_marginBottom="25dp"
+        android:fontFamily="@font/jejugothic"
+        android:text="음성인식 설정"
+        android:textColor="?attr/colorOnTertiary"
+        android:textSize="16sp" />
+
+    <ImageView
+        android:id="@+id/img"
+        android:layout_width="100dp"
+        android:layout_height="100dp"
+        android:layout_below="@id/textView"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="0dp"
+        android:src="@drawable/helper_jump"
+        app:tint="?attr/colorPrimary" />
+
+    <RelativeLayout
+        android:id="@+id/volume"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/img"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp">
+
+        <TextView
+            android:id="@+id/V_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="20dp"
+            android:layout_marginBottom="5dp"
+            android:fontFamily="@font/jejugothic"
+            android:text="분석 간격"
+            android:textColor="?attr/colorOnTertiary"
+            android:textSize="10sp" />
+
+        <SeekBar
+            android:id="@+id/V_seek"
+            android:layout_width="250dp"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/V_text"
+            android:max="5"
+            android:progress="0"
+            android:progressDrawable="@drawable/seekbar1"
+            android:thumb="@drawable/seekbar1_thumb" />
+
+        <TextView
+            android:id="@+id/V_seekText"
+            android:layout_width="20dp"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/V_text"
+            android:layout_toEndOf="@+id/V_seek"
+            android:fontFamily="@font/jejugothic"
+            android:text="0"
+            android:textColor="?attr/colorOnTertiary"
+            android:textSize="10sp" />
+
+    </RelativeLayout>
+
+    <RelativeLayout
+        android:id="@+id/start"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/volume"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp">
+
+        <TextView
+            android:id="@+id/S_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="20dp"
+            android:layout_marginBottom="5dp"
+            android:fontFamily="@font/jejugothic"
+            android:text="인지 시작"
+            android:textColor="?attr/colorOnTertiary"
+            android:textSize="10sp" />
+
+        <SeekBar
+            android:id="@+id/S_seek"
+            android:layout_width="250dp"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/S_text"
+            android:max="5"
+            android:progress="0"
+            android:progressDrawable="@drawable/seekbar1"
+            android:thumb="@drawable/seekbar1_thumb" />
+
+        <TextView
+            android:id="@+id/S_seekText"
+            android:layout_width="20dp"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/S_text"
+            android:layout_toEndOf="@+id/S_seek"
+            android:fontFamily="@font/jejugothic"
+            android:text="0"
+            android:textColor="?attr/colorOnTertiary"
+            android:textSize="10sp" />
+    </RelativeLayout>
+
+    <RelativeLayout
+        android:id="@+id/end"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/start"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="10dp">
+
+        <TextView
+            android:id="@+id/E_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="20dp"
+            android:layout_marginBottom="5dp"
+            android:fontFamily="@font/jejugothic"
+            android:text="인지 종료"
+            android:textColor="?attr/colorOnTertiary"
+            android:textSize="10sp" />
+
+        <SeekBar
+            android:id="@+id/E_seek"
+            android:layout_width="250dp"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/E_text"
+            android:max="8"
+            android:progress="0"
+            android:progressDrawable="@drawable/seekbar1"
+            android:thumb="@drawable/seekbar1_thumb" />
+
+        <TextView
+            android:id="@+id/E_seekText"
+            android:layout_width="20dp"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/E_text"
+            android:layout_toEndOf="@+id/E_seek"
+            android:fontFamily="@font/jejugothic"
+            android:text="0"
+            android:textColor="?attr/colorOnTertiary"
+            android:textSize="10sp" />
+    </RelativeLayout>
+
+
+    <com.google.android.material.textfield.TextInputEditText
+        android:id="@+id/result"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/end"
+        android:layout_centerHorizontal="true"
+        android:layout_marginTop="30dp"
+        android:fontFamily="@font/jejugothic"
+        android:gravity="center"
+        android:letterSpacing="0.04"
+        android:lineSpacingExtra="10dp"
+        android:textSize="13sp" />
+
+    <ImageButton
+        android:id="@+id/sttStart"
+        android:layout_width="50dp"
+        android:layout_height="50dp"
+        android:layout_below="@id/result"
+        android:layout_centerInParent="true"
+        android:layout_marginTop="20dp"
+        android:background="@drawable/mic_selector" />
+
+    <RelativeLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/sttStart"
+        android:layout_centerInParent="true"
+        android:layout_marginTop="40dp"
+        android:layout_marginBottom="10dp"
+        >
+
+        <androidx.appcompat.widget.AppCompatButton
+            android:id="@+id/cancelBtn"
+            android:layout_width="95dp"
+            android:layout_height="35dp"
+            android:background="@drawable/round_button"
+            android:backgroundTint="?attr/colorPrimary"
+            android:fontFamily="@font/jejugothic"
+            android:gravity="center"
+            android:text="취 소"
+            android:textColor="?attr/colorOnPrimary"
+            android:textSize="15sp"
+            android:textStyle="bold" />
+
+        <androidx.appcompat.widget.AppCompatButton
+            android:id="@+id/retrieveBtn"
+            android:layout_width="95dp"
+            android:layout_height="35dp"
+            android:layout_marginStart="40dp"
+            android:layout_toEndOf="@+id/cancelBtn"
+            android:background="@drawable/round_button"
+            android:backgroundTint="?attr/colorPrimary"
+            android:fontFamily="@font/jejugothic"
+            android:gravity="center"
+            android:text="수 정"
+            android:textColor="?attr/colorOnPrimary"
+            android:textSize="15sp"
+            android:textStyle="bold" />
+    </RelativeLayout>
+
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/mic_selector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/mic_selector.xml b/app/src/main/res/drawable/mic_selector.xml
new file mode 100644
--- /dev/null	(date 1667440842880)
+++ b/app/src/main/res/drawable/mic_selector.xml	(date 1667440842880)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="true" android:drawable="@drawable/ic_mic_press" />
+    <item android:state_selected="true" android:drawable="@drawable/ic_mic_selected"/>
+    <item android:state_enabled="false" android:drawable="@drawable/ic_mic_enable_f" />
+    <item android:drawable="@drawable/ic_mic" />
+</selector>
\ No newline at end of file
Index: app/src/main/res/drawable/seekbar1.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/seekbar1.xml b/app/src/main/res/drawable/seekbar1.xml
new file mode 100644
--- /dev/null	(date 1667440838236)
+++ b/app/src/main/res/drawable/seekbar1.xml	(date 1667440838236)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <!--시크바 배경-->
+    <item android:id="@android:id/background">
+        <shape android:shape="line">    <!--선 : 길이6dp -->
+            <stroke android:width="6dp" android:color="#D5D5D5" />
+        </shape>
+    </item>
+
+    <!-- 시크바 배경2 -->
+    <item android:id="@android:id/secondaryProgress">
+        <clip>
+            <shape android:shape="line">
+                <stroke android:width="6dp" android:color="#B2CCFF" />
+            </shape>
+        </clip>
+    </item>
+
+    <!-- 시크바 프로그래스 -->
+    <item android:id="@android:id/progress" >
+        <clip>
+            <shape android:shape="line">
+                <stroke android:width="6dp" android:color="#6799FF" />
+            </shape>
+        </clip>
+    </item>
+</layer-list>
\ No newline at end of file
Index: app/src/main/res/drawable/seekbar1_thumb.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/seekbar1_thumb.xml b/app/src/main/res/drawable/seekbar1_thumb.xml
new file mode 100644
--- /dev/null	(date 1667440838249)
+++ b/app/src/main/res/drawable/seekbar1_thumb.xml	(date 1667440838249)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval"
+    android:useLevel="false">
+    <!-- 배경 -->
+    <solid
+        android:color="#D9E5FF"/>
+    <!-- 테두리 -->
+    <stroke
+        android:width="2dp"
+        android:color="#0054FF" />
+    <!-- 크기 -->
+    <size
+        android:width="13dp"
+        android:height="13dp"/>
+</shape>
\ No newline at end of file
Index: app/src/main/java/memoryQuiz/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package memoryQuiz;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.HashSet;\r\nimport java.util.Locale;\r\nimport java.util.Random;\r\nimport java.util.TimerTask;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.MemoryQuiz;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    int count = 0;\r\n    int checkCnt = 0;\r\n    int arrCnt = 0;\r\n    boolean checkFalse = false;\r\n    String[] ans = {};\r\n    TextView randomText;\r\n    TextView question;\r\n    TextView time;\r\n    EditText answer;\r\n    ImageButton sttBtn, submit;\r\n    ImageView helper_img;\r\n    ImageView shapeRes, shapeX;\r\n    Helper helper;\r\n    QuizPage QP;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    ProgressBar pro_bar;\r\n    MemoryQuiz memoryQuiz;\r\n    Handler hand;\r\n    Handler handTimer;\r\n    String random;\r\n    CoresTimerTask coresTimerTask;\r\n    private long backBtnTime = 0;\r\n    private static final long START_TIME_IN_MILLIS = 30000;\r\n    private long mTimeLeftInMillis = START_TIME_IN_MILLIS;\r\n    private CountDownTimer countDownTimer;\r\n    private boolean mTimerRunning;\r\n    private boolean stopCheck = false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        randomText = (TextView) findViewById(R.id.random_text);\r\n        question = (TextView) findViewById(R.id.question);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        time = (TextView) findViewById(R.id.time);\r\n        helper_img = (ImageView) findViewById(R.id.img);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        shapeRes = (ImageView) findViewById(R.id.shapeRes);\r\n        shapeX = (ImageView) findViewById(R.id.shapeX);\r\n        hand = new Handler();\r\n        handTimer = new Handler();\r\n        memoryQuiz = new MemoryQuiz();\r\n        coresTimerTask = new CoresTimerTask();\r\n\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        tts = new TTS(this, status -> {\r\n            tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            answer.setEnabled(false);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(false);\r\n            tts.UtteranceProgress(question.getText().toString(), 1000, answer, sttBtn, submit);\r\n        });\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, memoryQuiz.quiz);\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n        pro_bar.setProgress(20);\r\n\r\n        // stt 시작\r\n        sttBtn.setOnClickListener(v -> {\r\n            tts.isStopUtt = true;\r\n            tts.Stop();\r\n            stt.start_STT();\r\n        });\r\n\r\n        // 타이머 설정\r\n        handTimer.postDelayed(() -> {\r\n            if(!mTimerRunning) {\r\n                boolean checkTimerRun = coresTimerTask.hasRunStarted();\r\n                if (!checkTimerRun)\r\n                    startTimer();\r\n            }\r\n        }, 5000);\r\n        updateCountDownText();\r\n\r\n        // 제출버튼\r\n        submit.setOnClickListener(v -> {\r\n            answer.setEnabled(false);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(false);\r\n            checkFalse = false;\r\n            mTimerRunning = false;\r\n            checkCnt = 0;\r\n            count = 0;\r\n            arrCnt = 0;\r\n            stt.Stop();\r\n            tts.Stop();\r\n\r\n            if(countDownTimer != null) {\r\n                countDownTimer.cancel();\r\n            }\r\n\r\n            if (answer.getText().toString().equals(\"\")) { // 공백 답변 시\r\n                shapeX.setVisibility(View.VISIBLE);\r\n            } else {\r\n                String temp = answer.getText().toString().replace(\".\", \"\");\r\n                temp = temp.replace(\",\", \"\");\r\n                temp = temp.replace(\"?\", \"\");\r\n                temp = temp.trim().replaceAll(\"\\\\s+\", \" \");\r\n                Log.e(\"temp\", temp);\r\n                ans = temp.split(\" \");\r\n                Log.e(\"ans\", Arrays.toString(ans));\r\n                if (Arrays.asList(ans).contains(\"\")) {\r\n                    shapeX.setVisibility(View.VISIBLE);\r\n                } else {\r\n                    HashSet<String> hashSet = new HashSet<>(Arrays.asList(ans)); // 중복 항목 체크\r\n                    Log.e(\"hashSet\", hashSet.toString());\r\n                    ans = hashSet.toArray(new String[0]);\r\n                    if (ans.length < 3) {\r\n                        Log.e(\"ans_length\", Integer.toString(ans.length));\r\n                        shapeX.setVisibility(View.VISIBLE);\r\n                    } else {\r\n                        getResultSearch(ans, random, ans.length);\r\n                    }\r\n                }\r\n            }\r\n            hand.postDelayed(() -> {\r\n                Log.e(\"current_submit\", Integer.toString(QP.current));\r\n                switch (QP.current) {\r\n                    case 1:\r\n                        changeQuiz(40);\r\n                        break;\r\n                    case 2:\r\n                        changeQuiz(60);\r\n                        break;\r\n                    case 3:\r\n                        changeQuiz(80);\r\n                        break;\r\n                    case 4:\r\n                        changeQuiz(100);\r\n                        break;\r\n                    case 5:\r\n                        resultDialog();\r\n                    default:\r\n                        break;\r\n                }\r\n            }, 3000);\r\n        });\r\n    }\r\n\r\n    // 바뀔 문제 세팅\r\n    public void changeQuiz(int pro) {\r\n        Log.e(\"progress\", Integer.toString(pro));\r\n        pro_bar.setProgress(pro);\r\n        tts.isStopUtt = false;\r\n        QP.Submit();\r\n        question.setText(memoryQuiz.quiz.get(QP.current));\r\n        tts.speakOut(question.getText().toString());\r\n        tts.UtteranceProgress(question.getText().toString(), 1000, answer, sttBtn, submit);\r\n        random = generateString();\r\n        Log.e(\"random\", random);\r\n        randomText.setText(random);\r\n        answer.setText(\"\");\r\n        shapeRes.setVisibility(View.INVISIBLE);\r\n        shapeX.setVisibility(View.INVISIBLE);\r\n        count = 0;\r\n        checkCnt = 0;\r\n        arrCnt = 0;\r\n        time.setText(\"00 : 30\");\r\n        resetTimer();\r\n        handTimer.postDelayed(() -> {\r\n            if(!mTimerRunning) {\r\n                boolean checkTimerRun = coresTimerTask.hasRunStarted();\r\n                if (!checkTimerRun)\r\n                    startTimer();\r\n            }\r\n        }, 5000);\r\n    }\r\n\r\n    // 백과사전에서 단어 검색\r\n    public void getResultSearch(String[] keyword, String random, int size) {\r\n\r\n        ApiInterface apiInterface = ApiClient.getInstance().create(ApiInterface.class);\r\n        String clientID = \"EeyUFnx4V2vBUCESZorN\";\r\n        String clientSecret = \"voTm1j9DwE\";\r\n\r\n        for(int a = 0; a < size; a++) {\r\n            checkCnt++;\r\n            Log.e(\"checkCnt\", Integer.toString(checkCnt));\r\n            String result = getInitialSound(keyword[a]);\r\n            if(result != null)\r\n                Log.e(\"result\", result);\r\n            Log.e(\"search_random\", random);\r\n            assert result != null;\r\n            if (result.equals(random)) {\r\n                Call<String> call = apiInterface.getSearchResult(clientID, clientSecret, \"encyc.json\", keyword[a]);\r\n                String keywordNum = keyword[a];\r\n\r\n                call.enqueue(new Callback<String>() {\r\n                    @Override\r\n                    public void onResponse(Call<String> call, Response<String> response) {\r\n                        if (response.isSuccessful() && response.body() != null) {\r\n                            String result = response.body();\r\n                            try {\r\n                                JSONObject jsonObject = new JSONObject(result);\r\n                                JSONArray dkf = (JSONArray) jsonObject.get(\"items\");\r\n                                if(!dkf.isNull(0)) {\r\n                                    JSONObject obb = new JSONObject();\r\n                                    String[] titleArr = new String[5];\r\n\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        obb = (JSONObject) dkf.get(i);\r\n                                        String temp = (String) obb.get(\"title\");\r\n                                        String titleFilter = temp.replaceAll(\"<b>\", \"\");\r\n                                        String title = titleFilter.replaceAll(\"</b>\", \"\");\r\n                                        titleArr[i] = title;\r\n                                        if(titleArr[i].contains(keywordNum))\r\n                                            break;\r\n                                    }\r\n                                    Log.e(\"titleList\", Arrays.toString(titleArr));\r\n\r\n                                    for (String s : titleArr) {\r\n                                        if (s.contains(keywordNum)) {\r\n                                            count++;\r\n                                            Log.e(\"cnt\", Integer.toString(count));\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    arrCnt++;\r\n                                    Log.e(\"arrCnt\", Integer.toString(arrCnt));\r\n\r\n                                    //  count == 3, arrCnt == 4\r\n                                    if (count >= 3 && arrCnt >= size) {\r\n                                        Log.e(\"one\", \"true!\");\r\n                                        shapeRes.setVisibility(View.VISIBLE);\r\n                                        Toast.makeText(MainActivity.this, \"o 정답입니다!!\", Toast.LENGTH_SHORT).show();\r\n                                    } else if (count < 3 && arrCnt >= size) {\r\n                                        Log.e(\"two\", \"true!\");\r\n                                        shapeX.setVisibility(View.VISIBLE);\r\n                                        Toast.makeText(MainActivity.this, \"1x 틀렸습니다!!\", Toast.LENGTH_SHORT).show();\r\n                                    } /*else if (count < 3 && arrCnt >= size) {\r\n                                        Log.e(\"three\", \"true!\");\r\n                                        shapeX.setVisibility(View.VISIBLE);\r\n                                        Toast.makeText(MainActivity.this, \"2x 틀렸습니다!!\", Toast.LENGTH_SHORT).show();\r\n                                    }*/\r\n                                } else {\r\n                                    arrCnt++;\r\n                                    if (count < 3 && arrCnt >= size) {\r\n                                        Log.e(\"two\", \"true!\");\r\n                                        shapeX.setVisibility(View.VISIBLE);\r\n                                        Toast.makeText(MainActivity.this, \"1x 틀렸습니다!!\", Toast.LENGTH_SHORT).show();\r\n                                    }\r\n                                }\r\n                            } catch (JSONException e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        } else {\r\n                            Log.e(TAG, \"실패 : \" + response.body());\r\n                        }\r\n                    }\r\n                    @Override\r\n                    public void onFailure(Call<String> call, Throwable t) {\r\n                        Log.e(TAG, \"에러 : \" + t.getMessage());\r\n                    }\r\n                });\r\n            } else {\r\n                //checkFalse = true;\r\n                arrCnt++;\r\n                if (count >= 3 && arrCnt >= size) {\r\n                    Log.e(\"one\", \"true!\");\r\n                    shapeRes.setVisibility(View.VISIBLE);\r\n                    Toast.makeText(MainActivity.this, \"o 정답입니다!!\", Toast.LENGTH_SHORT).show();\r\n                } else if (count < 3 && arrCnt >= size) {\r\n                    Log.e(\"two\", \"true!\");\r\n                    shapeX.setVisibility(View.VISIBLE);\r\n                    Toast.makeText(MainActivity.this, \"1x 틀렸습니다!!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                //Log.e(\"checkFalse\", \"true\");\r\n            }\r\n        }\r\n    }\r\n\r\n    // 타이머 시작\r\n    public void startTimer() {\r\n        countDownTimer = new CountDownTimer(mTimeLeftInMillis, 1000) {\r\n            @Override\r\n            public void onTick(long millisUntilFinished) {\r\n                mTimeLeftInMillis = millisUntilFinished;\r\n                updateCountDownText();\r\n            }\r\n\r\n            @Override\r\n            public void onFinish() {\r\n                stt.Stop();\r\n                tts.Stop();\r\n                answer.setEnabled(false);\r\n                sttBtn.setEnabled(false);\r\n                tts.isStopUtt = true;\r\n                mTimerRunning = false;\r\n\r\n                if (answer.getText().toString().equals(\"\")) {\r\n                    shapeX.setVisibility(View.VISIBLE);\r\n                } else {\r\n                    String temp = answer.getText().toString().replace(\".\", \"\");\r\n                    temp = temp.replace(\",\", \"\");\r\n                    temp = temp.replace(\"?\", \"\");\r\n                    temp = temp.trim().replaceAll(\"\\\\s+\", \" \");\r\n                    Log.e(\"temp\", temp);\r\n                    ans = temp.split(\" \");\r\n                    Log.e(\"ans\", Arrays.toString(ans));\r\n                    if (Arrays.asList(ans).contains(\"\")) {\r\n                        shapeX.setVisibility(View.VISIBLE);\r\n                    } else {\r\n                        HashSet<String> hashSet = new HashSet<>(Arrays.asList(ans)); // 중복 항목 체크\r\n                        Log.e(\"hashSet\", hashSet.toString());\r\n                        ans = hashSet.toArray(new String[0]);\r\n                        if (ans.length < 3) {\r\n                            Log.e(\"ans_length\", Integer.toString(ans.length));\r\n                            shapeX.setVisibility(View.VISIBLE);\r\n                        } else {\r\n                            getResultSearch(ans, random, ans.length);\r\n                        }\r\n                    }\r\n                }\r\n                hand.postDelayed(() -> {\r\n                    Log.e(\"current_timer\", Integer.toString(QP.current));\r\n                    switch (QP.current) {\r\n                        case 1:\r\n                            changeQuiz(40);\r\n                            break;\r\n                        case 2:\r\n                            changeQuiz(60);\r\n                            break;\r\n                        case 3:\r\n                            changeQuiz(80);\r\n                            break;\r\n                        case 4:\r\n                            changeQuiz(100);\r\n                            break;\r\n                        case 5:\r\n                            countDownTimer.cancel();\r\n                            resultDialog();\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }, 3000);\r\n            }\r\n        }.start();\r\n\r\n        mTimerRunning = true;\r\n    }\r\n\r\n    // 타이머 업데이트\r\n    public void updateCountDownText() {\r\n        int minutes = (int) (mTimeLeftInMillis / 1000) / 60;\r\n        int seconds = (int) (mTimeLeftInMillis / 1000) % 60;\r\n\r\n        String timeLeftFormatted = String.format(Locale.getDefault(), \"%02d : %02d\", minutes, seconds);\r\n        Log.e(\"time\", timeLeftFormatted);\r\n        time.setText(timeLeftFormatted);\r\n    }\r\n\r\n    // 타이머 리셋\r\n    public void resetTimer() {\r\n        mTimeLeftInMillis = START_TIME_IN_MILLIS;\r\n        updateCountDownText();\r\n    }\r\n\r\n    // 랜덤 초성 생성\r\n    public String generateString() {\r\n        char[] chars = \"ㄱㄴㄷㄹㅁㅂㅅㅇㅈㅊㅋㅌㅍㅎ\".toCharArray();\r\n        StringBuilder stringBuilder = new StringBuilder();\r\n        Random random = new Random();\r\n        for (int i = 0; i < 2; i++) {\r\n            char c = chars[random.nextInt(chars.length)];\r\n            stringBuilder.append(c);\r\n        }\r\n        return stringBuilder.toString();\r\n    }\r\n\r\n    // 입력된 문자열에서 자음 추출\r\n    public String getInitialSound(String text) {\r\n        String[] chs = {\r\n                \"ㄱ\", \"ㄲ\", \"ㄴ\", \"ㄷ\", \"ㄸ\", \"ㄹ\", \"ㅁ\",\r\n                \"ㅂ\", \"ㅃ\", \"ㅅ\", \"ㅆ\", \"ㅇ\", \"ㅈ\", \"ㅉ\",\r\n                \"ㅊ\", \"ㅋ\", \"ㅌ\", \"ㅍ\", \"ㅎ\"\r\n        };\r\n        StringBuilder stringBuilder = new StringBuilder();\r\n\r\n        if(text.length() == 2) {\r\n            for(int i = 0; i < 2; i++) {\r\n                char chName = text.charAt(i);\r\n                if(chName >= 0xAC00) {\r\n                    int uniVal = chName - 0xAC00;\r\n                    int cho = ((uniVal - (uniVal % 28))/28)/21;\r\n\r\n                    stringBuilder.append(chs[cho]);\r\n                }\r\n            }\r\n            return stringBuilder.toString();\r\n        }\r\n        return \"ㄲㄲ\";\r\n    }\r\n\r\n    public void resultDialog() {\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_quiz_end, null);\r\n        Button restart = (Button) dialogView.findViewById(R.id.restartBtn);\r\n        Button end = (Button) dialogView.findViewById(R.id.endBtn);\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\r\n        builder.setView(dialogView);\r\n\r\n        AlertDialog alertDialog = builder.create();\r\n        alertDialog.setContentView(R.layout.dialog_quiz_end);\r\n        alertDialog.getWindow().setBackgroundDrawableResource(R.drawable.round_button);\r\n        WindowManager.LayoutParams params = new WindowManager.LayoutParams();\r\n        params.copyFrom(alertDialog.getWindow().getAttributes());\r\n        params.width = 900;\r\n        params.height = WindowManager.LayoutParams.WRAP_CONTENT;\r\n        alertDialog.show();\r\n        Window window = alertDialog.getWindow();\r\n        window.setAttributes(params);\r\n\r\n        // 다시하기\r\n        restart.setOnClickListener(v -> {\r\n            alertDialog.dismiss();\r\n            startActivity(new Intent(MainActivity.this, StartActivity.class));\r\n            finish();\r\n        });\r\n        // 끝내기\r\n        end.setOnClickListener(v -> {\r\n            alertDialog.dismiss();\r\n            finish();\r\n        });\r\n    }\r\n\r\n    public static class CoresTimerTask extends TimerTask {\r\n\r\n        private boolean hasStarted = false;\r\n\r\n        @Override\r\n        public void run() {\r\n            this.hasStarted = true;\r\n        }\r\n\r\n        public boolean hasRunStarted() {\r\n            return this.hasStarted;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            super.onBackPressed();\r\n            tts.Destroy();\r\n            countDownTimer.cancel();\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"퀴즈를 종료하시겠습니까?\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        question.setText(memoryQuiz.quiz.get(QP.current));\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        tts.speakOut(question.getText().toString());\r\n        tts.UtteranceProgress(question.getText().toString(), 1000, answer, sttBtn, submit);\r\n        Log.e(\"start_QP.current\", Integer.toString(QP.current));\r\n\r\n        if(stopCheck) {\r\n            QP.current--;\r\n        }\r\n\r\n        switch (QP.current) {\r\n            case 0:\r\n                changeQuiz(20);\r\n                break;\r\n            case 1:\r\n                changeQuiz(40);\r\n                break;\r\n            case 2:\r\n                changeQuiz(60);\r\n                break;\r\n            case 3:\r\n                changeQuiz(80);\r\n                break;\r\n            case 4:\r\n                changeQuiz(100);\r\n                break;\r\n            case 5:\r\n                countDownTimer.cancel();\r\n                resultDialog();\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        super.onStop();\r\n        tts.isStopUtt = true;\r\n        stopCheck = true;\r\n        mTimerRunning = false;\r\n        tts.Stop();\r\n        stt.Stop();\r\n\r\n        if(countDownTimer != null) {\r\n            countDownTimer.cancel();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        countDownTimer.cancel();\r\n        QP.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/memoryQuiz/MainActivity.java b/app/src/main/java/memoryQuiz/MainActivity.java
--- a/app/src/main/java/memoryQuiz/MainActivity.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/memoryQuiz/MainActivity.java	(date 1667793205786)
@@ -22,6 +22,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.cbnu.dementiadiagnosis.Helper;
+import com.cbnu.dementiadiagnosis.HomeActivity;
 import com.cbnu.dementiadiagnosis.MainSTT;
 import com.cbnu.dementiadiagnosis.R;
 import com.cbnu.dementiadiagnosis.TTS;
@@ -30,6 +31,7 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashSet;
 import java.util.Locale;
@@ -42,6 +44,7 @@
 import retrofit2.Call;
 import retrofit2.Callback;
 import retrofit2.Response;
+import user.SharedPreference;
 
 public class MainActivity extends AppCompatActivity {
 
@@ -103,7 +106,10 @@
             submit.setEnabled(false);
             tts.UtteranceProgress(question.getText().toString(), 1000, answer, sttBtn, submit);
         });
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
         QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, memoryQuiz.quiz);
 
         helper = new Helper(tts, stt, helper_img, this);
@@ -500,6 +506,8 @@
 
         if (0 <= gapTime && 2000 >= gapTime) {
             super.onBackPressed();
+            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);
+            startActivity(intent);
             tts.Destroy();
             countDownTimer.cancel();
             finish();
Index: app/src/main/res/layout/orientation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/before\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"15dp\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"-90\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/type\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginLeft=\"20dp\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:gravity=\"center\"\r\n        android:letterSpacing=\"0.04\"\r\n        android:lineSpacingExtra=\"10dp\"\r\n        android:text=\"지남력\"\r\n        android:textSize=\"18sp\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/submit\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:layout_marginEnd=\"15dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"90\" />\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progressBar\"\r\n        style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"5dp\"\r\n        android:layout_below=\"@+id/type\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:progress=\"0\"\r\n        android:progressDrawable=\"@drawable/progressbar\" />\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/textLayout\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"150dp\"\r\n        android:layout_below=\"@id/progressBar\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:gravity=\"center\"\r\n        android:layout_marginRight=\"30dp\"\r\n        android:layout_marginLeft=\"30dp\"\r\n        >\r\n\r\n        <TextView\r\n            android:id=\"@+id/question\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/jejugothic\"\r\n            android:gravity=\"center\"\r\n            android:letterSpacing=\"0.04\"\r\n            android:lineSpacingExtra=\"10dp\"\r\n            android:text=\"지금 있는 곳은 어디입니까?\"\r\n            android:textSize=\"20sp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/announce\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/question\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:fontFamily=\"@font/jejugothic\"\r\n            android:gravity=\"center\"\r\n            android:letterSpacing=\"0.04\"\r\n            android:lineSpacingExtra=\"10dp\"\r\n            android:text=\"\"\r\n            android:textColor=\"?attr/colorSecondaryVariant\"\r\n            android:textSize=\"15sp\" />\r\n    </RelativeLayout>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/img\"\r\n        android:layout_width=\"160dp\"\r\n        android:layout_height=\"160dp\"\r\n        android:layout_below=\"@id/textLayout\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"0dp\"\r\n        android:src=\"@drawable/helper_jump\"\r\n        app:tint=\"?attr/colorPrimary\" />\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/gray_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/img\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:background=\"@drawable/shape_round_bar\"\r\n        android:backgroundTint=\"?attr/colorSecondary\"\r\n        android:gravity=\"center\"\r\n        android:letterSpacing=\"0.04\"\r\n        android:lineSpacingExtra=\"10dp\">\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/goolelayout\"\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:gravity=\"center\"\r\n            android:letterSpacing=\"0.04\"\r\n            android:lineSpacingExtra=\"10dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/result\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:fontFamily=\"@font/jejugothic\"\r\n                android:gravity=\"center\"\r\n                android:letterSpacing=\"0.04\"\r\n                android:lineSpacingExtra=\"10dp\" />\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/sttStart\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"65dp\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:background=\"@drawable/ic_mic\" />\r\n\r\n        <androidx.appcompat.widget.AppCompatButton\r\n            android:id=\"@+id/donknow\"\r\n            android:layout_width=\"130dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"30dp\"\r\n            android:layout_marginBottom=\"30dp\"\r\n            android:background=\"@drawable/round_button\"\r\n            android:backgroundTint=\"?attr/colorTertiary\"\r\n            android:fontFamily=\"@font/jejugothic\"\r\n            android:gravity=\"center\"\r\n            android:text=\"잘모르겠어요\"\r\n            android:textColor=\"?attr/colorOnTertiary\"\r\n            android:textSize=\"14sp\" />\r\n\r\n    </RelativeLayout>\r\n</RelativeLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/orientation.xml b/app/src/main/res/layout/orientation.xml
--- a/app/src/main/res/layout/orientation.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/layout/orientation.xml	(date 1667440838116)
@@ -136,7 +136,7 @@
             android:layout_width="65dp"
             android:layout_height="65dp"
             android:layout_centerInParent="true"
-            android:background="@drawable/ic_mic" />
+            android:background="@drawable/mic_selector" />
 
         <androidx.appcompat.widget.AppCompatButton
             android:id="@+id/donknow"
Index: app/src/main/res/layout/pannel_page.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/pannel_page.xml b/app/src/main/res/layout/pannel_page.xml
new file mode 100644
--- /dev/null	(date 1667440838208)
+++ b/app/src/main/res/layout/pannel_page.xml	(date 1667440838208)
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <TextView
+        android:id="@+id/title"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="20dp"
+        android:fontFamily="@font/jejugothic"
+        android:padding="20dp"
+        android:letterSpacing="0.04"
+        android:lineSpacingExtra="15dp"
+        android:text="치매 정보"
+        android:textSize="18sp"
+        app:layout_constraintTop_toTopOf="parent" />
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"purple_200\">#FFBB86FC</color>\r\n    <color name=\"purple_500\">#FF6200EE</color>\r\n    <color name=\"purple_700\">#FF3700B3</color>\r\n    <color name=\"teal_200\">#FF03DAC5</color>\r\n    <color name=\"blue_purple_700\">#FF6168FF</color>\r\n    <color name=\"black\">#FF000000</color>\r\n    <color name=\"white\">#FFFFFFFF</color>\r\n    <!--<color name=\"main\">#FF6168FF</color>\r\n    <color name=\"lite_main\">#9499FF</color>-->\r\n    <color name=\"main\">#6799FF</color>\r\n    <color name=\"lite_main\">#B2CCFF</color>\r\n    <color name=\"grey\">#C3C3C3</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/values/colors.xml	(date 1667962422448)
@@ -7,6 +7,8 @@
     <color name="blue_purple_700">#FF6168FF</color>
     <color name="black">#FF000000</color>
     <color name="white">#FFFFFFFF</color>
+    <color name="red">#FF0000</color>
+    <color name="gray">#AFAFAF</color>
     <!--<color name="main">#FF6168FF</color>
     <color name="lite_main">#9499FF</color>-->
     <color name="main">#6799FF</color>
Index: app/src/main/res/layout/execution.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\"QuizPage.ExecutionPage\">\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/left\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"15dp\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"-90\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/type\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:text=\"지남력\"\r\n        android:textSize=\"18sp\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/right\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:layout_marginEnd=\"15dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"90\" />\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progressBar\"\r\n        style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"5dp\"\r\n        android:layout_below=\"@+id/type\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:progress=\"20\"\r\n        android:progressDrawable=\"@drawable/progressbar\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/question\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"70dp\"\r\n        android:layout_below=\"@id/progressBar\"\r\n        android:layout_marginStart=\"30dp\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_marginEnd=\"30dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:gravity=\"center\"\r\n        android:hint=\"Question\"\r\n        android:letterSpacing=\"0.04\"\r\n        android:lineSpacingExtra=\"10dp\"\r\n        android:textSize=\"20sp\" />\r\n\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/frame_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@id/gray_view\"\r\n        android:layout_below=\"@id/question\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:layout_marginStart=\"30dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:layout_marginEnd=\"30dp\"/>\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/gray_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:background=\"@drawable/shape_round_bar\"\r\n        android:backgroundTint=\"?attr/colorSecondary\">\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/LL\"\r\n                android:layout_marginTop=\"50px\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:gravity=\"center\"\r\n                android:orientation=\"horizontal\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <com.google.android.material.textfield.TextInputLayout\r\n                    android:id=\"@+id/textInput\"\r\n                    style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                    android:layout_width=\"250dp\"\r\n                    android:layout_height=\"65dp\"\r\n                    android:visibility=\"invisible\">\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/result\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:fontFamily=\"@font/jejugothic\"\r\n                        android:gravity=\"center\" />\r\n                </com.google.android.material.textfield.TextInputLayout>\r\n\r\n                <ImageButton\r\n                    android:id=\"@+id/sttStart\"\r\n                    android:layout_width=\"65dp\"\r\n                    android:layout_height=\"65dp\"\r\n                    android:layout_marginStart=\"20dp\"\r\n                    android:background=\"@drawable/ic_mic\"\r\n                    android:visibility=\"invisible\" />\r\n\r\n            </LinearLayout>\r\n            <androidx.appcompat.widget.AppCompatButton\r\n                android:id=\"@+id/donknow\"\r\n                android:layout_width=\"130dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:layout_below=\"@+id/LL\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:layout_marginTop=\"25dp\"\r\n                android:layout_marginBottom=\"30dp\"\r\n                android:background=\"@drawable/round_button\"\r\n                android:backgroundTint=\"?attr/colorTertiary\"\r\n                android:fontFamily=\"@font/jejugothic\"\r\n                android:gravity=\"center\"\r\n                android:text=\"잘모르겠어요\"\r\n                android:textColor=\"?attr/colorOnTertiary\"\r\n                android:textSize=\"14sp\" />\r\n        </RelativeLayout>\r\n\r\n    </FrameLayout>\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/execution.xml b/app/src/main/res/layout/execution.xml
--- a/app/src/main/res/layout/execution.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/layout/execution.xml	(date 1667440838300)
@@ -114,7 +114,7 @@
                     android:layout_width="65dp"
                     android:layout_height="65dp"
                     android:layout_marginStart="20dp"
-                    android:background="@drawable/ic_mic"
+                    android:background="@drawable/mic_selector"
                     android:visibility="invisible" />
 
             </LinearLayout>
Index: app/src/main/res/layout/standard_quiz_ui.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"#FFFFFF\">\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/left\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"15dp\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"-90\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/type\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:text=\"지남력\"\r\n        android:textSize=\"18sp\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/right\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:layout_marginEnd=\"15dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"90\" />\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progressBar\"\r\n        style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"5dp\"\r\n        android:layout_below=\"@+id/type\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:progress=\"20\"\r\n        android:progressDrawable=\"@drawable/progressbar\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/question\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/progressBar\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"70dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:text=\"오늘 날짜를 말씀해주세요.\"\r\n        android:textSize=\"20sp\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/img\"\r\n        android:layout_width=\"160dp\"\r\n        android:layout_height=\"160dp\"\r\n        android:layout_below=\"@id/question\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:background=\"@drawable/default_0\" />\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/gray_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_below=\"@+id/img\"\r\n        android:layout_marginTop=\"40dp\"\r\n        android:background=\"@drawable/shape_round_bar\"\r\n        android:backgroundTint=\"#F4F4F4\">\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/textInput\"\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"330dp\"\r\n            android:layout_height=\"70dp\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            android:layout_marginTop=\"30dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:fontFamily=\"@font/jejugothic\"\r\n                android:gravity=\"center\"\r\n                android:hint=\"답변이 여기에 나타납니다.\" />\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/mic\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"65dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:background=\"@drawable/ic_mic\" />\r\n\r\n        <androidx.appcompat.widget.AppCompatButton\r\n            android:layout_width=\"130dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_gravity=\"center|bottom\"\r\n            android:layout_marginBottom=\"40dp\"\r\n            android:background=\"@drawable/round_button\"\r\n            android:backgroundTint=\"#DFDFDF\"\r\n            android:fontFamily=\"@font/jejugothic\"\r\n            android:gravity=\"center\"\r\n            android:text=\"잘모르겠어요\"\r\n            android:textColor=\"#787878\"\r\n            android:textSize=\"14sp\" />\r\n\r\n    </FrameLayout>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/standard_quiz_ui.xml b/app/src/main/res/layout/standard_quiz_ui.xml
--- a/app/src/main/res/layout/standard_quiz_ui.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/layout/standard_quiz_ui.xml	(date 1667440842655)
@@ -96,7 +96,7 @@
             android:layout_height="65dp"
             android:layout_gravity="center"
             android:layout_marginTop="20dp"
-            android:background="@drawable/ic_mic" />
+            android:background="@drawable/mic_selector" />
 
         <androidx.appcompat.widget.AppCompatButton
             android:layout_width="130dp"
Index: app/src/main/res/drawable/ic_mic.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <item android:id=\"@+id/background\">\r\n        <shape android:shape=\"oval\">\r\n            <solid android:color=\"#5D88DF\"/>\r\n            <size android:width=\"130dp\" android:height=\"130dp\"/>\r\n        </shape>\r\n    </item>\r\n\r\n    <item android:id=\"@+id/mic\">\r\n        <vector android:height=\"24dp\" android:tint=\"#FFFFFF\"\r\n            android:viewportHeight=\"24\" android:viewportWidth=\"24\"\r\n            android:width=\"24dp\">\r\n        <path android:fillColor=\"@android:color/white\" android:pathData=\"M12,14c1.66,0 2.99,-1.34 2.99,-3L15,5c0,-1.66 -1.34,-3 -3,-3S9,3.34 9,5v6c0,1.66 1.34,3 3,3zM17.3,11c0,3 -2.54,5.1 -5.3,5.1S6.7,14 6.7,11L5,11c0,3.41 2.72,6.23 6,6.72L11,21h2v-3.28c3.28,-0.48 6,-3.3 6,-6.72h-1.7z\"/>\r\n    </vector>\r\n    </item>\r\n\r\n</layer-list>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_mic.xml b/app/src/main/res/drawable/ic_mic.xml
--- a/app/src/main/res/drawable/ic_mic.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/drawable/ic_mic.xml	(date 1667440842667)
@@ -2,7 +2,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
     <item android:id="@+id/background">
         <shape android:shape="oval">
-            <solid android:color="#5D88DF"/>
+            <solid android:color="?attr/colorPrimary"/>
             <size android:width="130dp" android:height="130dp"/>
         </shape>
     </item>
@@ -15,4 +15,5 @@
     </vector>
     </item>
 
+
 </layer-list>
Index: app/src/main/java/simpleTest/S_SpaceTime.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package simpleTest;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport QuizPage.SpaceTimeView;\r\nimport questions.spaceTime;\r\n\r\npublic class S_SpaceTime extends AppCompatActivity {\r\n    spaceTime ST;\r\n    SpaceTimeView STV;\r\n    TTS tts;\r\n    TextView question, type;\r\n    Button eraser;\r\n    ImageButton submit, undo;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n    simple_QuizPage QP;\r\n\r\n    private long backBtnTime = 0;\r\n    List<String> tem = new ArrayList<>();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.space_time);\r\n\r\n        question = (TextView) findViewById(R.id.announce);\r\n        type = (TextView) findViewById(R.id.type);\r\n        eraser = (Button) findViewById(R.id.eraser);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        ST = new spaceTime();\r\n        STV = (SpaceTimeView) findViewById(R.id.canvas);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n        QP = new simple_QuizPage();\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        ST.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        type.setText(\"시공간 기능\");\r\n        pro_bar.setProgress(35);\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                question.setText(ST.quiz.get(0));\r\n                tts.onInit(status, ST.quiz.get(0), \"default\", 1000);\r\n                tem.add(ST.quiz.get(1));\r\n                tem.add(ST.quiz.get(2));\r\n                tem.add(ST.quiz.get(3));\r\n                tts.UtteranceProgress(tem, \"continue\", question, submit);\r\n            }\r\n        });\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n                tem.add(ST.quiz.get(1));\r\n                tem.add(ST.quiz.get(2));\r\n                tem.add(ST.quiz.get(3));\r\n                tts.UtteranceProgress(tem, \"continue\", question, submit);\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                ST.Tscore = 0;\r\n\r\n                ST.scores[4] = ST.Tscore;\r\n\r\n                pro_bar.setProgress(40);\r\n\r\n                Intent intent = new Intent(getApplicationContext(), S_execution.class);\r\n                intent.putExtra(\"scores\", ST.scores);\r\n                startActivity(intent);\r\n                overridePendingTransition(0, 0);\r\n\r\n                finish();\r\n            }\r\n        });\r\n\r\n        eraser.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                STV.clear();\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                ST.Tscore = STV.getScore();\r\n\r\n                ST.scores[4] = ST.Tscore;\r\n\r\n                pro_bar.setProgress(40);\r\n\r\n                Intent intent = new Intent(getApplicationContext(), S_execution.class);\r\n                intent.putExtra(\"scores\", ST.scores);\r\n                startActivity(intent);\r\n                overridePendingTransition(0, 0);\r\n\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        if(tts != null){\r\n            tts.Stop();\r\n        }\r\n        tem.clear();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        if(!question.getText().toString().equals(ST.quiz.get(0))){\r\n            question.setText(ST.quiz.get(0));\r\n            tts.speakOut(ST.quiz.get(0), \"default\");\r\n            tem.add(ST.quiz.get(1));\r\n            tem.add(ST.quiz.get(2));\r\n            tem.add(ST.quiz.get(3));\r\n            tts.UtteranceProgress(tem, \"continue\", question, submit);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if(tts != null) {\r\n            tts.Destroy();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/simpleTest/S_SpaceTime.java b/app/src/main/java/simpleTest/S_SpaceTime.java
--- a/app/src/main/java/simpleTest/S_SpaceTime.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/simpleTest/S_SpaceTime.java	(date 1667793955850)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.Button;
@@ -58,7 +59,6 @@
         Intent intent;
         intent = getIntent();
         ST.scores = intent.getIntArrayExtra("scores");
-
         type.setText("시공간 기능");
         pro_bar.setProgress(35);
 
Index: app/src/main/java/simpleTest/S_memoryOutput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package simpleTest;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport java.util.Arrays;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.memoryOutput;\r\n\r\npublic class S_memoryOutput extends AppCompatActivity {\r\n    memoryOutput memo_out;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    boolean first[];\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n        final TextInputLayout TIL = findViewById(R.id.goolelayout);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        answer = TIL.getEditText();\r\n        answer.setEnabled(true);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        memo_out = new memoryOutput();\r\n        helper_img = findViewById(R.id.img);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        type.setText(\"기억회상\");\r\n        pro_bar.setProgress(55);\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        memo_out.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_out.quiz);\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        first = new boolean[memo_out.num];\r\n        Arrays.fill(first, false);\r\n        first[0] = true;\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                answer.setText(\"\");\r\n                QP.current ++;\r\n                if(QP.current == 0) QP.current = 6;\r\n                else{\r\n                    while (QP.current < 6){\r\n                        if(!first[QP.current]){\r\n                            question.setText(memo_out.quiz.get(QP.current));\r\n                            tts.speakOut(question.getText().toString());\r\n                            break;\r\n                        }\r\n                        else QP.current ++;\r\n                    }\r\n                }\r\n                if(QP.current == 6){\r\n                    pro_bar.setProgress(70);\r\n                    memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), S_language.class);\r\n                    intent.putExtra(\"scores\", memo_out.scores);\r\n                    startActivity(intent);\r\n                    overridePendingTransition(0, 0);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"기억력 항목에서는 뒤로가기를 할 수 없습니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                // 설정 초기화\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString();\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else{\r\n                    answer.setText(\"\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(60);\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_out.crr_ans[0].get(i);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                first[i+1] = true;\r\n                                memo_out.Tscore += 2;\r\n                            }\r\n                            else if(QP.correct == \"11시\"){\r\n                                if(QP.user_ans.contains(\"열 한시\") || QP.user_ans.contains(\"열한시\")){\r\n                                    first[i+1] = true;\r\n                                    memo_out.Tscore += 2;\r\n                                }\r\n                            }\r\n                        }\r\n                        if(memo_out.Tscore == 10){ // 점수가 만점이면 액티비티 종료.\r\n                            memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                            Intent intent = new Intent(getApplicationContext(), S_language.class);\r\n                            intent.putExtra(\"scores\", memo_out.scores);\r\n                            startActivity(intent);\r\n                            overridePendingTransition(0, 0);\r\n\r\n                            finish();\r\n                        }\r\n                        else{\r\n                            while (QP.current < 6){\r\n                                if(!first[QP.current]){\r\n                                    question.setText(memo_out.quiz.get(QP.current));\r\n                                    tts.speakOut(question.getText().toString());\r\n                                    break;\r\n                                }\r\n                                else QP.current ++;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        QP.correct = memo_out.crr_ans[QP.current].get(0);\r\n                        if(QP.user_ans.contains(QP.correct)){\r\n                            memo_out.Tscore ++;\r\n                        }\r\n                        else if(QP.correct == \"11시\"){\r\n                            if(QP.user_ans.contains(\"열 한시\") || QP.user_ans.contains(\"열한시\")){\r\n                                memo_out.Tscore ++;\r\n                            }\r\n                        }\r\n                        QP.current ++;\r\n                        while (QP.current < 6){\r\n                            if(!first[QP.current]){\r\n                                question.setText(memo_out.quiz.get(QP.current));\r\n                                tts.speakOut(question.getText().toString());\r\n                                break;\r\n                            }\r\n                            else QP.current ++;\r\n                        }\r\n                        if(QP.current == 6){\r\n                            pro_bar.setProgress(70);\r\n                            memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                            Intent intent = new Intent(getApplicationContext(), S_language.class);\r\n                            intent.putExtra(\"scores\", memo_out.scores);\r\n                            startActivity(intent);\r\n                            overridePendingTransition(0, 0);\r\n\r\n                            finish();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        if(QP.current < 2){\r\n            QP.Start();\r\n            tts.speakOut(question.getText().toString());\r\n        }\r\n        else{\r\n            tts.speakOut(question.getText().toString());\r\n            sttBtn.setEnabled(false);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/simpleTest/S_memoryOutput.java b/app/src/main/java/simpleTest/S_memoryOutput.java
--- a/app/src/main/java/simpleTest/S_memoryOutput.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/simpleTest/S_memoryOutput.java	(date 1667793955668)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.EditText;
@@ -23,10 +24,12 @@
 import com.cbnu.dementiadiagnosis.TTS;
 import com.google.android.material.textfield.TextInputLayout;
 
+import java.util.ArrayList;
 import java.util.Arrays;
 
 import QuizPage.QuizPage;
 import questions.memoryOutput;
+import user.SharedPreference;
 
 public class S_memoryOutput extends AppCompatActivity {
     memoryOutput memo_out;
@@ -79,7 +82,11 @@
                 tts.onInit(status, question.getText().toString(), "Done", 1000);
             }
         });
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_out.quiz);
 
         helper = new Helper(tts, stt, helper_img, this);
Index: app/src/main/java/simpleTest/S_memoryInput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package simpleTest;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.memoryInput;\r\n\r\npublic class S_memoryInput extends AppCompatActivity {\r\n    memoryInput memo_in;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    TextInputEditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    boolean isfirst = true;\r\n\r\n    ArrayList<String> first, second;\r\n    List<String> tem = new ArrayList<>();\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n\r\n        question = findViewById(R.id.question);\r\n        type = findViewById(R.id.type);\r\n        answer = findViewById(R.id.result);\r\n        answer.setEnabled(true);\r\n        sttBtn = findViewById(R.id.sttStart);\r\n        submit = findViewById(R.id.submit);\r\n        undo = findViewById(R.id.before);\r\n        helper_img = findViewById(R.id.img);\r\n        memo_in = new memoryInput();\r\n        pro_bar = findViewById(R.id.progressBar);\r\n        donKnow = findViewById(R.id.donknow);\r\n\r\n        type.setText(\"기억등록\");\r\n        pro_bar.setProgress(10);\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        memo_in.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                int[] time = {1000, 500};\r\n                tts.onInit(status, question.getText().toString(), \"continue\", 1000);\r\n                tem.add(\"민수는.....자전거를 타고.....공원에 가서....11시부터...야구를 했다.\");\r\n                tts.UtteranceProgress(tem, \"continue\", time, sttBtn, submit);\r\n            }\r\n        });\r\n\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_in.quiz);\r\n        first = new ArrayList<>();\r\n        second = new ArrayList<>();\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        answer.setEnabled(false);\r\n        answer.setHint(\"이 항목은 자판 입력이 불가능합니다.\");\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                answer.setText(\"\");\r\n                if(QP.current == 0){\r\n                    pro_bar.setProgress(15);\r\n                    tts.isStopUtt = false;\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(false);\r\n\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString(), \"default\");\r\n                    tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n                }\r\n                else if(QP.current == 1){\r\n                    pro_bar.setProgress(20);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                    tts.UtteranceProgress();\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(true);\r\n                }\r\n                else{\r\n                    memo_in.scores[2] = memo_in.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), S_attention.class);\r\n                    intent.putExtra(\"scores\", memo_in.scores);\r\n                    startActivity(intent);\r\n                    overridePendingTransition(0, 0);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"기억력 항목에서는 뒤로가기를 할 수 없습니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                isfirst = false;\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString();\r\n\r\n                if(QP.user_ans.isEmpty() && QP.current != 2){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else{\r\n                    answer.setText(\"\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(15);\r\n                        tts.isStopUtt = false;\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(false);\r\n\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_in.crr_ans[i].get(0);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                first.add(QP.correct);\r\n                            }\r\n                        }\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString(), \"default\");\r\n                        tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n                    }\r\n                    else if(QP.current == 1){\r\n                        pro_bar.setProgress(20);\r\n                        tts.isStopUtt = false;\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_in.crr_ans[i].get(0);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                second.add(QP.correct);\r\n                            }\r\n                        }\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                        tts.UtteranceProgress();\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(true);\r\n                    }\r\n                    else{\r\n                        memo_in.scores[2] = memo_in.Tscore;\r\n\r\n                        Intent intent = new Intent(getApplicationContext(), S_attention.class);\r\n                        intent.putExtra(\"scores\", memo_in.scores);\r\n                        startActivity(intent);\r\n                        overridePendingTransition(0, 0);\r\n\r\n                        finish();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        answer.setEnabled(false);\r\n        answer.setHint(\"이 항목은 자판 입력이 불가능합니다.\");\r\n\r\n        if(QP.current < 2){\r\n            question.setText(memo_in.quiz.get(QP.current));\r\n            answer.setText(\"\");\r\n            tts.speakOut(question.getText().toString(),\"continue\");\r\n            tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n        }\r\n        else{\r\n            tts.speakOut(question.getText().toString());\r\n            tts.UtteranceProgress(\"다음 단계로 이동하시려면\\n아래 파란 상자를 눌러주세요!\", sttBtn, submit);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/simpleTest/S_memoryInput.java b/app/src/main/java/simpleTest/S_memoryInput.java
--- a/app/src/main/java/simpleTest/S_memoryInput.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/simpleTest/S_memoryInput.java	(date 1667793955584)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.ImageButton;
@@ -27,6 +28,7 @@
 
 import QuizPage.QuizPage;
 import questions.memoryInput;
+import user.SharedPreference;
 
 public class S_memoryInput extends AppCompatActivity {
     memoryInput memo_in;
@@ -73,6 +75,7 @@
         intent = getIntent();
         memo_in.scores = intent.getIntArrayExtra("scores");
 
+
         tts = new TTS(this, new TextToSpeech.OnInitListener() {
             @Override
             public void onInit(int status) {
@@ -84,7 +87,11 @@
         });
 
 
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_in.quiz);
         first = new ArrayList<>();
         second = new ArrayList<>();
Index: app/src/main/java/simpleTest/S_attention.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package simpleTest;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.attention;\r\n\r\npublic class S_attention extends AppCompatActivity {\r\n    attention att;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    simple_QuizPage QP;\r\n    TextView question, type;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    String[] U_answers;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n    List<String> quiz;\r\n    List<String>[] crr_ans;\r\n    int q_num;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    List<String> tem = new ArrayList<>();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        att = new attention();\r\n        helper_img = findViewById(R.id.img);\r\n        U_answers = new String[1];\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n        q_num = new Integer(1);\r\n        quiz = new ArrayList<>();\r\n        crr_ans = new ArrayList[1];\r\n        for (int i = 0; i < 1; i++) {\r\n            crr_ans[i] = new ArrayList<>();\r\n        }\r\n\r\n        quiz.add(\"제가 불러드리는 말을\\n끝에서부터 거꾸로 따라 해 주세요.\");\r\n        crr_ans[0].add(\"산강수금\");\r\n\r\n        type.setText(\"주의력\");\r\n        pro_bar.setProgress(20);\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        Arrays.fill(U_answers, \"\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        att.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tem.clear();\r\n                tts.onInit(status, question.getText().toString(), \"default\", 1000);\r\n                tem.add(\"금수강산\");\r\n                tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                sttBtn.setEnabled(false);\r\n                submit.setEnabled(false);\r\n                answer.setEnabled(false);\r\n            }\r\n        });\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new simple_QuizPage(stt, tts, question, answer, sttBtn, submit, quiz);\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                question.setText(att.quiz.get(QP.current));\r\n                tts.speakOut(question.getText().toString(),\"default\");\r\n                if(QP.current == 0){\r\n                    tem.clear();\r\n                    tem.add(\"금수강산\");\r\n                    tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                }\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                answer.setText(\"\");\r\n                if(QP.current == 0){\r\n                    pro_bar.setProgress(35);\r\n\r\n                    att.Tscore = cal_score(U_answers, crr_ans);\r\n\r\n                    att.scores[3] = att.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), S_SpaceTime.class);\r\n                    intent.putExtra(\"scores\", att.scores);\r\n                    startActivity(intent);\r\n                    overridePendingTransition(0, 0);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                if(QP.current == 0){\r\n                    Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString()\r\n                        .replace(\" \",\"\")\r\n                        .replace(\",\",\"\")\r\n                        .replace(\".\", \"\");\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else\r\n                {\r\n                    U_answers[QP.current] = QP.user_ans;\r\n                    answer.setText(\"\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(35);\r\n\r\n                        att.Tscore = cal_score(U_answers, crr_ans);\r\n\r\n                        att.scores[3] = att.Tscore;\r\n\r\n                        Intent intent = new Intent(getApplicationContext(), S_SpaceTime.class);\r\n                        intent.putExtra(\"scores\", att.scores);\r\n                        startActivity(intent);\r\n                        overridePendingTransition(0, 0);\r\n\r\n                        finish();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    int cal_score(String[] ans, List<String>[] crr){\r\n        int score = 0;\r\n        if(ans.length == crr.length){\r\n            for(int i = 0; i < ans.length; i++){\r\n                if(crr[i].size() > 1){\r\n                    for(String s : crr[i]){\r\n                        if(ans[i].contains(s)) score ++;\r\n                    }\r\n                }\r\n                else if(ans[i].contains(crr[i].get(0))) score ++;\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        QP.Start();\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        answer.setEnabled(false);\r\n        tts.speakOut(question.getText().toString(),\"default\");\r\n        if(QP.current == 0){\r\n            tem.clear();\r\n            tem.add(\"금수강산\");\r\n            tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/simpleTest/S_attention.java b/app/src/main/java/simpleTest/S_attention.java
--- a/app/src/main/java/simpleTest/S_attention.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/simpleTest/S_attention.java	(date 1667793955553)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.EditText;
@@ -28,6 +29,7 @@
 
 import QuizPage.QuizPage;
 import questions.attention;
+import user.SharedPreference;
 
 public class S_attention extends AppCompatActivity {
     attention att;
@@ -98,7 +100,11 @@
                 answer.setEnabled(false);
             }
         });
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         QP = new simple_QuizPage(stt, tts, question, answer, sttBtn, submit, quiz);
 
         helper = new Helper(tts, stt, helper_img, this);
Index: app/src/main/java/simpleTest/S_language.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package simpleTest;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.ClipData;\r\nimport android.content.ClipDescription;\r\nimport android.content.Intent;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.DragEvent;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport questions.LanguageFunc;\r\n\r\npublic class S_language extends AppCompatActivity {\r\n\r\n    LanguageFunc languageFunc;\r\n    TTS tts;\r\n    TextView question, type;\r\n    String Okay = \"\";\r\n    ProgressBar pro_bar;\r\n    ImageView mImg, image2, image3, image4, image5;\r\n    ImageButton beforeBtn, nextBtn;\r\n    AppCompatButton donKnow;\r\n    simple_QuizPage QP;\r\n\r\n    private static final String IMAGEVIEW_TAG = \"드래그 이미지\";\r\n    private int resLeft = 0, resRight = 0; // 정답 체크\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.s_language);\r\n\r\n        Log.d(\"languageFunc\", \"start\");\r\n        languageFunc = new LanguageFunc();\r\n        mImg = (ImageView) findViewById(R.id.image);\r\n        image2 = (ImageView) findViewById(R.id.image2);\r\n        image3 = (ImageView) findViewById(R.id.image3);\r\n        image4 = (ImageView) findViewById(R.id.image4);\r\n        image5 = (ImageView) findViewById(R.id.image5);\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        beforeBtn = (ImageButton) findViewById(R.id.before);\r\n        nextBtn = (ImageButton) findViewById(R.id.next);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n        QP = new simple_QuizPage();\r\n\r\n        type.setText(\"언어기능\");\r\n        pro_bar.setProgress(80);\r\n\r\n        mImg.setTag(IMAGEVIEW_TAG);\r\n        image2.setTag(IMAGEVIEW_TAG);\r\n        image3.setTag(IMAGEVIEW_TAG);\r\n        image4.setTag(IMAGEVIEW_TAG);\r\n        image5.setTag(IMAGEVIEW_TAG);\r\n\r\n        mImg.setOnLongClickListener(new S_language.LongClickListener());\r\n        image2.setOnLongClickListener(new S_language.LongClickListener());\r\n        image3.setOnLongClickListener(new S_language.LongClickListener());\r\n        image4.setOnLongClickListener(new S_language.LongClickListener());\r\n        image5.setOnLongClickListener(new S_language.LongClickListener());\r\n\r\n        findViewById(R.id.left).setOnDragListener(\r\n                new S_language.DragListener());\r\n        findViewById(R.id.right).setOnDragListener(\r\n                new S_language.DragListener());\r\n        findViewById(R.id.ball).setOnDragListener(\r\n                new S_language.DragListener());\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        languageFunc.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString());\r\n            }\r\n        });\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                languageFunc.Tscore = 0;\r\n\r\n                languageFunc.scores[7] = languageFunc.Tscore;\r\n\r\n                Intent intent = new Intent(getApplicationContext(), S_fluency_Page.class);\r\n                intent.putExtra(\"scores\", languageFunc.scores);\r\n                startActivity(intent);\r\n                overridePendingTransition(0, 0);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        beforeBtn.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        nextBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                tts.Stop();\r\n                if(resLeft == 2 && resRight == 3) {\r\n                    languageFunc.Tscore = 1;\r\n                } else {\r\n                    languageFunc.Tscore = 0;\r\n                }\r\n                languageFunc.scores[7] = languageFunc.Tscore;\r\n\r\n                Intent intent = new Intent(getApplicationContext(), S_fluency_Page.class);\r\n                intent.putExtra(\"scores\", languageFunc.scores);\r\n                startActivity(intent);\r\n                overridePendingTransition(0, 0);\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    private static final class LongClickListener implements\r\n            View.OnLongClickListener {\r\n\r\n        public boolean onLongClick(View view) {\r\n\r\n            // 태그 생성\r\n            ClipData.Item item = new ClipData.Item(\r\n                    (CharSequence) view.getTag());\r\n\r\n            String[] mimeTypes = { ClipDescription.MIMETYPE_TEXT_PLAIN };\r\n            ClipData data = new ClipData(view.getTag().toString(),\r\n                    mimeTypes, item);\r\n            View.DragShadowBuilder shadowBuilder = new View.DragShadowBuilder(\r\n                    view);\r\n\r\n            view.startDrag(data, // data to be dragged\r\n                    shadowBuilder, // drag shadow\r\n                    view, // 드래그 드랍할  Vew\r\n                    0 // 필요없은 플래그\r\n            );\r\n\r\n            view.setVisibility(View.VISIBLE);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    class DragListener implements View.OnDragListener {\r\n        @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n        Drawable normalShape = getResources().getDrawable(\r\n                R.drawable.shape_exe);\r\n        @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n        Drawable targetShape = getResources().getDrawable(\r\n                R.drawable.target_shape);\r\n        @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n        Drawable roundNShape = getResources().getDrawable(\r\n                R.drawable.round_button);\r\n        @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n        Drawable roundTShape = getResources().getDrawable(\r\n                R.drawable.round_gray);\r\n\r\n        public boolean onDrag(View v, DragEvent event) {\r\n            // 이벤트 시작\r\n            switch (event.getAction()) {\r\n                // 이미지를 드래그 시작될때\r\n                case DragEvent.ACTION_DRAG_STARTED:\r\n                    Log.d(\"DragClickListener\", \"ACTION_DRAG_STARTED\");\r\n                    break;\r\n\r\n                // 드래그한 이미지를 옮길려는 지역으로 들어왔을때\r\n                case DragEvent.ACTION_DRAG_ENTERED:\r\n                    // 이미지가 들어왔다는 것을 알려주기 위해 배경이미지 변경\r\n                    if(v == findViewById(R.id.left)) {\r\n                        v.setBackground(targetShape);\r\n                    } else if(v == findViewById(R.id.right)) {\r\n                        v.setBackground(targetShape);\r\n                    } else {\r\n                        v.setBackground(roundTShape);\r\n                    }\r\n                    Log.d(\"DragClickListener\", \"ACTION_DRAG_ENTERED\");\r\n                    break;\r\n\r\n                // 드래그한 이미지가 영역을 빠져 나갈때\r\n                case DragEvent.ACTION_DRAG_EXITED:\r\n                    if(v == findViewById(R.id.left)) {\r\n                        v.setBackground(normalShape);\r\n                        resLeft--;\r\n                    } else if(v == findViewById(R.id.right)) {\r\n                        v.setBackground(normalShape);\r\n                        resRight--;\r\n                    } else {\r\n                        v.setBackground(roundTShape);\r\n                    }\r\n                    Log.d(\"DragClickListener\", \"ACTION_DRAG_EXITED\");\r\n                    break;\r\n\r\n                // 이미지를 드래그해서 드랍시켰을때\r\n                case DragEvent.ACTION_DROP:\r\n                    Log.d(\"DragClickListener\", \"ACTION_DROP\");\r\n\r\n                    if (v == findViewById(R.id.left)) {\r\n                        resLeft++;\r\n                        View view = (View) event.getLocalState();\r\n                        ViewGroup viewgroup = (ViewGroup) view\r\n                                .getParent();\r\n                        viewgroup.removeView(view);\r\n\r\n                        LinearLayout containView = (LinearLayout) v;\r\n                        containView.addView(view);\r\n                        view.setVisibility(View.VISIBLE);\r\n\r\n                    } else if (v == findViewById(R.id.right)) {\r\n                        resRight++;\r\n                        View view = (View) event.getLocalState();\r\n                        ViewGroup viewgroup = (ViewGroup) view\r\n                                .getParent();\r\n                        viewgroup.removeView(view);\r\n\r\n                        LinearLayout containView = (LinearLayout) v;\r\n                        containView.addView(view);\r\n                        view.setVisibility(View.VISIBLE);\r\n\r\n                    } else if (v == findViewById(R.id.ball)) {\r\n                        View view = (View) event.getLocalState();\r\n                        ViewGroup viewgroup = (ViewGroup) view\r\n                                .getParent();\r\n                        viewgroup.removeView(view);\r\n\r\n                        LinearLayout containView = (LinearLayout) v;\r\n                        containView.addView(view);\r\n                        view.setVisibility(View.VISIBLE);\r\n\r\n                    } else {\r\n                        View view = (View) event.getLocalState();\r\n                        view.setVisibility(View.VISIBLE);\r\n                        break;\r\n                    }\r\n\r\n                case DragEvent.ACTION_DRAG_ENDED:\r\n                    if(v == findViewById(R.id.left)) {\r\n                        v.setBackground(normalShape);\r\n                    } else if(v == findViewById(R.id.right)) {\r\n                        v.setBackground(normalShape);\r\n                    } else {\r\n                        v.setBackground(roundNShape);\r\n                    }\r\n                    Log.d(\"DragClickListener\", \"ACTION_DRAG_ENDED\");\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, beforeBtn, nextBtn);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        question.setText(languageFunc.quiz.get(3));\r\n        tts.speakOut(question.getText().toString());\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        tts.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/simpleTest/S_language.java b/app/src/main/java/simpleTest/S_language.java
--- a/app/src/main/java/simpleTest/S_language.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/simpleTest/S_language.java	(date 1667793955745)
@@ -26,6 +26,8 @@
 import com.cbnu.dementiadiagnosis.R;
 import com.cbnu.dementiadiagnosis.TTS;
 
+import java.util.ArrayList;
+
 import questions.LanguageFunc;
 
 public class S_language extends AppCompatActivity {
Index: app/src/main/java/simpleTest/S_execution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package simpleTest;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.Execution;\r\n\r\npublic class S_execution extends AppCompatActivity {\r\n\r\n    Execution execution;\r\n    ImageButton squareOne, squareTwo, squareThree, squareFour;\r\n    ImageButton beforeBtn, nextBtn;\r\n    ImageView star1, star2, star3, star4;\r\n    TextView question, type;\r\n    AppCompatButton donKnow;\r\n    TTS tts;\r\n    ProgressBar pro_bar;\r\n    String check=\"\";\r\n    simple_QuizPage QP;\r\n\r\n    private long backBtnTime = 0;\r\n    List<String> quiz = new ArrayList<>();\r\n    int[] time = {1000, 1000, 1000, 1000};\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.s_execution);\r\n\r\n        execution = new Execution();\r\n        question = findViewById(R.id.question);\r\n        type = findViewById(R.id.type);\r\n        beforeBtn = findViewById(R.id.before);\r\n        nextBtn = findViewById(R.id.next);\r\n        pro_bar = findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n        QP = new simple_QuizPage();\r\n\r\n        squareOne = findViewById(R.id.btnOne);\r\n        squareTwo = findViewById(R.id.btnTwo);\r\n        squareThree = findViewById(R.id.btnThree);\r\n        squareFour = findViewById(R.id.btnFour);\r\n\r\n        star1 = findViewById(R.id.starOne);\r\n        star2 = findViewById(R.id.starTwo);\r\n        star3 = findViewById(R.id.starThree);\r\n        star4 = findViewById(R.id.starFour);\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        execution.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        showStar();\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"default\");\r\n                question.setText(execution.quiz.get(1));\r\n                quiz.clear();\r\n                quiz.add(\"별이 각자 다른 위치로 이동합니다.\");\r\n                quiz.add(\"어떤 식으로 이동하는지 잘 생각해 보십시오.\");\r\n                quiz.add(\"이 다음에는 네 칸중 별이 어디에 위치하게 될까요?\");\r\n                tts.UtteranceProgress(quiz, \"continue\", question, nextBtn);\r\n            }\r\n        });\r\n        type.setText(\"집행기능\");\r\n        pro_bar.setProgress(40);\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                execution.Tscore = 0;\r\n\r\n                execution.scores[5] = execution.Tscore;\r\n\r\n                pro_bar.setProgress(50);\r\n\r\n                Intent intent = new Intent(getApplicationContext(), S_memoryOutput.class);\r\n                intent.putExtra(\"scores\", execution.scores);\r\n                startActivity(intent);\r\n                overridePendingTransition(0, 0);\r\n\r\n                finish();\r\n            }\r\n        });\r\n\r\n        beforeBtn.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        nextBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.Stop();\r\n                if(check.equals(\"3\")) {\r\n                    execution.Tscore = 1;\r\n                }else {\r\n                    execution.Tscore = 0;\r\n                }\r\n                execution.scores[5] = execution.Tscore;\r\n                Intent intent = new Intent(getApplicationContext(), S_memoryOutput.class);\r\n                intent.putExtra(\"scores\", execution.scores);\r\n                startActivity(intent);\r\n                overridePendingTransition(0, 0);\r\n\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    // 정답 영역 클릭 시, 별 모양 표시\r\n    public void showStar() {\r\n        squareOne.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                check = \"1\";\r\n                star1.setVisibility(View.VISIBLE);\r\n                star2.setVisibility(View.INVISIBLE);\r\n                star3.setVisibility(View.INVISIBLE);\r\n                star4.setVisibility(View.INVISIBLE);\r\n            }\r\n        });\r\n        squareTwo.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                check = \"2\";\r\n                star2.setVisibility(View.VISIBLE);\r\n                star1.setVisibility(View.INVISIBLE);\r\n                star3.setVisibility(View.INVISIBLE);\r\n                star4.setVisibility(View.INVISIBLE);\r\n            }\r\n        });\r\n        squareThree.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                check = \"3\";\r\n                star3.setVisibility(View.VISIBLE);\r\n                star1.setVisibility(View.INVISIBLE);\r\n                star2.setVisibility(View.INVISIBLE);\r\n                star4.setVisibility(View.INVISIBLE);\r\n            }\r\n        });\r\n        squareFour.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                check = \"4\";\r\n                star4.setVisibility(View.VISIBLE);\r\n                star1.setVisibility(View.INVISIBLE);\r\n                star2.setVisibility(View.INVISIBLE);\r\n                star3.setVisibility(View.INVISIBLE);\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, beforeBtn, nextBtn);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        if(tts != null){\r\n            tts.Stop();\r\n        }\r\n        quiz.clear();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        if(!question.getText().toString().equals(execution.quiz.get(1))){\r\n            question.setText(execution.quiz.get(1));\r\n            tts.speakOut(execution.quiz.get(1), \"default\");\r\n            quiz.clear();\r\n            quiz.add(\"별이 각자 다른 위치로 이동합니다.\");\r\n            quiz.add(\"어떤 식으로 이동하는지 잘 생각해 보십시오.\");\r\n            quiz.add(\"이 다음에는 네 칸중 별이 어디에 위치하게 될까요?\");\r\n            tts.UtteranceProgress(quiz, \"continue\", question, nextBtn);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if(tts != null) {\r\n            tts.Destroy();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/simpleTest/S_execution.java b/app/src/main/java/simpleTest/S_execution.java
--- a/app/src/main/java/simpleTest/S_execution.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/simpleTest/S_execution.java	(date 1667793955772)
@@ -70,7 +70,6 @@
         Intent intent;
         intent = getIntent();
         execution.scores = intent.getIntArrayExtra("scores");
-
         showStar();
 
         tts = new TTS(this, new TextToSpeech.OnInitListener() {
Index: app/src/main/res/layout/voicebot.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <androidx.appcompat.widget.AppCompatButton\r\n        android:id=\"@+id/btnLogout\"\r\n        android:layout_width=\"35dp\"\r\n        android:layout_height=\"35dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:layout_marginEnd=\"20dp\"\r\n        android:background=\"@drawable/logout\"\r\n        android:backgroundTint=\"?attr/colorSecondaryVariant\" />\r\n    <RelativeLayout\r\n        android:id=\"@+id/textLayout\"\r\n        android:layout_below=\"@+id/btnLogout\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:padding=\"20dp\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:gravity=\"center\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/question\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@drawable/bubble\"\r\n            android:backgroundTint=\"#836799FF\"\r\n            android:fontFamily=\"@font/jejugothic\"\r\n            android:gravity=\"center\"\r\n            android:letterSpacing=\"0.04\"\r\n            android:lineSpacingExtra=\"10dp\"\r\n            android:text=\"dddddddddddddddd\"\r\n            android:textSize=\"20sp\" />\r\n\r\n    </RelativeLayout>\r\n\r\n    <ImageView\r\n        android:id=\"@+id/img\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"200dp\"\r\n        android:layout_below=\"@id/textLayout\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"0dp\"\r\n        android:src=\"@drawable/helper_jump\"\r\n        app:tint=\"?attr/colorPrimary\" />\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/gray_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"400dp\"\r\n        android:layout_below=\"@+id/img\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:background=\"@drawable/shape_round_bar\"\r\n        android:backgroundTint=\"?attr/colorSecondary\"\r\n        android:letterSpacing=\"0.04\"\r\n        android:lineSpacingExtra=\"10dp\">\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/micView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_above=\"@+id/sendView\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:layout_centerVertical=\"true\"\r\n            android:gravity=\"center\">\r\n\r\n            <ImageButton\r\n                android:id=\"@+id/sttStart\"\r\n                android:layout_width=\"65dp\"\r\n                android:layout_height=\"65dp\"\r\n                android:layout_centerInParent=\"true\"\r\n                android:background=\"@drawable/ic_mic\" />\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/sendView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_gravity=\"bottom\"\r\n            android:layout_marginBottom=\"50dp\"\r\n            android:gravity=\"center\">\r\n\r\n            <ImageButton\r\n                android:id=\"@+id/submit\"\r\n                android:layout_width=\"40dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:layout_alignParentEnd=\"true\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_marginLeft=\"20dp\"\r\n                android:background=\"@drawable/send\"\r\n                android:backgroundTint=\"#80ABFF\"\r\n                android:rotation=\"270\" />\r\n\r\n            <com.google.android.material.textfield.TextInputLayout\r\n                android:id=\"@+id/goolelayout\"\r\n                style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n                android:layout_width=\"250dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:gravity=\"center\"\r\n                android:letterSpacing=\"0.04\"\r\n                android:lineSpacingExtra=\"10dp\">\r\n\r\n                <com.google.android.material.textfield.TextInputEditText\r\n                    android:id=\"@+id/result\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:fontFamily=\"@font/jejugothic\"\r\n                    android:gravity=\"center\"\r\n                    android:letterSpacing=\"0.04\"\r\n                    android:lineSpacingExtra=\"10dp\" />\r\n            </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        </RelativeLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n</RelativeLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/voicebot.xml b/app/src/main/res/layout/voicebot.xml
--- a/app/src/main/res/layout/voicebot.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/layout/voicebot.xml	(date 1667440842750)
@@ -76,7 +76,7 @@
                 android:layout_width="65dp"
                 android:layout_height="65dp"
                 android:layout_centerInParent="true"
-                android:background="@drawable/ic_mic" />
+                android:background="@drawable/mic_selector" />
         </RelativeLayout>
 
         <RelativeLayout
Index: app/src/main/java/fragment/FragmentHome.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fragment;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.cbnu.dementiadiagnosis.FirstActivity;\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.PermissionSupport;\r\nimport com.cbnu.dementiadiagnosis.QuizHOME;\r\nimport com.cbnu.dementiadiagnosis.R;\r\n\r\nimport memoryQuiz.StartActivity;\r\nimport simpleTest.S_orientation;\r\nimport user.SharedPreference;\r\n\r\npublic class FragmentHome extends Fragment {\r\n\r\n    Button simple, formal, quiz;\r\n    AppCompatButton logout;\r\n    ImageView helper_img;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_home, container, false);\r\n\r\n        helper_img = view.findViewById(R.id.img);\r\n        simple = view.findViewById(R.id.simpleTest);\r\n        formal = view.findViewById(R.id.formalTest);\r\n        quiz = view.findViewById(R.id.rememberQuiz);\r\n        logout = view.findViewById(R.id.btnLogout);\r\n\r\n        // 간이검사 시작\r\n        simple.setOnClickListener(v -> {\r\n            SharedPreference.setTypeInf(getActivity(), \"simple\");\r\n            startActivity(new Intent(requireActivity(), S_orientation.class));\r\n        });\r\n\r\n        // 정규검사 시작\r\n        formal.setOnClickListener(v -> {\r\n            SharedPreference.setTypeInf(getActivity(), \"regular\");\r\n            startActivity(new Intent(requireActivity(), QuizHOME.class));\r\n        });\r\n\r\n        // 기억력 향상 테스트\r\n        quiz.setOnClickListener(v -> startActivity(new Intent(requireActivity(), StartActivity.class)));\r\n\r\n        // 로그아웃\r\n        logout.setOnClickListener(v -> {\r\n            SharedPreference.clear_user(getActivity());\r\n            startActivity(new Intent(requireActivity(), FirstActivity.class));\r\n            requireActivity().finish();\r\n        });\r\n\r\n        return view;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/fragment/FragmentHome.java b/app/src/main/java/fragment/FragmentHome.java
--- a/app/src/main/java/fragment/FragmentHome.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/fragment/FragmentHome.java	(date 1667793063305)
@@ -7,6 +7,8 @@
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.ImageView;
+import android.widget.Toast;
+
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.appcompat.widget.AppCompatButton;
@@ -18,6 +20,9 @@
 import com.cbnu.dementiadiagnosis.QuizHOME;
 import com.cbnu.dementiadiagnosis.R;
 
+import java.util.ArrayList;
+
+import QuizPage.memoryInput_Page;
 import memoryQuiz.StartActivity;
 import simpleTest.S_orientation;
 import user.SharedPreference;
@@ -44,20 +49,27 @@
         quiz = view.findViewById(R.id.rememberQuiz);
         logout = view.findViewById(R.id.btnLogout);
 
+
         // 간이검사 시작
         simple.setOnClickListener(v -> {
             SharedPreference.setTypeInf(getActivity(), "simple");
-            startActivity(new Intent(requireActivity(), S_orientation.class));
+            Intent intent = new Intent(getActivity(), S_orientation.class);
+            startActivity(intent);
         });
 
         // 정규검사 시작
         formal.setOnClickListener(v -> {
             SharedPreference.setTypeInf(getActivity(), "regular");
-            startActivity(new Intent(requireActivity(), QuizHOME.class));
+            Intent intent = new Intent(getActivity(), QuizHOME.class);
+            startActivity(intent);
         });
 
         // 기억력 향상 테스트
-        quiz.setOnClickListener(v -> startActivity(new Intent(requireActivity(), StartActivity.class)));
+        quiz.setOnClickListener(v -> {
+                    Intent intent = new Intent(getActivity(), StartActivity.class);
+                    startActivity(intent);
+                }
+        );
 
         // 로그아웃
         logout.setOnClickListener(v -> {
Index: app/src/main/java/simpleTest/S_fluency_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package simpleTest;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.QuizHOME;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.fluency;\r\n\r\npublic class S_fluency_Page extends AppCompatActivity {\r\n    fluency flu;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    List<String> tem = new ArrayList<>();\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        flu = new fluency();\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        flu.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        stt.isFluency = true;\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, flu.quiz);\r\n        helper_img = findViewById(R.id.img);\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tem.clear();\r\n                answer.setEnabled(false);\r\n                sttBtn.setEnabled(false);\r\n                submit.setEnabled(false);\r\n                int time[] = {1500, 1000, 1000, 1001};\r\n                tts.onInit(status, question.getText().toString(), \"default\", 1000);\r\n                tem.add(flu.quiz.get(1));\r\n                tem.add(flu.quiz.get(2));\r\n                tem.add(flu.quiz.get(3));\r\n                tts.UtteranceProgress(tem, \"continue\", time, question, answer, stt, 20000);\r\n            }\r\n        });\r\n\r\n        type.setText(\"유창성(집행기능)\");\r\n        pro_bar.setProgress(95);\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                    tts.isStopUtt = true;\r\n                    tts.Stop();\r\n                    stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                pro_bar.setProgress(100);\r\n                stt.Stop();\r\n                tts.Stop();\r\n\r\n                flu.Tscore = 0;\r\n\r\n                flu.scores[8] = flu.Tscore;\r\n\r\n                Intent intent = new Intent(getApplicationContext(), QuizHOME.class);\r\n                intent.putExtra(\"scores\", flu.scores);\r\n                intent.putExtra(\"isDone\", true);\r\n                startActivity(intent);\r\n                overridePendingTransition(0, 0);\r\n\r\n                stt.isFluency = false;\r\n\r\n                finish();\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                pro_bar.setProgress(100);\r\n                stt.Stop();\r\n                tts.Stop();\r\n                QP.user_ans = answer.getText().toString().replace(\".\", \"\");\r\n                QP.user_ans = answer.getText().toString().replace(\",\", \"\");\r\n                String ans[] = QP.user_ans.split(\" \");\r\n                int correct = 0;\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else {\r\n                    for (int i = 0; i < ans.length; i++) {\r\n                        if (flu.crr_ans[0].contains(ans[i])) {\r\n                            correct++;\r\n                        }\r\n                    }\r\n                    if (correct >= 5) {\r\n                        flu.Tscore = 1;\r\n                    } else {\r\n                        flu.Tscore = 0;\r\n                    }\r\n\r\n                    flu.scores[8] = flu.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), QuizHOME.class);\r\n                    intent.putExtra(\"scores\", flu.scores);\r\n                    intent.putExtra(\"isDone\", true);\r\n                    startActivity(intent);\r\n                    overridePendingTransition(0, 0);\r\n\r\n                    stt.isFluency = false;\r\n                    tts.Destroy();\r\n                    stt.Destroy();\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        if(!question.getText().equals(\"그만!\")){\r\n            tem.clear();\r\n            answer.setEnabled(false);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(false);\r\n            int time[] = {2000, 1000, 1000, 1001};\r\n            question.setText(flu.quiz.get(0));\r\n            answer.setText(\"\");\r\n            tts.speakOut(flu.quiz.get(0), \"default\");\r\n            tem.add(flu.quiz.get(1));\r\n            tem.add(flu.quiz.get(2));\r\n            tem.add(flu.quiz.get(3));\r\n            tts.UtteranceProgress(tem, \"continue\", time, question, answer, stt);\r\n        }\r\n        else{\r\n            tem.clear();\r\n            answer.setEnabled(true);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(true);\r\n            question.setText(\"답변을 완료하셨습니다.\\n파란색 상자를 눌러 답변을 저장해주세요!\");\r\n            tts.speakOut(question.getText().toString(), \"Done\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        tts.Destroy();\r\n        stt.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/simpleTest/S_fluency_Page.java b/app/src/main/java/simpleTest/S_fluency_Page.java
--- a/app/src/main/java/simpleTest/S_fluency_Page.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/simpleTest/S_fluency_Page.java	(date 1667793955879)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.EditText;
@@ -28,6 +29,7 @@
 
 import QuizPage.QuizPage;
 import questions.fluency;
+import user.SharedPreference;
 
 public class S_fluency_Page extends AppCompatActivity {
     fluency flu;
@@ -67,7 +69,11 @@
         intent = getIntent();
         flu.scores = intent.getIntArrayExtra("scores");
 
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         stt.isFluency = true;
         QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, flu.quiz);
         helper_img = findViewById(R.id.img);
Index: app/src/main/java/simpleTest/S_orientation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package simpleTest;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.orientation;\r\n\r\npublic class S_orientation extends AppCompatActivity {\r\n    orientation ortt_main;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    simple_QuizPage QP;\r\n    TextView question, type, announce;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    ProgressBar pro_bar;\r\n    Helper helper;\r\n    boolean[] isCorrect;\r\n    boolean[] isWrong;\r\n    String[] U_answers;\r\n    AppCompatButton donKnow;\r\n    List<String> quiz;\r\n    List<String>[] crr_ans;\r\n    int q_num;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        announce = (TextView) findViewById(R.id.announce);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        helper_img = findViewById(R.id.img);\r\n        ortt_main = new orientation(this);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n        quiz = new ArrayList<>();\r\n        crr_ans = new ArrayList[3];\r\n        for (int i = 0; i < 3; i++) {\r\n            crr_ans[i] = new ArrayList<>();\r\n        }\r\n        q_num = new Integer(2);\r\n\r\n        quiz.add(\"오늘은 몇월 며칠입니까?\");\r\n        quiz.add(\"지금은 몇 월입니까?\");\r\n        quiz.add(\"오늘은 며칠입니까?\");\r\n\r\n        crr_ans[0].add(ortt_main.returnMONTH());\r\n        crr_ans[0].add(ortt_main.returnDATE());\r\n        crr_ans[1].add(ortt_main.returnMONTH());\r\n        crr_ans[2].add(ortt_main.returnDATE());\r\n\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new simple_QuizPage(stt, tts, question, answer, sttBtn, submit, quiz);\r\n        QP.isOrient = true;\r\n        isCorrect = new boolean[q_num];\r\n        Arrays.fill(isCorrect, false);\r\n        isWrong = new boolean[q_num];\r\n        Arrays.fill(isWrong, false);\r\n        U_answers = new String[q_num];\r\n        Arrays.fill(U_answers, \"\");\r\n        announce.setText(\"월, 일\");\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        type.setText(\"지남력\");\r\n        pro_bar.setProgress(0);\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                announce.setText(\"\");\r\n                answer.setText(\"\");\r\n\r\n                if(QP.current == 0){\r\n                    QP.current = 3;\r\n                    pro_bar.setProgress(10);\r\n                }\r\n                if(QP.current == 3) pro_bar.setProgress(10);\r\n\r\n                if(QP.current < 3){\r\n                    answer.setText(\"\");\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                }\r\n                else if(QP.current == 3){\r\n\r\n                    ortt_main.Tscore = cal_score(U_answers, ortt_main.crr_ans);\r\n\r\n                    ortt_main.scores[1] = ortt_main.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), S_memoryInput.class);\r\n                    intent.putExtra(\"scores\", ortt_main.scores);\r\n                    startActivity(intent);\r\n                    overridePendingTransition(0, 0);\r\n\r\n                    QP.isOrient = false;\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                if(QP.current == 0){\r\n                    Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n                if(QP.current > 0){\r\n                    pro_bar.setProgress(5);\r\n                    for(int i = isWrong.length - 1; i > 0; i--){\r\n                        if(!isWrong[i]){\r\n                            QP.current = i;\r\n                            break;\r\n                        } // 모두 정답이면 첫 문제로 점프\r\n                        else QP.current = 0;\r\n                    }\r\n                    if(QP.current == 0) announce.setText(\"월, 일\");\r\n                    tts.isStopUtt = false;\r\n                    question.setText(ortt_main.quiz.get(QP.current));\r\n                    answer.setText(\"\");\r\n                    tts.speakOut(question.getText().toString());\r\n                }\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(QP.current == 0) announce.setText(\"월, 일\");\r\n                else announce.setText(\"\");\r\n                stt.Stop();\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n                sttBtn.setEnabled(true);\r\n\r\n                QP.user_ans = QP.ans_filter(answer.getText().toString());\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else\r\n                {\r\n                    //날짜 숫자로 변환\r\n                    if(QP.current == 0 && !QP.user_ans.equals(\"\")){ // 첫 물음의 경우\r\n                        Arrays.fill(isCorrect, false);\r\n                        pro_bar.setProgress(5);\r\n                        String[] answers = QP.user_ans.split(\" \");\r\n                        for(int i = 0; i < answers.length; i++){\r\n                            String str = \"\";\r\n                            if(answers[i].contains(\"월\")){\r\n                                U_answers[0] = dateFilter(answers[i]);\r\n                                isCorrect[0] = true;\r\n                            }\r\n                            else if(answers[i].contains(\"일\")){\r\n                                if(!answers[i-1].contains(\"월\") && !answers[i-1].contains(\"년\")\r\n                                        && !answers[i-1].contains(\"년도\") && !answers[i-1].contains(\"요일\")){\r\n                                    if(answers[i-1].contains(\"십\")){\r\n                                        str = answers[i-1] + answers[i];\r\n                                        str = str.substring(0, str.length()-1);\r\n                                        isCorrect[1] = true;\r\n                                        U_answers[1] = dateFilter(str);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    isCorrect[1] = true;\r\n                                    U_answers[1] = dateFilter(answers[i]);\r\n                                }\r\n                            }\r\n                        }\r\n                        isWrong = isCorrect;\r\n                    }\r\n                    else if(QP.current < 3 && !QP.user_ans.equals(\"\")){ // 틀린 것이 있을 경우\r\n                        QP.user_ans = dateFilter(QP.user_ans);\r\n                        U_answers[QP.current-1] = dateFilter(QP.user_ans);\r\n                    }\r\n                    else {\r\n                        pro_bar.setProgress(10);\r\n                        U_answers[QP.current-1] = QP.user_ans;\r\n                    }\r\n\r\n                    //다음 문제 화면 전환\r\n                    if(QP.current < 3){\r\n                        for(int i = 0; i < isCorrect.length; i++){\r\n                            if(!isCorrect[i]){\r\n                                QP.current = i;\r\n                                isCorrect[i] = true;\r\n                                break;\r\n                            } // 모두 정답이면 종료\r\n                            else QP.current = 3;\r\n                        }\r\n                    }\r\n\r\n                    if(QP.current < 3){\r\n                        answer.setText(\"\");\r\n                        tts.isStopUtt = false;\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                    }\r\n                    else if(QP.current == 3){\r\n\r\n                        ortt_main.Tscore = cal_score(U_answers, crr_ans);\r\n\r\n                        ortt_main.scores[1] = ortt_main.Tscore;\r\n\r\n                        Intent intent = new Intent(getApplicationContext(), S_memoryInput.class);\r\n                        intent.putExtra(\"scores\", ortt_main.scores);\r\n                        startActivity(intent);\r\n                        overridePendingTransition(0, 0);\r\n\r\n                        QP.isOrient = false;\r\n\r\n                        finish();\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    String dateFilter(String userAns){\r\n        String[] ansArray = userAns.split(\"\");\r\n        String toDigit = \"\";\r\n        for(String s : ansArray){\r\n            if(!s.equals(\"\")) {\r\n                if(Character.isDigit(s.charAt(0))) {\r\n                    toDigit += s;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(toDigit.equals(\"\")){\r\n            userAns = ortt_main.KorTran(userAns);\r\n        }\r\n        else{\r\n            userAns = toDigit;\r\n        }\r\n\r\n        return userAns;\r\n    }\r\n\r\n    int cal_score(String[] ans, List<String>[] crr){\r\n        int score = 0;\r\n        if(ans.length == crr.length-1){\r\n            for(int i = 0; i < ans.length; i++){\r\n                if(ans[i].contains(crr[i + 1].get(0))) score ++;\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n            overridePendingTransition(0, 0);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        QP.Start();\r\n        tts.speakOut(question.getText().toString());\r\n        if(QP.current == 0){\r\n            pro_bar.setProgress(0);\r\n        }\r\n        if(QP.current == 3){\r\n            pro_bar.setProgress(5);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/simpleTest/S_orientation.java b/app/src/main/java/simpleTest/S_orientation.java
--- a/app/src/main/java/simpleTest/S_orientation.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/simpleTest/S_orientation.java	(date 1667793955825)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.EditText;
@@ -28,6 +29,7 @@
 
 import QuizPage.QuizPage;
 import questions.orientation;
+import user.SharedPreference;
 
 public class S_orientation extends AppCompatActivity {
     orientation ortt_main;
@@ -85,7 +87,11 @@
         crr_ans[2].add(ortt_main.returnDATE());
 
 
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         QP = new simple_QuizPage(stt, tts, question, answer, sttBtn, submit, quiz);
         QP.isOrient = true;
         isCorrect = new boolean[q_num];
Index: app/src/main/res/layout/fragment_chart.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:textSize=\"18sp\"\r\n        android:textColor=\"?attr/colorOnTertiary\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:text=\"기 록\"/>\r\n\r\n    <com.github.mikephil.charting.charts.LineChart\r\n        android:id=\"@+id/linechart\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"200dp\"\r\n        android:layout_margin=\"10dp\"/>\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"35dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:layout_marginStart=\"15dp\"\r\n        android:text=\"이전 결과 기록\"\r\n        android:fontFamily=\"@font/jejugothic\"/>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:padding=\"5dp\"\r\n        android:background=\"@drawable/bg_updown\"/>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_chart.xml b/app/src/main/res/layout/fragment_chart.xml
--- a/app/src/main/res/layout/fragment_chart.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/layout/fragment_chart.xml	(date 1667440842820)
@@ -31,6 +31,7 @@
         android:fontFamily="@font/jejugothic"/>
 
     <androidx.recyclerview.widget.RecyclerView
+        android:backgroundTint="?attr/colorSecondary"
         android:id="@+id/recyclerView"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
Index: app/src/main/res/layout/activity_map_google.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_map_google.xml b/app/src/main/res/layout/activity_map_google.xml
new file mode 100644
--- /dev/null	(date 1667956855322)
+++ b/app/src/main/res/layout/activity_map_google.xml	(date 1667956855322)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:id="@+id/layout_main"
+    android:orientation="vertical"
+    tools:context=".map_google" >
+
+    <fragment
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="0.8"
+        android:id="@+id/map"
+        tools:context=".MapsActivity"
+        android:name="com.google.android.gms.maps.SupportMapFragment" />
+
+    <Button
+        android:text="장소검색"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="0.2"
+        android:id="@+id/button"/>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/QuizPage/LanguagePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.result.ActivityResult;\r\nimport androidx.activity.result.ActivityResultCallback;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport questions.LanguageFunc;\r\nimport questions.attention;\r\n\r\npublic class LanguagePage extends AppCompatActivity {\r\n    LanguageFunc languageFunc;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    //TextView p_num;\r\n    ImageView image;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    String[] U_answers;\r\n    ActivityResultLauncher<Intent> startActivityResult;\r\n    private long backBtnTime = 0;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.language_func);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        //p_num = (TextView) findViewById(R.id.process_num);\r\n        image = (ImageView) findViewById(R.id.question_image);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.right);\r\n        languageFunc = new LanguageFunc();\r\n        U_answers = new String[languageFunc.num];\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        undo = (ImageButton) findViewById(R.id.left);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        answer.setHint(\"답변이 여기 나타납니다.\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        languageFunc.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        Arrays.fill(U_answers, \"\");\r\n\r\n        type.setText(\"언어기능\");\r\n        //p_num.setText(\"13/17\");\r\n        pro_bar.setProgress(70);\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, languageFunc.quiz);\r\n\r\n        image.setImageResource(R.drawable.toothbrush);\r\n\r\n        startActivityResult = registerForActivityResult(\r\n                new ActivityResultContracts.StartActivityForResult(),\r\n                new ActivityResultCallback<ActivityResult>() {\r\n                    @Override\r\n                    public void onActivityResult(ActivityResult result) {\r\n                        if (result.getResultCode() == RESULT_OK) {\r\n                            Log.d(\"launcher_intent\", \"성공!!!!!!!!!!!\");\r\n                            assert result.getData() != null;\r\n                            String str = result.getData().getStringExtra(\"comprehension\");\r\n                            int curr = result.getData().getIntExtra(\"current\",-2);\r\n\r\n                            if(curr == -1){\r\n                                U_answers[3] = str;\r\n                                languageFunc.Tscore = cal_score(U_answers, languageFunc.crr_ans);\r\n\r\n                                languageFunc.scores[7] = languageFunc.Tscore;\r\n\r\n                                Intent intent = new Intent(getApplicationContext(), fluency_Page.class);\r\n                                intent.putExtra(\"scores\", languageFunc.scores);\r\n                                startActivity(intent);\r\n\r\n                                finish();\r\n                            }\r\n                            else{\r\n                                QP.current = curr;\r\n                                tts.isStopUtt = false;\r\n                                question.setText(languageFunc.quiz.get(QP.current));\r\n                                tts.speakOut(question.getText().toString());\r\n                                answer.setText(\"\");\r\n                                pro_bar.setProgress(80);\r\n                                //p_num.setText(\"15/17\");\r\n                                image.setImageResource(R.drawable.dice);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        image.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                question.setText(languageFunc.quiz.get(QP.current));\r\n                answer.setText(\"\");\r\n                answer.setHint(\"답변이 여기 나타납니다.\");\r\n                if (QP.current == 0) {\r\n                    pro_bar.setProgress(75);\r\n                    image.setImageResource(R.drawable.swing);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                } else if (QP.current == 1) {\r\n                    pro_bar.setProgress(80);\r\n                    image.setImageResource(R.drawable.dice);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                } else if (QP.current == 2) {\r\n                    pro_bar.setProgress(80);\r\n                    Intent intent = new Intent(LanguagePage.this, ComprehensionPage.class);\r\n                    startActivityResult.launch(intent);\r\n                    overridePendingTransition(0, 0);\r\n                    intent.putExtra(\"isDone\", true);\r\n                    intent.putExtra(\"score\", languageFunc.Tscore);\r\n                    setResult(1, intent);\r\n                    QP.Submit();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                if(QP.current == 0){\r\n                    Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n                if(QP.current > 0){\r\n                    answer.setHint(\"답변이 여기 나타납니다.\");\r\n                    QP.current --;\r\n                    tts.isStopUtt = false;\r\n                    question.setText(languageFunc.quiz.get(QP.current));\r\n                    answer.setText(\"\");\r\n                    tts.speakOut(question.getText().toString());\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(70);\r\n                        //p_num.setText(\"13/17\");\r\n                        image.setImageResource(R.drawable.toothbrush);\r\n                    }\r\n                    else if(QP.current == 1){\r\n                        pro_bar.setProgress(75);\r\n                        //p_num.setText(\"14/17\");\r\n                        image.setImageResource(R.drawable.swing);\r\n                    }\r\n                    else if(QP.current == 2){\r\n                        pro_bar.setProgress(80);\r\n                        //p_num.setText(\"15/17\");\r\n                        image.setImageResource(R.drawable.dice);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n                answer.setHint(\"답변이 여기 나타납니다.\");\r\n\r\n                QP.user_ans = answer.getText().toString()\r\n                        .replace(\" \", \"\")\r\n                        .replace(\",\", \"\")\r\n                        .replace(\".\", \"\");\r\n\r\n\r\n                answer.setText(\"\");\r\n\r\n                if (QP.user_ans.isEmpty()) {\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                } else {\r\n                    U_answers[QP.current] = QP.user_ans;\r\n\r\n                    if (QP.current == 0) {\r\n                        //p_num.setText(\"14/17\");\r\n                        pro_bar.setProgress(75);\r\n                        image.setImageResource(R.drawable.swing);\r\n                        tts.isStopUtt = false;\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                    } else if (QP.current == 1) {\r\n                        //p_num.setText(\"15/17\");\r\n                        pro_bar.setProgress(80);\r\n                        image.setImageResource(R.drawable.dice);\r\n                        tts.isStopUtt = false;\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                    } else if (QP.current == 2) {\r\n                        //p_num.setText(\"16/17\");\r\n                        pro_bar.setProgress(80);\r\n                        Intent intent = new Intent(LanguagePage.this, ComprehensionPage.class);\r\n                        startActivityResult.launch(intent);\r\n                        overridePendingTransition(0, 0);\r\n                        intent.putExtra(\"isDone\", true);\r\n                        intent.putExtra(\"score\", languageFunc.Tscore);\r\n                        setResult(1, intent);\r\n                        QP.Submit();\r\n                    } /*else if(QP.current == 3) {\r\n                        Intent intent = new Intent();\r\n                        intent.putExtra(\"isDone\", true);\r\n                        intent.putExtra(\"score\", languageFunc.score);\r\n                        setResult(1, intent);\r\n                        finish();\r\n                    }*/\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    int cal_score(String[] ans, List<String>[] crr){\r\n        int score = 0;\r\n        if(ans.length == crr.length){\r\n            for(int i = 0; i < ans.length; i++){\r\n                if(crr[i].size() > 1){\r\n                    for(String s : crr[i]){\r\n                        if(ans[i].contains(s)) score ++;\r\n                    }\r\n                }\r\n                else if(ans[i].contains(crr[i].get(0))) score ++;\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        question.setText(languageFunc.quiz.get(QP.current));\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기 나타납니다.\");\r\n        answer.setText(\"\");\r\n        tts.speakOut(question.getText().toString());\r\n        QP.Start();\r\n        if(QP.current == 0){\r\n            pro_bar.setProgress(70);\r\n            image.setImageResource(R.drawable.toothbrush);\r\n        }\r\n        else if (QP.current == 1) {\r\n            pro_bar.setProgress(75);\r\n            image.setImageResource(R.drawable.swing);\r\n        } else if (QP.current == 2) {\r\n            pro_bar.setProgress(80);\r\n            image.setImageResource(R.drawable.dice);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/LanguagePage.java b/app/src/main/java/QuizPage/LanguagePage.java
--- a/app/src/main/java/QuizPage/LanguagePage.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/QuizPage/LanguagePage.java	(date 1667793955694)
@@ -35,6 +35,7 @@
 
 import questions.LanguageFunc;
 import questions.attention;
+import user.SharedPreference;
 
 public class LanguagePage extends AppCompatActivity {
     LanguageFunc languageFunc;
@@ -90,7 +91,11 @@
             }
         });
 
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, languageFunc.quiz);
 
         image.setImageResource(R.drawable.toothbrush);
Index: app/src/main/java/com/cbnu/dementiadiagnosis/map_google.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cbnu/dementiadiagnosis/map_google.java b/app/src/main/java/com/cbnu/dementiadiagnosis/map_google.java
new file mode 100644
--- /dev/null	(date 1667957665270)
+++ b/app/src/main/java/com/cbnu/dementiadiagnosis/map_google.java	(date 1667957665270)
@@ -0,0 +1,615 @@
+package com.cbnu.dementiadiagnosis;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AlertDialog;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
+
+import android.Manifest;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.location.Address;
+import android.location.Geocoder;
+import android.location.Location;
+import android.location.LocationManager;
+import android.os.Bundle;
+import android.os.Looper;
+import android.util.Log;
+import android.view.View;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.Toast;
+
+import com.google.android.gms.location.FusedLocationProviderClient;
+import com.google.android.gms.location.LocationCallback;
+import com.google.android.gms.location.LocationRequest;
+import com.google.android.gms.location.LocationResult;
+import com.google.android.gms.location.LocationServices;
+import com.google.android.gms.location.LocationSettingsRequest;
+import com.google.android.gms.maps.CameraUpdate;
+import com.google.android.gms.maps.CameraUpdateFactory;
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.OnMapReadyCallback;
+import com.google.android.gms.maps.SupportMapFragment;
+import com.google.android.gms.maps.model.BitmapDescriptorFactory;
+import com.google.android.gms.maps.model.LatLng;
+import com.google.android.gms.maps.model.Marker;
+import com.google.android.gms.maps.model.MarkerOptions;
+import com.google.android.material.snackbar.Snackbar;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Locale;
+
+import noman.googleplaces.Place;
+import noman.googleplaces.PlacesListener;
+import noman.googleplaces.NRPlaces;
+import noman.googleplaces.Place;
+import noman.googleplaces.PlaceType;
+import noman.googleplaces.PlacesException;
+import noman.googleplaces.PlacesListener;
+
+
+public class map_google extends AppCompatActivity implements OnMapReadyCallback,
+        ActivityCompat.OnRequestPermissionsResultCallback, PlacesListener {
+
+
+    private GoogleMap mMap;
+    private Marker currentMarker = null;
+
+    private static final String TAG = "googlemap_example";
+    private static final int GPS_ENABLE_REQUEST_CODE = 2001;
+    private static final int UPDATE_INTERVAL_MS = 1000;  // 1초
+    private static final int FASTEST_UPDATE_INTERVAL_MS = 500; // 0.5초
+
+
+    // onRequestPermissionsResult에서 수신된 결과에서 ActivityCompat.requestPermissions를 사용한 퍼미션 요청을 구별하기 위해 사용됩니다.
+    private static final int PERMISSIONS_REQUEST_CODE = 100;
+    boolean needRequest = false;
+
+
+    // 앱을 실행하기 위해 필요한 퍼미션을 정의합니다.
+    String[] REQUIRED_PERMISSIONS  = {Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION};  // 외부 저장소
+
+
+    Location mCurrentLocatiion;
+    LatLng currentPosition;
+    List<Marker> previous_marker = null;
+
+
+    private FusedLocationProviderClient mFusedLocationClient;
+    private LocationRequest locationRequest;
+    private Location location;
+
+
+    private View mLayout;  // Snackbar 사용하기 위해서는 View가 필요합니다.
+    // (참고로 Toast에서는 Context가 필요했습니다.)
+
+    @Override
+    public void onPlacesFailure(PlacesException e) {
+
+    }
+
+    @Override
+    public void onPlacesStart() {
+
+    }
+
+    @Override
+    public void onPlacesSuccess(final List<Place> places) {
+        runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                for (noman.googleplaces.Place place : places) {
+
+                    LatLng latLng
+                            = new LatLng(place.getLatitude()
+                            , place.getLongitude());
+
+                    String markerSnippet = getCurrentAddress(latLng);
+
+                    MarkerOptions markerOptions = new MarkerOptions();
+                    markerOptions.position(latLng);
+                    markerOptions.title(place.getName());
+                    markerOptions.snippet(markerSnippet);
+                    Marker item = mMap.addMarker(markerOptions);
+                    previous_marker.add(item);
+
+                }
+
+                //중복 마커 제거
+                HashSet<Marker> hashSet = new HashSet<Marker>();
+                hashSet.addAll(previous_marker);
+                previous_marker.clear();
+                previous_marker.addAll(hashSet);
+
+            }
+        });
+    }
+
+    @Override
+    public void onPlacesFinished() {
+
+    }
+
+    public void showPlaceInformation(LatLng location)
+    {
+        mMap.clear();//지도 클리어
+
+        if (previous_marker != null)
+            previous_marker.clear();//지역정보 마커 클리어
+
+        new NRPlaces.Builder()
+                .listener(map_google.this)
+                .key("AIzaSyB-YOpnjgfNzZye9YVh-7tcwSTA-t9pDJI")
+                .latlng(location.latitude, location.longitude)//현재 위치
+                .radius(500) //500 미터 내에서 검색
+                .type("치매") //음식점
+                .build()
+                .execute();
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        setContentView(R.layout.activity_main);
+
+
+        previous_marker = new ArrayList<Marker>();
+
+        Button button = (Button)findViewById(R.id.button);
+        button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                showPlaceInformation(currentPosition);
+            }
+        });
+
+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON,
+                WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
+
+        setContentView(R.layout.activity_main);
+
+        mLayout = findViewById(R.id.layout_main);
+
+        locationRequest = new LocationRequest()
+                .setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)
+                .setInterval(UPDATE_INTERVAL_MS)
+                .setFastestInterval(FASTEST_UPDATE_INTERVAL_MS);
+
+
+        LocationSettingsRequest.Builder builder =
+                new LocationSettingsRequest.Builder();
+
+        builder.addLocationRequest(locationRequest);
+
+
+        mFusedLocationClient = LocationServices.getFusedLocationProviderClient(this);
+
+
+        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
+                .findFragmentById(R.id.map);
+        mapFragment.getMapAsync(this);
+    }
+
+    @Override
+    public void onMapReady(final GoogleMap googleMap) {
+        Log.d(TAG, "onMapReady :");
+
+        mMap = googleMap;
+
+        //런타임 퍼미션 요청 대화상자나 GPS 활성 요청 대화상자 보이기전에
+        //지도의 초기위치를 서울로 이동
+        setDefaultLocation();
+
+
+
+        //런타임 퍼미션 처리
+        // 1. 위치 퍼미션을 가지고 있는지 체크합니다.
+        int hasFineLocationPermission = ContextCompat.checkSelfPermission(this,
+                Manifest.permission.ACCESS_FINE_LOCATION);
+        int hasCoarseLocationPermission = ContextCompat.checkSelfPermission(this,
+                Manifest.permission.ACCESS_COARSE_LOCATION);
+
+
+
+        if (hasFineLocationPermission == PackageManager.PERMISSION_GRANTED &&
+                hasCoarseLocationPermission == PackageManager.PERMISSION_GRANTED   ) {
+
+            // 2. 이미 퍼미션을 가지고 있다면
+            // ( 안드로이드 6.0 이하 버전은 런타임 퍼미션이 필요없기 때문에 이미 허용된 걸로 인식합니다.)
+
+
+            startLocationUpdates(); // 3. 위치 업데이트 시작
+
+
+        }else {  //2. 퍼미션 요청을 허용한 적이 없다면 퍼미션 요청이 필요합니다. 2가지 경우(3-1, 4-1)가 있습니다.
+
+            // 3-1. 사용자가 퍼미션 거부를 한 적이 있는 경우에는
+            if (ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[0])) {
+
+                // 3-2. 요청을 진행하기 전에 사용자가에게 퍼미션이 필요한 이유를 설명해줄 필요가 있습니다.
+                Snackbar.make(mLayout, "이 앱을 실행하려면 위치 접근 권한이 필요합니다.",
+                        Snackbar.LENGTH_INDEFINITE).setAction("확인", new View.OnClickListener() {
+
+                    @Override
+                    public void onClick(View view) {
+
+                        // 3-3. 사용자게에 퍼미션 요청을 합니다. 요청 결과는 onRequestPermissionResult에서 수신됩니다.
+                        ActivityCompat.requestPermissions( map_google.this, REQUIRED_PERMISSIONS,
+                                PERMISSIONS_REQUEST_CODE);
+                    }
+                }).show();
+
+
+            } else {
+                // 4-1. 사용자가 퍼미션 거부를 한 적이 없는 경우에는 퍼미션 요청을 바로 합니다.
+                // 요청 결과는 onRequestPermissionResult에서 수신됩니다.
+                ActivityCompat.requestPermissions( this, REQUIRED_PERMISSIONS,
+                        PERMISSIONS_REQUEST_CODE);
+            }
+
+        }
+
+
+
+        mMap.getUiSettings().setMyLocationButtonEnabled(true);
+        // 현재 오동작을 해서 주석처리
+        //mMap.animateCamera(CameraUpdateFactory.zoomTo(15));
+        mMap.setOnMapClickListener(new GoogleMap.OnMapClickListener() {
+
+            @Override
+            public void onMapClick(LatLng latLng) {
+
+                Log.d( TAG, "onMapClick :");
+            }
+        });
+    }
+
+    LocationCallback locationCallback = new LocationCallback() {
+        @Override
+        public void onLocationResult(LocationResult locationResult) {
+            super.onLocationResult(locationResult);
+
+            List<Location> locationList = locationResult.getLocations();
+
+            if (locationList.size() > 0) {
+                location = locationList.get(locationList.size() - 1);
+                //location = locationList.get(0);
+
+                currentPosition
+                        = new LatLng(location.getLatitude(), location.getLongitude());
+
+
+                String markerTitle = getCurrentAddress(currentPosition);
+                String markerSnippet = "위도:" + String.valueOf(location.getLatitude())
+                        + " 경도:" + String.valueOf(location.getLongitude());
+
+                Log.d(TAG, "onLocationResult : " + markerSnippet);
+
+
+                //현재 위치에 마커 생성하고 이동
+                setCurrentLocation(location, markerTitle, markerSnippet);
+
+                mCurrentLocatiion = location;
+            }
+
+
+        }
+
+    };
+
+
+
+    private void startLocationUpdates() {
+
+        if (!checkLocationServicesStatus()) {
+
+            Log.d(TAG, "startLocationUpdates : call showDialogForLocationServiceSetting");
+            showDialogForLocationServiceSetting();
+        }else {
+
+            int hasFineLocationPermission = ContextCompat.checkSelfPermission(this,
+                    Manifest.permission.ACCESS_FINE_LOCATION);
+            int hasCoarseLocationPermission = ContextCompat.checkSelfPermission(this,
+                    Manifest.permission.ACCESS_COARSE_LOCATION);
+
+
+
+            if (hasFineLocationPermission != PackageManager.PERMISSION_GRANTED ||
+                    hasCoarseLocationPermission != PackageManager.PERMISSION_GRANTED   ) {
+
+                Log.d(TAG, "startLocationUpdates : 퍼미션 안가지고 있음");
+                return;
+            }
+
+
+            Log.d(TAG, "startLocationUpdates : call mFusedLocationClient.requestLocationUpdates");
+
+            mFusedLocationClient.requestLocationUpdates(locationRequest, locationCallback, Looper.myLooper());
+
+            if (checkPermission())
+                mMap.setMyLocationEnabled(true);
+
+        }
+
+    }
+
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+
+        Log.d(TAG, "onStart");
+
+        if (checkPermission()) {
+
+            Log.d(TAG, "onStart : call mFusedLocationClient.requestLocationUpdates");
+            mFusedLocationClient.requestLocationUpdates(locationRequest, locationCallback, null);
+
+            if (mMap!=null)
+                mMap.setMyLocationEnabled(true);
+
+        }
+
+
+    }
+
+
+    @Override
+    protected void onStop() {
+
+        super.onStop();
+
+        if (mFusedLocationClient != null) {
+
+            Log.d(TAG, "onStop : call stopLocationUpdates");
+            mFusedLocationClient.removeLocationUpdates(locationCallback);
+        }
+    }
+
+
+
+
+    public String getCurrentAddress(LatLng latlng) {
+
+        //지오코더... GPS를 주소로 변환
+        Geocoder geocoder = new Geocoder(this, Locale.getDefault());
+
+        List<Address> addresses;
+
+        try {
+
+            addresses = geocoder.getFromLocation(
+                    latlng.latitude,
+                    latlng.longitude,
+                    1);
+        } catch (IOException ioException) {
+            //네트워크 문제
+            Toast.makeText(this, "지오코더 서비스 사용불가", Toast.LENGTH_LONG).show();
+            return "지오코더 서비스 사용불가";
+        } catch (IllegalArgumentException illegalArgumentException) {
+            Toast.makeText(this, "잘못된 GPS 좌표", Toast.LENGTH_LONG).show();
+            return "잘못된 GPS 좌표";
+
+        }
+
+
+        if (addresses == null || addresses.size() == 0) {
+            Toast.makeText(this, "주소 미발견", Toast.LENGTH_LONG).show();
+            return "주소 미발견";
+
+        } else {
+            Address address = addresses.get(0);
+            return address.getAddressLine(0).toString();
+        }
+
+    }
+
+
+    public boolean checkLocationServicesStatus() {
+        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
+
+        return locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)
+                || locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);
+    }
+
+
+    public void setCurrentLocation(Location location, String markerTitle, String markerSnippet) {
+
+
+        if (currentMarker != null) currentMarker.remove();
+
+
+        LatLng currentLatLng = new LatLng(location.getLatitude(), location.getLongitude());
+
+        MarkerOptions markerOptions = new MarkerOptions();
+        markerOptions.position(currentLatLng);
+        markerOptions.title(markerTitle);
+        markerOptions.snippet(markerSnippet);
+        markerOptions.draggable(true);
+
+
+        currentMarker = mMap.addMarker(markerOptions);
+
+        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLng(currentLatLng);
+        mMap.moveCamera(cameraUpdate);
+
+    }
+
+
+    public void setDefaultLocation() {
+
+
+        //디폴트 위치, Seoul
+        LatLng DEFAULT_LOCATION = new LatLng(37.56, 126.97);
+        String markerTitle = "위치정보 가져올 수 없음";
+        String markerSnippet = "위치 퍼미션과 GPS 활성 요부 확인하세요";
+
+
+        if (currentMarker != null) currentMarker.remove();
+
+        MarkerOptions markerOptions = new MarkerOptions();
+        markerOptions.position(DEFAULT_LOCATION);
+        markerOptions.title(markerTitle);
+        markerOptions.snippet(markerSnippet);
+        markerOptions.draggable(true);
+        markerOptions.icon(BitmapDescriptorFactory.defaultMarker(BitmapDescriptorFactory.HUE_RED));
+        currentMarker = mMap.addMarker(markerOptions);
+
+        CameraUpdate cameraUpdate = CameraUpdateFactory.newLatLngZoom(DEFAULT_LOCATION, 15);
+        mMap.moveCamera(cameraUpdate);
+
+    }
+
+
+    //여기부터는 런타임 퍼미션 처리을 위한 메소드들
+    private boolean checkPermission() {
+
+        int hasFineLocationPermission = ContextCompat.checkSelfPermission(this,
+                Manifest.permission.ACCESS_FINE_LOCATION);
+        int hasCoarseLocationPermission = ContextCompat.checkSelfPermission(this,
+                Manifest.permission.ACCESS_COARSE_LOCATION);
+
+
+
+        if (hasFineLocationPermission == PackageManager.PERMISSION_GRANTED &&
+                hasCoarseLocationPermission == PackageManager.PERMISSION_GRANTED   ) {
+            return true;
+        }
+
+        return false;
+
+    }
+
+
+
+    /*
+     * ActivityCompat.requestPermissions를 사용한 퍼미션 요청의 결과를 리턴받는 메소드입니다.
+     */
+    @Override
+    public void onRequestPermissionsResult(int permsRequestCode,
+                                           @NonNull String[] permissions,
+                                           @NonNull int[] grandResults) {
+
+        super.onRequestPermissionsResult(permsRequestCode, permissions, grandResults);
+
+        if ( permsRequestCode == PERMISSIONS_REQUEST_CODE && grandResults.length == REQUIRED_PERMISSIONS.length) {
+
+            // 요청 코드가 PERMISSIONS_REQUEST_CODE 이고, 요청한 퍼미션 개수만큼 수신되었다면
+
+            boolean check_result = true;
+
+
+            // 모든 퍼미션을 허용했는지 체크합니다.
+
+            for (int result : grandResults) {
+                if (result != PackageManager.PERMISSION_GRANTED) {
+                    check_result = false;
+                    break;
+                }
+            }
+
+
+            if ( check_result ) {
+
+                // 퍼미션을 허용했다면 위치 업데이트를 시작합니다.
+                startLocationUpdates();
+            }
+            else {
+                // 거부한 퍼미션이 있다면 앱을 사용할 수 없는 이유를 설명해주고 앱을 종료합니다.2 가지 경우가 있습니다.
+
+                if (ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[0])
+                        || ActivityCompat.shouldShowRequestPermissionRationale(this, REQUIRED_PERMISSIONS[1])) {
+
+
+                    // 사용자가 거부만 선택한 경우에는 앱을 다시 실행하여 허용을 선택하면 앱을 사용할 수 있습니다.
+                    Snackbar.make(mLayout, "퍼미션이 거부되었습니다. 앱을 다시 실행하여 퍼미션을 허용해주세요. ",
+                            Snackbar.LENGTH_INDEFINITE).setAction("확인", new View.OnClickListener() {
+
+                        @Override
+                        public void onClick(View view) {
+
+                            finish();
+                        }
+                    }).show();
+
+                }else {
+
+
+                    // "다시 묻지 않음"을 사용자가 체크하고 거부를 선택한 경우에는 설정(앱 정보)에서 퍼미션을 허용해야 앱을 사용할 수 있습니다.
+                    Snackbar.make(mLayout, "퍼미션이 거부되었습니다. 설정(앱 정보)에서 퍼미션을 허용해야 합니다. ",
+                            Snackbar.LENGTH_INDEFINITE).setAction("확인", new View.OnClickListener() {
+
+                        @Override
+                        public void onClick(View view) {
+
+                            finish();
+                        }
+                    }).show();
+                }
+            }
+
+        }
+    }
+
+
+    //여기부터는 GPS 활성화를 위한 메소드들
+    private void showDialogForLocationServiceSetting() {
+
+        AlertDialog.Builder builder = new AlertDialog.Builder(map_google.this);
+        builder.setTitle("위치 서비스 비활성화");
+        builder.setMessage("앱을 사용하기 위해서는 위치 서비스가 필요합니다.\n"
+                + "위치 설정을 수정하실래요?");
+        builder.setCancelable(true);
+        builder.setPositiveButton("설정", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int id) {
+                Intent callGPSSettingIntent
+                        = new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS);
+                startActivityForResult(callGPSSettingIntent, GPS_ENABLE_REQUEST_CODE);
+            }
+        });
+        builder.setNegativeButton("취소", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int id) {
+                dialog.cancel();
+            }
+        });
+        builder.create().show();
+    }
+
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
+        switch (requestCode) {
+
+            case GPS_ENABLE_REQUEST_CODE:
+
+                //사용자가 GPS 활성 시켰는지 검사
+                if (checkLocationServicesStatus()) {
+                    if (checkLocationServicesStatus()) {
+
+                        Log.d(TAG, "onActivityResult : GPS 활성화 되있음");
+
+
+                        needRequest = true;
+
+                        return;
+                    }
+                }
+
+                break;
+        }
+    }
+
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/cbnu/dementiadiagnosis/Helper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cbnu.dementiadiagnosis;\r\n\r\nimport android.graphics.drawable.AnimationDrawable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.widget.ImageView;\r\n\r\npublic class Helper{\r\n    AnimationListner jump, nomal, nomal2, speak, speak2, listn_s,listn,listn_f, recog, anal, slow;\r\n    ImageView img;\r\n\r\n    public Helper(TTS tts, MainSTT stt, ImageView IMG, AppCompatActivity activity){\r\n        img = IMG;\r\n        nomal = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_default)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n                if(tts.IsTalking()){\r\n                    this.stop();\r\n                    img.setImageDrawable(speak);\r\n                    speak.start();\r\n                }\r\n                else if(stt.isListening){\r\n                    this.stop();\r\n                    img.setImageDrawable(listn_s);\r\n                    listn_s.start();\r\n                }\r\n                else{\r\n                    img.setImageDrawable(this);\r\n                    this.start();\r\n                }\r\n            }\r\n        };\r\n\r\n        nomal2 = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_default_2)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                img.setImageDrawable(nomal);\r\n                nomal.start();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        jump = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_jump)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                img.setImageDrawable(nomal);\r\n                nomal.start();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        speak = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_talk)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                if(!tts.IsTalking()){\r\n                    this.stop();\r\n                    img.setImageDrawable(nomal2);\r\n                    nomal2.start();\r\n                }\r\n                else{\r\n                    this.stop();\r\n                    img.setImageDrawable(speak2);\r\n                    speak2.start();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        speak2 = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_talk_2)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                if(!tts.IsTalking()){\r\n                    this.stop();\r\n                    img.setImageDrawable(nomal);\r\n                    nomal.start();\r\n                }\r\n                else{\r\n                    this.stop();\r\n                    img.setImageDrawable(speak);\r\n                    speak.start();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        listn = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_listen)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n                if(stt.isListening){\r\n                    img.setImageDrawable(this);\r\n                    this.start();\r\n                }\r\n                else if(stt.isTooFast){\r\n                    this.stop();\r\n                    img.setImageDrawable(slow);\r\n                    slow.start();\r\n                }\r\n                else if(stt.isRecognize){\r\n                    this.stop();\r\n                    img.setImageDrawable(recog);\r\n                    recog.start();\r\n                }\r\n                else if(stt.isAnalysing){\r\n                    this.stop();\r\n                    img.setImageDrawable(listn);\r\n                    listn.start();\r\n                }\r\n                else{\r\n                    this.stop();\r\n                    img.setImageDrawable(listn_f);\r\n                    listn_f.start();\r\n                }\r\n            }\r\n        };\r\n\r\n        listn_s = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_listen_s)) {\r\n\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                img.setImageDrawable(listn);\r\n                listn.start();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        listn_f = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_listen_f)) {\r\n\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                img.setImageDrawable(nomal);\r\n                nomal.start();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        recog = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_recog)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n                if(stt.isRecognize){\r\n                    img.setImageDrawable(this);\r\n                    this.start();\r\n                }\r\n                else if(stt.isTooFast){\r\n                    this.stop();\r\n                    img.setImageDrawable(slow);\r\n                    slow.start();\r\n                }\r\n                else if(stt.isAnalysing){\r\n                    this.stop();\r\n                    img.setImageDrawable(anal);\r\n                    anal.start();\r\n                }\r\n                else if(stt.isListening){\r\n                    this.stop();\r\n                    img.setImageDrawable(listn);\r\n                    listn.start();\r\n                }\r\n                else{\r\n                    this.stop();\r\n                    if(tts.IsTalking()){\r\n                        img.setImageDrawable(speak);\r\n                        speak.start();\r\n                    }\r\n                    else{\r\n                        img.setImageDrawable(listn_f);\r\n                        listn_f.start();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        anal = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_analy)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n                if(stt.isAnalysing){\r\n                    img.setImageDrawable(this);\r\n                    this.start();\r\n                }\r\n                else if(stt.isTooFast){\r\n                    this.stop();\r\n                    img.setImageDrawable(slow);\r\n                    slow.start();\r\n                }\r\n                else if(stt.isRecognize){\r\n                    this.stop();\r\n                    img.setImageDrawable(recog);\r\n                    recog.start();\r\n                }\r\n                else if(stt.isListening){\r\n                    this.stop();\r\n                    img.setImageDrawable(listn);\r\n                    listn.start();\r\n                }\r\n                else{\r\n                    this.stop();\r\n                    img.setImageDrawable(listn_f);\r\n                    listn_f.start();\r\n                }\r\n            }\r\n        };\r\n        slow = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_slow)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n                if(stt.isTooFast){\r\n                    img.setImageDrawable(this);\r\n                    this.start();\r\n                }\r\n                else if(stt.isAnalysing){\r\n                    this.stop();\r\n                    img.setImageDrawable(slow);\r\n                    slow.start();\r\n                }\r\n                else if(stt.isRecognize){\r\n                    this.stop();\r\n                    img.setImageDrawable(recog);\r\n                    recog.start();\r\n                }\r\n                else if(stt.isListening){\r\n                    this.stop();\r\n                    img.setImageDrawable(listn);\r\n                    listn.start();\r\n                }\r\n                else{\r\n                    this.stop();\r\n                    img.setImageDrawable(listn_f);\r\n                    listn_f.start();\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    public Helper(TTS tts, ImageView IMG, AppCompatActivity activity){\r\n        img = IMG;\r\n        nomal = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_default)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n                if(tts.IsTalking()){\r\n                    this.stop();\r\n                    img.setImageDrawable(speak);\r\n                    speak.start();\r\n                }\r\n                else{\r\n                    img.setImageDrawable(this);\r\n                    this.start();\r\n                }\r\n            }\r\n        };\r\n\r\n        nomal2 = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_default_2)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                img.setImageDrawable(nomal);\r\n                nomal.start();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        jump = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_jump)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                img.setImageDrawable(nomal);\r\n                nomal.start();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        speak = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_talk)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                if(!tts.IsTalking()){\r\n                    this.stop();\r\n                    img.setImageDrawable(nomal2);\r\n                    nomal2.start();\r\n                }\r\n                else{\r\n                    this.stop();\r\n                    img.setImageDrawable(speak2);\r\n                    speak2.start();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        speak2 = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_talk_2)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                if(!tts.IsTalking()){\r\n                    this.stop();\r\n                    img.setImageDrawable(nomal);\r\n                    nomal.start();\r\n                }\r\n                else{\r\n                    this.stop();\r\n                    img.setImageDrawable(speak);\r\n                    speak.start();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n    }\r\n\r\n    public Helper(ImageView IMG, Fragment activity){\r\n        img = IMG;\r\n        nomal = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_default)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        jump = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_jump)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                img.setImageDrawable(nomal);\r\n                nomal.start();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n    }\r\n\r\n    public Helper(ImageView IMG, AppCompatActivity activity){\r\n        img = IMG;\r\n        nomal = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_default)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n\r\n        jump = new AnimationListner((AnimationDrawable)\r\n                activity.getResources().getDrawable(\r\n                        R.drawable.helper_jump)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n                img.setImageDrawable(nomal);\r\n                nomal.start();\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n    }\r\n    public void setNomal(){\r\n        jump.setOneShot(true);\r\n        img.setImageDrawable(jump);\r\n        jump.start();\r\n    }\r\n\r\n    public void setStart(){\r\n        nomal2.setOneShot(true);\r\n        speak.setOneShot(true);\r\n        speak2.setOneShot(true);\r\n        jump.setOneShot(true);\r\n        img.setImageDrawable(jump);\r\n        jump.start();\r\n    }\r\n\r\n    public void setTest(){\r\n        nomal2.setOneShot(true);\r\n        speak.setOneShot(true);\r\n        speak2.setOneShot(true);\r\n        listn_s.setOneShot(true);\r\n        listn_f.setOneShot(true);\r\n        jump.setOneShot(true);\r\n        img.setImageDrawable(jump);\r\n        jump.start();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cbnu/dementiadiagnosis/Helper.java b/app/src/main/java/com/cbnu/dementiadiagnosis/Helper.java
--- a/app/src/main/java/com/cbnu/dementiadiagnosis/Helper.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/com/cbnu/dementiadiagnosis/Helper.java	(date 1667442950090)
@@ -3,6 +3,7 @@
 import android.graphics.drawable.AnimationDrawable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentActivity;
 
 import android.widget.ImageView;
 
@@ -216,6 +217,260 @@
                     }
                 }
             }
+        };
+        anal = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_analy)) {
+            @Override
+            public void onAnimationFinish() {
+            }
+
+            @Override
+            public void onAnimationStart() {
+                if(stt.isAnalysing){
+                    img.setImageDrawable(this);
+                    this.start();
+                }
+                else if(stt.isTooFast){
+                    this.stop();
+                    img.setImageDrawable(slow);
+                    slow.start();
+                }
+                else if(stt.isRecognize){
+                    this.stop();
+                    img.setImageDrawable(recog);
+                    recog.start();
+                }
+                else if(stt.isListening){
+                    this.stop();
+                    img.setImageDrawable(listn);
+                    listn.start();
+                }
+                else{
+                    this.stop();
+                    img.setImageDrawable(listn_f);
+                    listn_f.start();
+                }
+            }
+        };
+        slow = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_slow)) {
+            @Override
+            public void onAnimationFinish() {
+            }
+
+            @Override
+            public void onAnimationStart() {
+                if(stt.isTooFast){
+                    img.setImageDrawable(this);
+                    this.start();
+                }
+                else if(stt.isAnalysing){
+                    this.stop();
+                    img.setImageDrawable(slow);
+                    slow.start();
+                }
+                else if(stt.isRecognize){
+                    this.stop();
+                    img.setImageDrawable(recog);
+                    recog.start();
+                }
+                else if(stt.isListening){
+                    this.stop();
+                    img.setImageDrawable(listn);
+                    listn.start();
+                }
+                else{
+                    this.stop();
+                    img.setImageDrawable(listn_f);
+                    listn_f.start();
+                }
+            }
+        };
+    }
+
+    public Helper(MainSTT stt, ImageView IMG, FragmentActivity activity){
+        img = IMG;
+        nomal = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_default)) {
+            @Override
+            public void onAnimationFinish() {
+            }
+
+            @Override
+            public void onAnimationStart() {
+                if(stt.isListening){
+                    this.stop();
+                    img.setImageDrawable(listn_s);
+                    listn_s.start();
+                }
+                else{
+                    img.setImageDrawable(this);
+                    this.start();
+                }
+            }
+        };
+
+        nomal2 = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_default_2)) {
+            @Override
+            public void onAnimationFinish() {
+                img.setImageDrawable(nomal);
+                nomal.start();
+            }
+
+            @Override
+            public void onAnimationStart() {
+            }
+        };
+
+        jump = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_jump)) {
+            @Override
+            public void onAnimationFinish() {
+                img.setImageDrawable(nomal);
+                nomal.start();
+            }
+
+            @Override
+            public void onAnimationStart() {
+            }
+        };
+
+        speak = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_talk)) {
+            @Override
+            public void onAnimationFinish() {
+                this.stop();
+                img.setImageDrawable(speak2);
+                speak2.start();
+            }
+
+            @Override
+            public void onAnimationStart() {
+            }
+        };
+
+        speak2 = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_talk_2)) {
+            @Override
+            public void onAnimationFinish() {
+                this.stop();
+                img.setImageDrawable(speak);
+                speak.start();
+            }
+
+            @Override
+            public void onAnimationStart() {
+            }
+        };
+
+        listn = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_listen)) {
+            @Override
+            public void onAnimationFinish() {
+            }
+
+            @Override
+            public void onAnimationStart() {
+                if(stt.isListening){
+                    img.setImageDrawable(this);
+                    this.start();
+                }
+                else if(stt.isTooFast){
+                    this.stop();
+                    img.setImageDrawable(slow);
+                    slow.start();
+                }
+                else if(stt.isRecognize){
+                    this.stop();
+                    img.setImageDrawable(recog);
+                    recog.start();
+                }
+                else if(stt.isAnalysing){
+                    this.stop();
+                    img.setImageDrawable(listn);
+                    listn.start();
+                }
+                else{
+                    this.stop();
+                    img.setImageDrawable(listn_f);
+                    listn_f.start();
+                }
+            }
+        };
+
+        listn_s = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_listen_s)) {
+
+            @Override
+            public void onAnimationFinish() {
+                img.setImageDrawable(listn);
+                listn.start();
+            }
+
+            @Override
+            public void onAnimationStart() {
+            }
+        };
+
+        listn_f = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_listen_f)) {
+
+            @Override
+            public void onAnimationFinish() {
+                img.setImageDrawable(nomal);
+                nomal.start();
+            }
+
+            @Override
+            public void onAnimationStart() {
+            }
+        };
+
+        recog = new AnimationListner((AnimationDrawable)
+                activity.getResources().getDrawable(
+                        R.drawable.helper_recog)) {
+            @Override
+            public void onAnimationFinish() {
+            }
+
+            @Override
+            public void onAnimationStart() {
+                if(stt.isRecognize){
+                    img.setImageDrawable(this);
+                    this.start();
+                }
+                else if(stt.isTooFast){
+                    this.stop();
+                    img.setImageDrawable(slow);
+                    slow.start();
+                }
+                else if(stt.isAnalysing){
+                    this.stop();
+                    img.setImageDrawable(anal);
+                    anal.start();
+                }
+                else if(stt.isListening){
+                    this.stop();
+                    img.setImageDrawable(listn);
+                    listn.start();
+                }
+                else{
+                    this.stop();
+                    img.setImageDrawable(listn_f);
+                    listn_f.start();
+                }
+            }
         };
         anal = new AnimationListner((AnimationDrawable)
                 activity.getResources().getDrawable(
Index: app/src/main/res/layout/language_func.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\"QuizPage.ExecutionPage\">\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/left\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginStart=\"15dp\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"-90\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/type\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"30dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:text=\"지남력\"\r\n        android:textSize=\"18sp\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/right\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_marginTop=\"15dp\"\r\n        android:layout_marginEnd=\"15dp\"\r\n        android:background=\"@drawable/ic_left_right\"\r\n        android:rotation=\"90\" />\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/progressBar\"\r\n        style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"5dp\"\r\n        android:layout_below=\"@+id/type\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:progress=\"20\"\r\n        android:progressDrawable=\"@drawable/progressbar\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/question\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/progressBar\"\r\n        android:layout_marginStart=\"30dp\"\r\n        android:layout_marginTop=\"50dp\"\r\n        android:layout_marginEnd=\"30dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:gravity=\"center\"\r\n        android:hint=\"Question\"\r\n        android:letterSpacing=\"0.04\"\r\n        android:lineSpacingExtra=\"10dp\"\r\n        android:textSize=\"20sp\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/question_image\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"300dp\"\r\n        android:layout_below=\"@+id/question\"\r\n        android:layout_centerHorizontal=\"true\" />\r\n\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/gray_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/question_image\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:background=\"@drawable/shape_round_bar\"\r\n        android:backgroundTint=\"?attr/colorSecondary\">\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/textInput\"\r\n            style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"70dp\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            android:layout_marginTop=\"20dp\">\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/result\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:fontFamily=\"@font/jejugothic\"\r\n                android:gravity=\"center\" />\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/sttStart\"\r\n            android:layout_width=\"65dp\"\r\n            android:layout_height=\"65dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:background=\"@drawable/ic_mic\" />\r\n\r\n        <androidx.appcompat.widget.AppCompatButton\r\n            android:id=\"@+id/donknow\"\r\n            android:layout_width=\"130dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_gravity=\"center|bottom\"\r\n            android:layout_marginBottom=\"30dp\"\r\n            android:background=\"@drawable/round_button\"\r\n            android:backgroundTint=\"?attr/colorTertiary\"\r\n            android:fontFamily=\"@font/jejugothic\"\r\n            android:gravity=\"center\"\r\n            android:text=\"잘모르겠어요\"\r\n            android:textColor=\"?attr/colorOnTertiary\"\r\n            android:textSize=\"14sp\" />\r\n    </FrameLayout>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/language_func.xml b/app/src/main/res/layout/language_func.xml
--- a/app/src/main/res/layout/language_func.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/layout/language_func.xml	(date 1667440842848)
@@ -100,7 +100,7 @@
             android:layout_height="65dp"
             android:layout_gravity="center"
             android:layout_marginTop="10dp"
-            android:background="@drawable/ic_mic" />
+            android:background="@drawable/mic_selector" />
 
         <androidx.appcompat.widget.AppCompatButton
             android:id="@+id/donknow"
Index: app/src/main/java/com/cbnu/dementiadiagnosis/QuizHOME.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cbnu.dementiadiagnosis;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.drawable.AnimationDrawable;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport java.nio.channels.InterruptedByTimeoutException;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport QuizPage.ExecutionPage;\r\nimport QuizPage.LanguagePage;\r\nimport QuizPage.SpaceTimePage;\r\nimport QuizPage.attention_Page;\r\nimport QuizPage.fluency_Page;\r\nimport QuizPage.memoryInput_Page;\r\nimport QuizPage.memoryOutput_Page;\r\nimport QuizPage.orientation_Page;\r\nimport fragment.FragmentHome;\r\n\r\n\r\npublic class QuizHOME extends AppCompatActivity {\r\n\r\n    TextView Announce, title_text, textView, exam, loading_text;\r\n    Button sttBtn;\r\n    ImageView helper_img, mic, arrow, finger, loading;\r\n    AppCompatButton donknow;\r\n    Helper helper;\r\n    TTS tts;\r\n    FrameLayout view;\r\n    Handler handler;\r\n    AnimationListner anim;\r\n\r\n    private int current = 0;\r\n    public List<String> announce;\r\n    private long backBtnTime = 0;\r\n    private int part_score[];\r\n    private int total_score = 0;\r\n    boolean isDone = false;\r\n    List<String> tem = new ArrayList<>();\r\n    boolean isStart = false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.quiz_home1);\r\n\r\n        announce = new ArrayList();\r\n        part_score = new int[8];\r\n\r\n        sttBtn = findViewById(R.id.sttStart);\r\n        title_text = findViewById(R.id.title_text);\r\n        textView = findViewById(R.id.textView);\r\n        mic = findViewById(R.id.mic);\r\n        finger = findViewById(R.id.finger);\r\n        arrow = findViewById(R.id.arrow);\r\n        donknow = findViewById(R.id.donknow);\r\n        Announce = findViewById(R.id.announce);\r\n        view = findViewById(R.id.view);\r\n        exam = findViewById(R.id.exam);\r\n        loading = findViewById(R.id.loading);\r\n        helper_img = findViewById(R.id.img);\r\n        loading_text = findViewById(R.id.loading_text);\r\n        handler = new Handler();\r\n\r\n        anim = new AnimationListner((AnimationDrawable)\r\n                this.getResources().getDrawable(\r\n                        R.drawable.helper_listen)) {\r\n            @Override\r\n            public void onAnimationFinish() {\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationStart() {\r\n            }\r\n        };\r\n        loading.setImageDrawable(anim);\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                if(!isDone){\r\n                    tem.clear();\r\n                    tts.onInit(status, Announce.getText().toString(), \"default\", 1000);\r\n                    tem.add(\"진단을 시작하기 전 사용방법을 간단히 안내해드리겠습니다.\");\r\n                    tem.add(\"맨 위에 나타나는 질문을 듣고\");\r\n                    tem.add(\"아래 마이크 버튼을 눌러 음성으로 답변하거나\");\r\n                    tem.add(\"네모난 상자를 눌러 타자로 답변할 수 있습니다.\");\r\n                    tem.add(\"문제의 정답을 모를 땐 '잘모르겠어요'를 눌러주세요.\");\r\n                    tem.add(\"질문이 기억나지 않는다면 질문 문장을 눌러주세요.\");\r\n                    tem.add(\"왼쪽으로 화면을 밀면 다음 문제로 넘어갑니다.\");\r\n                    tem.add(\"오른쪽으로 화면을 밀면 이전 문제로 넘어갑니다.\");\r\n                    tem.add(\"진단은 최대한 조용한 공간에서 혼자 진행해주세요.\");\r\n                    tem.add(\"또한, 정확한 진단을 위해 진단 중엔 이동하지 말아주세요.\");\r\n                    tem.add(\"모두 숙지하셨나요?\");\r\n                    tem.add(\"그렇다면 지금부터 치매 정규 진단을 시작하겠습니다.\");\r\n                    tem.add(\"생각나는 대로 최선을 다해 답변해 주시면 됩니다.\");\r\n                    tem.add(\"준비되셨다면 아래 '시작하기'를 눌러주세요.\");\r\n                    tts.UtteranceProgress(tem, \"continue\", Announce, title_text, textView, mic, arrow, finger, donknow);\r\n                }\r\n                else\r\n                    tts.onInit(status, Announce.getText().toString(), \"default\", 1000);\r\n            }\r\n        });\r\n\r\n        init_Announce();\r\n\r\n        helper = new Helper(tts, helper_img, this);\r\n        helper.setStart();\r\n\r\n        Announce.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(current == 0){\r\n                    Announce.setText(\"안녕하세요.\");\r\n                    tts.speakOut(Announce.getText().toString(),\"default\");\r\n                    tem.clear();\r\n                    tem.add(\"진단을 시작하기 전 사용방법을 간단히 안내해드리겠습니다.\");\r\n                    tem.add(\"맨 위에 나타나는 질문을 듣고\");\r\n                    tem.add(\"아래 마이크 버튼을 눌러 음성으로 답변하거나\");\r\n                    tem.add(\"네모난 상자를 눌러 타자로 답변할 수 있습니다.\");\r\n                    tem.add(\"문제의 정답을 모를 땐 '잘모르겠어요'를 눌러주세요.\");\r\n                    tem.add(\"질문이 기억나지 않는다면 질문 문장을 눌러주세요.\");\r\n                    tem.add(\"왼쪽으로 화면을 밀면 다음 문제로 넘어갑니다.\");\r\n                    tem.add(\"오른쪽으로 화면을 밀면 이전 문제로 넘어갑니다.\");\r\n                    tem.add(\"진단은 최대한 조용한 공간에서 혼자 진행해주세요.\");\r\n                    tem.add(\"또한, 정확한 진단을 위해 진단 중엔 이동하지 말아주세요.\");\r\n                    tem.add(\"모두 숙지하셨나요?\");\r\n                    tem.add(\"그렇다면 지금부터 치매 정규 진단을 시작하겠습니다.\");\r\n                    tem.add(\"생각나는 대로 최선을 다해 답변해 주시면 됩니다.\");\r\n                    tem.add(\"준비되셨다면 아래 '시작하기'를 눌러주세요.\");\r\n                    tts.UtteranceProgress(tem, \"continue\", Announce, title_text, textView, mic, arrow, finger, donknow);\r\n                }\r\n                else if(current == 1){\r\n                    tts.speakOut(Announce.getText().toString(),\"default\");\r\n                    tts.UtteranceProgress();\r\n                }\r\n            }\r\n        });\r\n        Announce.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(current == 0){\r\n                    Announce.setText(\"안녕하세요.\");\r\n                    tts.speakOut(Announce.getText().toString(),\"default\");\r\n                    tem.clear();\r\n                    tem.add(\"진단을 시작하기 전 사용방법을 간단히 안내해드리겠습니다.\");\r\n                    tem.add(\"맨 위에 나타나는 질문을 듣고\");\r\n                    tem.add(\"아래 마이크 버튼을 눌러 음성으로 답변하거나\");\r\n                    tem.add(\"네모난 상자를 눌러 타자로 답변할 수 있습니다.\");\r\n                    tem.add(\"문제의 정답을 모를 땐 '잘모르겠어요'를 눌러주세요.\");\r\n                    tem.add(\"질문이 기억나지 않는다면 질문 문장을 눌러주세요.\");\r\n                    tem.add(\"왼쪽으로 화면을 밀면 다음 문제로 넘어갑니다.\");\r\n                    tem.add(\"오른쪽으로 화면을 밀면 이전 문제로 넘어갑니다.\");\r\n                    tem.add(\"진단은 최대한 조용한 공간에서 혼자 진행해주세요.\");\r\n                    tem.add(\"또한, 정확한 진단을 위해 진단 중엔 이동하지 말아주세요.\");\r\n                    tem.add(\"모두 숙지하셨나요?\");\r\n                    tem.add(\"그렇다면 지금부터 치매 정규 진단을 시작하겠습니다.\");\r\n                    tem.add(\"생각나는 대로 최선을 다해 답변해 주시면 됩니다.\");\r\n                    tem.add(\"준비되셨다면 아래 '시작하기'를 눌러주세요.\");\r\n                    tts.UtteranceProgress(tem, \"continue\", Announce, title_text, textView, mic, arrow, finger, donknow);\r\n                }\r\n                else if(current == 1){\r\n                    tts.speakOut(Announce.getText().toString(),\"default\");\r\n                    tts.UtteranceProgress();\r\n                }\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n                Intent intent = null;\r\n                switchPage(intent, view);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /*@Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent resultIntent) {\r\n        super.onActivityResult(requestCode, resultCode, resultIntent);\r\n        if (requestCode == 100 && resultCode == 1) {\r\n            current = 1;\r\n            part_score = resultIntent.getIntArrayExtra(\"part_score\");\r\n\r\n            for(int i = 0; i < part_score.length; i++){\r\n                total_score += part_score[i];\r\n            }\r\n\r\n            Toast.makeText(this, \"결과가 저장되었습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }*/\r\n    //혹시나 안되면 주석 풀어보기\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        Intent intent;\r\n        intent = getIntent();\r\n        part_score = intent.getIntArrayExtra(\"scores\");\r\n        isDone = intent.getBooleanExtra(\"isDone\", false);\r\n\r\n        if(isDone){\r\n            current = 1;\r\n            view.setVisibility(View.GONE);\r\n            exam.setVisibility(View.GONE);\r\n            Announce.setVisibility(View.GONE);\r\n            sttBtn.setVisibility(View.GONE);\r\n            helper_img.setVisibility(View.GONE);\r\n            loading.setVisibility(View.VISIBLE);\r\n            loading_text.setVisibility(View.VISIBLE);\r\n            anim.start();\r\n\r\n            for(int i = 0; i < part_score.length; i++){\r\n                total_score += part_score[i];\r\n            }\r\n\r\n            Toast.makeText(this, \"결과가 저장되었습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n            handler.postDelayed(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    Intent intent = new Intent(view.getContext(), Result.class);\r\n                    intent.putExtra(\"part_score\", part_score);\r\n                    intent.putExtra(\"total_score\", total_score);\r\n                    startActivity(intent);\r\n                    finish();\r\n                }\r\n            }, 3000);\r\n\r\n        }\r\n        else {\r\n            if(!isStart){\r\n                Announce.setText(\"안녕하세요.\");\r\n                tts.speakOut(Announce.getText().toString(),\"default\");\r\n                tem.clear();\r\n                tem.add(\"진단을 시작하기 전 사용방법을 간단히 안내해드리겠습니다.\");\r\n                tem.add(\"맨 위에 나타나는 질문을 듣고\");\r\n                tem.add(\"아래 마이크 버튼을 눌러 음성으로 답변하거나\");\r\n                tem.add(\"네모난 상자를 눌러 타자로 답변할 수 있습니다.\");\r\n                tem.add(\"문제의 정답을 모를 땐 '잘모르겠어요'를 눌러주세요.\");\r\n                tem.add(\"질문이 기억나지 않는다면 질문 문장을 눌러주세요.\");\r\n                tem.add(\"왼쪽으로 화면을 밀면 다음 문제로 넘어갑니다.\");\r\n                tem.add(\"오른쪽으로 화면을 밀면 이전 문제로 넘어갑니다.\");\r\n                tem.add(\"진단은 최대한 조용한 공간에서 혼자 진행해주세요.\");\r\n                tem.add(\"또한, 정확한 진단을 위해 진단 중엔 이동하지 말아주세요.\");\r\n                tem.add(\"모두 숙지하셨나요?\");\r\n                tem.add(\"그렇다면 지금부터 치매 정규 진단을 시작하겠습니다.\");\r\n                tem.add(\"생각나는 대로 최선을 다해 답변해 주시면 됩니다.\");\r\n                tem.add(\"준비되셨다면 아래 '시작하기'를 눌러주세요.\");\r\n                tts.UtteranceProgress(tem, \"continue\", Announce, title_text, textView, mic, arrow, finger, donknow);\r\n            }\r\n            else finish();\r\n        }\r\n    }\r\n\r\n    private void init_Announce(){\r\n        announce.add(\"정규검사\");\r\n        announce.add(\"결과 출력\");\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void switchPage(Intent intent, View view){\r\n        switch (current){\r\n            case 0:\r\n                isStart = true;\r\n                intent = new Intent(view.getContext(), orientation_Page.class);\r\n                startActivityForResult(intent, 100);\r\n                break;\r\n            case 1:\r\n                intent = new Intent(view.getContext(), Result.class);\r\n                intent.putExtra(\"part_score\", part_score);\r\n                intent.putExtra(\"total_score\", total_score);\r\n                startActivity(intent);\r\n                finish();\r\n                break;\r\n\r\n        }\r\n    }\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        tts.Stop();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cbnu/dementiadiagnosis/QuizHOME.java b/app/src/main/java/com/cbnu/dementiadiagnosis/QuizHOME.java
--- a/app/src/main/java/com/cbnu/dementiadiagnosis/QuizHOME.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/com/cbnu/dementiadiagnosis/QuizHOME.java	(date 1667836508600)
@@ -5,7 +5,6 @@
 import android.os.Bundle;
 import android.os.Handler;
 import android.speech.tts.TextToSpeech;
-import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 import android.widget.FrameLayout;
@@ -16,20 +15,10 @@
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.AppCompatButton;
 
-import java.nio.channels.InterruptedByTimeoutException;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 
-import QuizPage.ExecutionPage;
-import QuizPage.LanguagePage;
-import QuizPage.SpaceTimePage;
-import QuizPage.attention_Page;
-import QuizPage.fluency_Page;
-import QuizPage.memoryInput_Page;
-import QuizPage.memoryOutput_Page;
 import QuizPage.orientation_Page;
-import fragment.FragmentHome;
 
 
 public class QuizHOME extends AppCompatActivity {
@@ -217,6 +206,7 @@
         isDone = intent.getBooleanExtra("isDone", false);
 
         if(isDone){
+            tts.Stop();
             current = 1;
             view.setVisibility(View.GONE);
             exam.setVisibility(View.GONE);
Index: app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cbnu.dementiadiagnosis;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.ScaleAnimation;\r\nimport android.view.animation.TranslateAnimation;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.navigation.NavigationBarView;\r\nimport fragment.FragmentChart;\r\nimport fragment.FragmentHome;\r\nimport fragment.FragmentInf;\r\nimport fragment.FragmentSetting;\r\n\r\npublic class HomeActivity extends AppCompatActivity {\r\n\r\n    private final FragmentManager fragmentManager = getSupportFragmentManager();\r\n    private final FragmentHome fragmentHome = new FragmentHome();\r\n    private final FragmentInf fragmentInf = new FragmentInf();\r\n    private final FragmentChart fragmentChart = new FragmentChart();\r\n    private final FragmentSetting fragmentSetting = new FragmentSetting();\r\n    final int PERMISSION = 1;\r\n    private PermissionSupport permission;\r\n    TranslateAnimation animUpDown;\r\n    ScaleAnimation animScale;\r\n    TextView bubble;\r\n    FloatingActionButton fb;\r\n    boolean isHome = true;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n\r\n        FragmentTransaction transaction = fragmentManager.beginTransaction();\r\n        transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();\r\n        animUpDown = new TranslateAnimation(\r\n                Animation.RELATIVE_TO_PARENT,0f,\r\n                Animation.RELATIVE_TO_PARENT, 0f,\r\n                Animation.RELATIVE_TO_PARENT, -0.005f,\r\n                Animation.RELATIVE_TO_PARENT, 0.005f);\r\n        animUpDown.setDuration(400);\r\n        animUpDown.setRepeatCount(Animation.INFINITE);\r\n        animUpDown.setRepeatMode(Animation.REVERSE);\r\n\r\n        animScale = new ScaleAnimation(0,1,1,1,600,0);\r\n        animScale.setDuration(400);\r\n\r\n        bubble = findViewById(R.id.bubble);\r\n        bubble.startAnimation(animScale);\r\n\r\n        fb = findViewById(R.id.voiceBot);\r\n        fb.startAnimation(animUpDown);\r\n        fb.setOnClickListener(v -> startActivity(new Intent(HomeActivity.this, VoiceBot.class)));\r\n\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.navigationView);\r\n        bottomNavigationView.setOnItemSelectedListener(new ItemSelectedListener());\r\n\r\n        permissionCheck();\r\n    }\r\n\r\n    private void permissionCheck() {\r\n        // PermissionSupport.java 클래스 객체 생성\r\n        permission = new PermissionSupport(this, this);\r\n\r\n        // 권한 체크 후 리턴이 false로 들어오면\r\n        if (!permission.checkPermission()){\r\n            //권한 요청\r\n            permission.requestPermission();\r\n        }\r\n    }\r\n    // Request Permission에 대한 결과 값 받아와\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        //여기서도 리턴이 false로 들어온다면 (사용자가 권한 허용 거부)\r\n        if (!permission.permissionResult(requestCode, permissions, grantResults)) {\r\n            // 다시 permission 요청\r\n            permission.requestPermission();\r\n        }\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n    }\r\n\r\n    class ItemSelectedListener implements NavigationBarView.OnItemSelectedListener {\r\n\r\n        @Override\r\n        public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n            FragmentTransaction transaction = fragmentManager.beginTransaction();\r\n\r\n            switch(item.getItemId())\r\n            {\r\n                case R.id.homeItem:\r\n                    transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();\r\n                    fb.show();\r\n                    bubble.setVisibility(View.VISIBLE);\r\n                    bubble.startAnimation(animScale);\r\n                    isHome = true;\r\n                    break;\r\n                case R.id.informationItem:\r\n                    transaction.replace(R.id.frameLayout, fragmentInf).commitAllowingStateLoss();\r\n                    fb.hide();\r\n                    bubble.setVisibility(View.INVISIBLE);\r\n                    isHome = false;\r\n                    break;\r\n                case R.id.resultItem:\r\n                    transaction.replace(R.id.frameLayout, fragmentChart).commitAllowingStateLoss();\r\n                    fb.hide();\r\n                    bubble.setVisibility(View.INVISIBLE);\r\n                    isHome = false;\r\n                    break;\r\n                case R.id.setItem:\r\n                    transaction.replace(R.id.frameLayout, fragmentSetting).commitAllowingStateLoss();\r\n                    fb.show();\r\n                    bubble.setVisibility(View.INVISIBLE);\r\n                    isHome = false;\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"한 번 더 누르면 종료됩니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        if(isHome) bubble.startAnimation(animScale);\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java b/app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java
--- a/app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java	(date 1667793063366)
@@ -18,10 +18,14 @@
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 import com.google.android.material.navigation.NavigationBarView;
+
+import java.util.ArrayList;
+
 import fragment.FragmentChart;
 import fragment.FragmentHome;
 import fragment.FragmentInf;
 import fragment.FragmentSetting;
+import user.SharedPreference;
 
 public class HomeActivity extends AppCompatActivity {
 
@@ -37,6 +41,8 @@
     TextView bubble;
     FloatingActionButton fb;
     boolean isHome = true;
+    int start, end, speed;
+    ArrayList<Integer> para= new ArrayList<>();
 
     private long backBtnTime = 0;
 
@@ -45,6 +51,10 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_home);
 
+        start = SharedPreference.getSTT_start(this);
+        end = SharedPreference.getSTT_end(this);
+        speed = SharedPreference.getSTT_speed(this);
+
         FragmentTransaction transaction = fragmentManager.beginTransaction();
         transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();
         animUpDown = new TranslateAnimation(
@@ -64,7 +74,12 @@
 
         fb = findViewById(R.id.voiceBot);
         fb.startAnimation(animUpDown);
-        fb.setOnClickListener(v -> startActivity(new Intent(HomeActivity.this, VoiceBot.class)));
+        fb.setOnClickListener(v -> {
+            Intent intent = new Intent(getApplicationContext(), VoiceBot.class);
+            startActivity(intent);
+        });
+
+
 
         BottomNavigationView bottomNavigationView = findViewById(R.id.navigationView);
         bottomNavigationView.setOnItemSelectedListener(new ItemSelectedListener());
@@ -102,6 +117,13 @@
             switch(item.getItemId())
             {
                 case R.id.homeItem:
+                    ArrayList<Integer> parameters = new ArrayList<>();
+                    parameters.add(speed);
+                    parameters.add(start);
+                    parameters.add(end);
+                    Bundle bundle = new Bundle();
+                    bundle.putIntegerArrayList("stt 데이터 전송", parameters);
+                    fragmentHome.setArguments(bundle);
                     transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();
                     fb.show();
                     bubble.setVisibility(View.VISIBLE);
@@ -121,6 +143,13 @@
                     isHome = false;
                     break;
                 case R.id.setItem:
+                    ArrayList<Integer> parameters1 = new ArrayList<>();
+                    parameters1.add(speed);
+                    parameters1.add(start);
+                    parameters1.add(end);
+                    Bundle bundle1 = new Bundle();
+                    bundle1.putIntegerArrayList("stt 데이터 전송", parameters1);
+                    fragmentSetting.setArguments(bundle1);
                     transaction.replace(R.id.frameLayout, fragmentSetting).commitAllowingStateLoss();
                     fb.show();
                     bubble.setVisibility(View.INVISIBLE);
Index: app/src/main/java/com/cbnu/dementiadiagnosis/VoiceBot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cbnu.dementiadiagnosis;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.BufferedReader;\r\nimport java.io.DataOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport com.google.gson.Gson;\r\n\r\nimport memoryQuiz.StartActivity;\r\nimport user.SharedPreference;\r\n\r\npublic class VoiceBot extends AppCompatActivity {\r\n\r\n    MainSTT stt;\r\n    TTS tts;\r\n\r\n    TextView tv_outPut;\r\n    EditText edit;\r\n    ImageButton sttBtn;\r\n    ImageButton submit;\r\n    String request;\r\n    String answer = \"\";\r\n    String extra_ans = \"\";\r\n    String img = \"\";\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    List<String> tem = new ArrayList<>();\r\n    AppCompatButton exit;\r\n\r\n    long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.voicebot);\r\n\r\n        // 위젯에 대한 참조.\r\n        tv_outPut = (TextView) findViewById(R.id.question);\r\n        sttBtn = findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        edit =(EditText)findViewById(R.id.result);\r\n        stt = new MainSTT(this, edit, tv_outPut, sttBtn, submit, tts);\r\n        helper_img = findViewById(R.id.img);\r\n        exit = findViewById(R.id.btnLogout);\r\n\r\n        tv_outPut.setText(\"안녕하세요!\\n같이 대화해요!\");\r\n        edit.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, tv_outPut.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        exit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        tv_outPut.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(tv_outPut.getText().toString());\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                getAnswer();\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!stt.isRecording){\r\n                    tts.isStopUtt = true;\r\n                    tts.Stop();\r\n                    stt.start_STT();\r\n                }\r\n                else {\r\n                    stt.start_STT();\r\n                    getAnswer();\r\n                }\r\n            }\r\n        });\r\n\r\n        // URL 설정.\r\n\r\n    }\r\n\r\n    public void getAnswer(){\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        edit.setEnabled(false);\r\n        request = edit.getText().toString();\r\n        Thread thread = new Thread(new Runnable() {\r\n            public void run() {\r\n                filter(sendDataAndGetResult(request));\r\n            }\r\n        });\r\n        thread.start();\r\n        try{\r\n            thread.join();\r\n            Log.d(\"확인\", \"answer : \"+answer);\r\n            if(!img.equals(\"\")){\r\n                Log.d(\"확인\", \"img : \"+img);\r\n                tv_outPut.setText(answer + \"\\n\\n\" + img);\r\n                readResponse();\r\n            }\r\n            else if(!extra_ans.equals(\"\")){\r\n                Log.d(\"확인\", \"extra : \"+extra_ans);\r\n                readResponse();\r\n            }\r\n            else if(edit.getText().toString().equals(\"\")){\r\n                tv_outPut.setText(\"말을 걸어주세요!\");\r\n                tts.speakOut(tv_outPut.getText().toString());\r\n                sttBtn.setEnabled(true);\r\n                submit.setEnabled(true);\r\n                edit.setEnabled(true);\r\n            }\r\n            else {\r\n                readResponse();\r\n            }\r\n\r\n        }catch (InterruptedException e){\r\n            Log.e(\"확인\", \"인터럽트 오류 발생함.\");\r\n        }\r\n        answer = \"\";\r\n        extra_ans = \"\";\r\n        img = \"\";\r\n    }\r\n\r\n    public void filter(String input){\r\n        String splited[] = input.split(\":\");\r\n        String s = \"\";\r\n        String s2 = \"\";\r\n        if(input.contains(\"이미지셋\")){\r\n            String[] splited1 = input.split(\"\\\"\");\r\n            for(int i = 0; i<splited1.length; i++){\r\n                if(splited1[i].contains(\"이미지셋\")){\r\n                    String[] splited2 = splited1[i].split(\" \");\r\n                    if(splited2[2].contains(\"u\")){\r\n                        String splited3[] = splited2[2].split(\"\\\\\\\\\");\r\n                        img = splited3[0];\r\n                    }\r\n                    else img = splited2[2];\r\n                }\r\n            }\r\n        }\r\n\r\n        if(input.contains(\"토픽\")){\r\n            int count = 0;\r\n            for(int i= 0; i<splited.length; i++){\r\n                if(splited[i].contains(\"text\") && !splited[i+1].contains(\"핑퐁\")) {\r\n                    s = splited[i+1];\r\n                    String splited2[] = s.split(\"\\\"\");\r\n                    if(splited2[1].contains(\"u\")){\r\n                        String splited3[] = splited2[1].split(\"\\\\\\\\\");\r\n                        answer = splited3[0];\r\n                        count = i+1;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        answer = splited2[1];\r\n                        count = i+1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            for(int i = count; i<splited.length; i++){\r\n                if(splited[i].contains(\"text\")) {\r\n                    s2 = splited[i+1];\r\n                    String splited2[] = s2.split(\"\\\"\");\r\n                    if(splited2[1].contains(\"u\")){\r\n                        String splited3[] = splited2[1].split(\"\\\\\\\\\");\r\n                        extra_ans = splited3[0];\r\n                    }\r\n                    else extra_ans = splited2[1];\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            for(int i= 0; i<splited.length; i++){\r\n                if(splited[i].contains(\"text\") && !splited[i+1].contains(\"핑퐁\")) {\r\n                    s = splited[i+1];\r\n                    String splited2[] = s.split(\"\\\"\");\r\n                    if(splited2[1].contains(\"u\")){\r\n                        String splited3[] = splited2[1].split(\"\\\\\\\\\");\r\n                        answer = splited3[0];\r\n                        break;\r\n                    }\r\n                    else {\r\n                        answer = splited2[1];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public void filter2(){\r\n\r\n    }\r\n\r\n    public void readResponse(){\r\n        tem.clear();\r\n        if(answer.contains(\"사용자\")){\r\n            answer = answer.replace(\"사용자\", SharedPreference.getUserName(VoiceBot.this));\r\n        }\r\n        if(extra_ans.contains(\"사용자\")){\r\n            extra_ans = extra_ans.replace(\"사용자\", SharedPreference.getUserName(VoiceBot.this));\r\n        }\r\n        if(extra_ans.equals(\"\")){\r\n            if(answer.contains(\"@\")){\r\n                String[] split = answer.split(\"@\");\r\n                tv_outPut.setText(split[0]);\r\n                tts.speakOut(split[0], \"default\");\r\n                for(String s : split){\r\n                    tem.add(s);\r\n                }\r\n                tem.remove(0);\r\n                tts.UtteranceProgress(tem, \"continue\", tv_outPut, sttBtn, submit, edit);\r\n            }\r\n            else{\r\n                tv_outPut.setText(answer);\r\n                tts.speakOut(answer, \"Done\");\r\n                tts.UtteranceProgress(sttBtn, submit, edit, answer, this);\r\n            }\r\n        }\r\n        else{\r\n            if(answer.contains(\"@\")){\r\n                String[] split = answer.split(\"@\");\r\n                tv_outPut.setText(split[0]);\r\n                tts.speakOut(split[0], \"default\");\r\n                for(String s : split){\r\n                    tem.add(s);\r\n                }\r\n                tem.remove(0);\r\n            }\r\n            else{\r\n                tv_outPut.setText(answer);\r\n                tts.speakOut(answer, \"default\");\r\n            }\r\n\r\n            if(extra_ans.contains(\"@\")){\r\n                String[] split = extra_ans.split(\"@\");\r\n                for(String s : split){\r\n                    tem.add(s);\r\n                }\r\n            }\r\n            else{\r\n                tem.add(extra_ans);\r\n            }\r\n            tts.UtteranceProgress(tem, \"continue\", tv_outPut, sttBtn, submit, edit);\r\n        }\r\n    }\r\n\r\n    public String sendDataAndGetResult (String answer) {\r\n        String openApiURL = \"https://builder.pingpong.us/api/builder/6303553ce4b069adbd03156f/integration/v0.2/custom/{sessionId}\";\r\n        String accessKey = \"Basic a2V5OmM3ODRlOTMwZGY1ZTlmYjMxZjFhMWMyYmFmYTNmYTMz\";\r\n\r\n        Gson gson = new Gson();\r\n\r\n        java.util.Map<String, Object> request = new HashMap<>();\r\n        Map<String, Object> req = new HashMap<>();\r\n\r\n        req.put(\"query\", answer);\r\n        request.put(\"request\", req);\r\n\r\n        URL url;\r\n        String responBody;\r\n\r\n        try {\r\n            url = new URL(openApiURL);\r\n            HttpURLConnection con = (HttpURLConnection)url.openConnection();\r\n            con.setRequestMethod(\"POST\");\r\n            con.setRequestProperty(\"Authorization\", accessKey); // \"\"안에 apikey를 입력\r\n            con.setRequestProperty(\"Content-Type\", \"application/json\");\r\n            con.setDoOutput(true);\r\n\r\n            DataOutputStream wr = new DataOutputStream(con.getOutputStream());\r\n            wr.write(gson.toJson(request).getBytes(\"UTF-8\"));\r\n            wr.flush();\r\n            wr.close();\r\n\r\n            InputStream is = new BufferedInputStream(con.getInputStream());\r\n            responBody = readStream(is);\r\n            Log.d(\"확인\", \"원본 : \"+responBody);\r\n            return responBody;\r\n        } catch (Throwable t) {\r\n            return \"ERROR: \" + t.toString();\r\n        }\r\n    }\r\n    private static String readStream(InputStream in) throws IOException {\r\n        StringBuilder sb = new StringBuilder();\r\n        BufferedReader r = new BufferedReader(new InputStreamReader(in),1000);\r\n        for (String line = r.readLine(); line != null; line =r.readLine()){\r\n            sb.append(line);\r\n        }\r\n        in.close();\r\n        return sb.toString();\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"한 번 더 누르시면 홈화면으로 이동합니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        edit.setHint(\"답변이 여기에 나타납니다.\");\r\n        edit.setText(\"\");\r\n        tv_outPut.setText(\"안녕하세요!\\n같이 대화해요!\");\r\n        sttBtn.setEnabled(true);\r\n        submit.setEnabled(true);\r\n        edit.setEnabled(true);\r\n        tts.speakOut(tv_outPut.getText().toString());\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        stt.Destroy();\r\n        tts.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cbnu/dementiadiagnosis/VoiceBot.java b/app/src/main/java/com/cbnu/dementiadiagnosis/VoiceBot.java
--- a/app/src/main/java/com/cbnu/dementiadiagnosis/VoiceBot.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/com/cbnu/dementiadiagnosis/VoiceBot.java	(date 1667793955799)
@@ -29,7 +29,6 @@
 import java.util.Map;
 import com.google.gson.Gson;
 
-import memoryQuiz.StartActivity;
 import user.SharedPreference;
 
 public class VoiceBot extends AppCompatActivity {
@@ -62,7 +61,11 @@
         sttBtn = findViewById(R.id.sttStart);
         submit = (ImageButton) findViewById(R.id.submit);
         edit =(EditText)findViewById(R.id.result);
-        stt = new MainSTT(this, edit, tv_outPut, sttBtn, submit, tts);
+        stt = new MainSTT(this, edit, tv_outPut, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         helper_img = findViewById(R.id.img);
         exit = findViewById(R.id.btnLogout);
 
Index: app/src/main/java/com/cbnu/dementiadiagnosis/MainSTT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cbnu.dementiadiagnosis;\r\n\r\nimport android.Manifest;\r\nimport android.media.AudioFormat;\r\nimport android.media.AudioRecord;\r\nimport android.media.MediaRecorder;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.google.gson.Gson;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.BufferedReader;\r\nimport java.io.DataOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.util.HashMap;\r\nimport java.util.LinkedList;\r\nimport java.util.Map;\r\n\r\npublic class MainSTT{\r\n\r\n    private TTS tts;\r\n\r\n    ImageButton sttBtn;\r\n    ImageButton submit;\r\n    EditText result;\r\n    TextView textView;\r\n    TextView question;\r\n\r\n    String result_text;\r\n\r\n    final int PERMISSION = 1;\r\n\r\n    int maxLenSpeech = 16000 * 45;\r\n    int lenSpeech = 0;\r\n    public boolean isRecording = false;\r\n    public boolean isListening = false;\r\n    boolean forceStop = false;\r\n    boolean isStop_state = false;\r\n\r\n    public static final String PREFS_NAME = \"prefs\";\r\n    private static final String MSG_KEY = \"status\";\r\n\r\n    private boolean voiceReconize = false;\r\n    private int startingIndex = -1; // 녹음 시작 인덱스\r\n    private int endIndex = -1;\r\n    private int cnt = 0;// 카운터\r\n    boolean transforming = false;\r\n    boolean isRecognize = false;\r\n    boolean isAnalysing = false;\r\n    boolean isTooFast = false;\r\n    public boolean isFluency = false;\r\n\r\n    private short[] buffer = null;\r\n\r\n    public MainSTT (AppCompatActivity context, EditText editText, TextView announce,\r\n                    TextView quiz, ImageButton Btn, ImageButton sub, TTS talk){\r\n        if ( Build.VERSION.SDK_INT >= 23 ){ // 퍼미션 체크\r\n            ActivityCompat.requestPermissions(\r\n                    context, new String[]{Manifest.permission.INTERNET,\r\n                            Manifest.permission.RECORD_AUDIO},PERMISSION);\r\n        }\r\n        result = editText;\r\n        textView = announce;\r\n        question = quiz;\r\n        sttBtn = Btn;\r\n        submit = sub;\r\n        tts = talk;\r\n    }\r\n\r\n    public MainSTT (AppCompatActivity context, EditText editText,\r\n                    TextView quiz, ImageButton Btn, ImageButton sub, TTS talk){\r\n        if ( Build.VERSION.SDK_INT >= 23 ){ // 퍼미션 체크\r\n            ActivityCompat.requestPermissions(\r\n                    context, new String[]{Manifest.permission.INTERNET,\r\n                            Manifest.permission.RECORD_AUDIO},PERMISSION);\r\n        }\r\n        result = editText;\r\n        question = quiz;\r\n        sttBtn = Btn;\r\n        submit = sub;\r\n        tts = talk;\r\n    }\r\n\r\n    public void start_STT() {\r\n        if (isRecording) {\r\n            Log.d(\"record_확인\", \"오디오 릴리즈!\");\r\n            forceStop = true;\r\n        } else {\r\n            try {\r\n                new Thread(new Runnable() {\r\n                    public void run() {\r\n                        Log.d(\"record_확인\", \"녹음 시작!\");\r\n                        SendMessage(\"듣는 중...\", 1);\r\n                        try {\r\n                            recordSpeech();\r\n                        } catch (RuntimeException e) {\r\n                            SendMessage(e.getMessage(), 3);\r\n                            return;\r\n                        }\r\n                    }\r\n                }).start();\r\n            } catch (Throwable t) {\r\n                forceStop = false;\r\n                isRecording = false;\r\n                isListening = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private final Handler handler = new Handler() {\r\n        @Override\r\n        public synchronized void handleMessage(Message msg) {\r\n            Bundle bd = msg.getData();\r\n            String v = bd.getString(MSG_KEY);\r\n            switch (msg.what) {\r\n                // 녹음이 시작되었음(버튼)\r\n                case 1:\r\n                    result.setText(\"\");\r\n                    result.setHint(\"녹음되고 있어요!\");\r\n                    //textView.setText(v);\r\n                    isListening = true;\r\n                    isRecognize = false;\r\n                    isAnalysing= false;\r\n                    isTooFast = false;\r\n                    submit.setEnabled(false);\r\n                    break;\r\n                // 목소리가 인식되었음(버튼 또는 max time)\r\n                case 2:\r\n                    //textView.setText(v);\r\n                    result.setHint(\"소리를 인식했어요!\");\r\n                    isListening = false;\r\n                    isRecognize = true;\r\n                    isAnalysing= false;\r\n                    isTooFast = false;\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(false);\r\n                    break;\r\n                // 녹음이 비정상적으로 종료되었음(마이크 권한 등)\r\n                case 3:\r\n                    result.setHint(\"녹음을 할 수 없어요.\");\r\n                    //textView.setText(v);\r\n                    isListening = false;\r\n                    isRecognize = false;\r\n                    isAnalysing= false;\r\n                    isTooFast = true;\r\n                    submit.setEnabled(true);\r\n                    break;\r\n                // 인식이 비정상적으로 종료되었음(timeout 등)\r\n                case 4:\r\n                    result.setHint(\"다시 말씀해주세요.\");\r\n                    //textView.setText(v);\r\n                    isListening = false;\r\n                    isRecognize = false;\r\n                    isAnalysing= false;\r\n                    isTooFast = true;\r\n                    sttBtn.setEnabled(true);\r\n                    submit.setEnabled(true);\r\n                    break;\r\n                // 인식이 정상적으로 종료되었음 (thread내에서 exception포함)\r\n                case 5:\r\n                    //textView.setText(\"인식 완료!\");\r\n                    result.setHint(\"답변이 여기 나타납니다.\");\r\n                    if(isRecording) {\r\n                        isListening = true;\r\n                        isRecognize = false;\r\n                        isAnalysing = false;\r\n                        isTooFast = false;\r\n                        if (isFluency) {\r\n                            sttBtn.setEnabled(false);\r\n                            submit.setEnabled(false);\r\n                        } else {\r\n                            sttBtn.setEnabled(true);\r\n                            submit.setEnabled(true);\r\n                        }\r\n                    }\r\n                    else{ // STT가 종료되었는데도 인식은 종료되지 않은 경우\r\n                        result.setHint(\"답변이 여기 나타납니다.\");\r\n                        isListening = false;\r\n                        isRecognize = false;\r\n                        isAnalysing = false;\r\n                        isTooFast = false;\r\n                        if (isFluency) {\r\n                            sttBtn.setEnabled(false);\r\n                            submit.setEnabled(true);\r\n                        } else {\r\n                            sttBtn.setEnabled(true);\r\n                            submit.setEnabled(true);\r\n                        }\r\n                    }\r\n\r\n                    if (!SplitResult().equals(\"ASR_NOTOKEN\")) {\r\n                        String s;\r\n                        s = result.getText().toString() + SplitResult() + \" \";\r\n                        result.setText(s);\r\n                    }\r\n                    break;\r\n                case 6: // 녹음을 정상적으로 마침\r\n                    result.setHint(\"답변이 여기 나타납니다.\");\r\n                    if(!result.getText().toString().equals(\"\")){\r\n                        String str = result.getText().toString().substring(0,\r\n                                result.getText().toString().length() - 1);\r\n                        /*textView.setText(\"\\\"\" + str + \"\\\"\" +\r\n                                \" 라고 말씀하신 게 맞나요?\\n\\n\" +\r\n                                \"맞으시면 아래 파란 상자를 눌러주세요.\\n\"+\r\n                                \"아니라면 보라색 상자를 눌러 다시 말씀해주세요.\");*/\r\n                    }\r\n                    else{\r\n                        //textView.setText(\"잘 알아듣지 못했어요.\\n다시 말씀해주세요!\");\r\n                    }\r\n                    isListening = false;\r\n                    isRecognize = false;\r\n                    isAnalysing= false;\r\n                    isTooFast = false;\r\n                    if(isFluency){\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(true);\r\n                    }\r\n                    else{\r\n                        sttBtn.setEnabled(true);\r\n                        submit.setEnabled(true);\r\n                    }\r\n                    break;\r\n                case 7: // 텍스트 변환이 진행 중임.\r\n                    //textView.setText(\"인식 중...\");\r\n                    result.setHint(\"무슨 말인지 파악하고 있어요!\");\r\n                    isListening = false;\r\n                    isRecognize = false;\r\n                    isAnalysing= true;\r\n                    isTooFast = false;\r\n                    break;\r\n                case 8: // 에러\r\n                    //textView.setText(\"조금 더 천천히 말씀해주세요.\");\r\n                    result.setHint(\"조금 더 천천히 말씀해주세요.\");\r\n                    isListening = false;\r\n                    isRecognize = false;\r\n                    isAnalysing= false;\r\n                    isTooFast = true;\r\n                    break;\r\n            }\r\n            super.handleMessage(msg);\r\n        }\r\n    };\r\n\r\n    public String SplitResult(){\r\n        String splited[] = result_text.split(\"\\\"\");\r\n        splited[7] = splited[7].replace(\".\",\"\");\r\n        return splited[7];\r\n    }\r\n\r\n    private void SendMessage(String str, int id) {\r\n        Message msg = handler.obtainMessage();\r\n        Bundle bd = new Bundle();\r\n        bd.putString(MSG_KEY, str);\r\n        msg.what = id;\r\n        msg.setData(bd);\r\n        handler.sendMessage(msg);\r\n    }\r\n\r\n    private static String readStream(InputStream in) throws IOException {\r\n        StringBuilder sb = new StringBuilder();\r\n        BufferedReader r = new BufferedReader(new InputStreamReader(in),1000);\r\n        for (String line = r.readLine(); line != null; line =r.readLine()){\r\n            sb.append(line);\r\n        }\r\n        in.close();\r\n        return sb.toString();\r\n    }\r\n\r\n    public void recordSpeech() throws RuntimeException {\r\n        try {\r\n            int bufferSize = AudioRecord.getMinBufferSize(\r\n                    16000, // sampling frequency\r\n                    AudioFormat.CHANNEL_IN_MONO,\r\n                    AudioFormat.ENCODING_PCM_16BIT)*5;\r\n            AudioRecord audio = new AudioRecord(\r\n                    MediaRecorder.AudioSource.VOICE_RECOGNITION,\r\n                    16000, // sampling frequency\r\n                    AudioFormat.CHANNEL_IN_MONO,\r\n                    AudioFormat.ENCODING_PCM_16BIT,\r\n                    bufferSize);\r\n            lenSpeech = 0;\r\n            if (audio.getState() != AudioRecord.STATE_INITIALIZED) {\r\n                throw new RuntimeException(\"ERROR: Failed to initialize audio device. \" +\r\n                        \"Allow app to access microphone\");\r\n            }\r\n            else {\r\n                forceStop = false;\r\n                isRecording = true;\r\n                isListening = true;\r\n                audio.startRecording();\r\n                Thread threadRecog = new Thread(new Runnable() {\r\n                    public void run() {\r\n                        Recordingloop(audio, bufferSize);\r\n                        isRecording = false;\r\n                        isListening = false;\r\n                        SendMessage(\"말하기 완료.\", 6);\r\n                        audio.stop();\r\n                        audio.release();\r\n                        Log.d(\"record_확인\", \"오디오 릴리즈됨.\");\r\n                    }\r\n                });\r\n                threadRecog.start();\r\n                try {\r\n                    threadRecog.join(120000);\r\n                    if (threadRecog.isAlive()) {\r\n                        threadRecog.interrupt();\r\n                        SendMessage(\"2분 동안 말씀하지 않아 인식을 종료합니다.\\n\" +\r\n                                \"'말하기'를 다시 누르고 말씀해주세요.\", 4);\r\n                        forceStop = true;\r\n                    }\r\n                } catch (InterruptedException e) {\r\n                    SendMessage(\"Interrupted\", 4);\r\n                }\r\n            }\r\n        } catch(Throwable t) {\r\n            throw new RuntimeException(t.toString());\r\n        }\r\n    }\r\n\r\n    public void Recordingloop (AudioRecord audio, int bufferSize){\r\n        int total;\r\n        int level;\r\n        LinkedList<short[]> recData = new LinkedList<short[]>();\r\n        while (!forceStop) {\r\n            short[] inBuffer = new short[bufferSize];\r\n            int ret = audio.read(inBuffer, 0, bufferSize);\r\n            total = 0;\r\n            for (int i = 0; i < ret; i++) {\r\n                total += Math.abs(inBuffer[i]);\r\n            }\r\n            recData.add(inBuffer);\r\n            level = (int) (total / ret);\r\n            if (voiceReconize == false) {\r\n                if (level > 350) {\r\n                    if (cnt == 0)\r\n                        startingIndex = recData.size();\r\n                    cnt++;\r\n                }\r\n\r\n                if (cnt > 0) {\r\n                    SendMessage(\"목소리 감지!\", 2);\r\n                    Log.d(\"record_n\", \"목소리 감지!\");\r\n                    cnt = 0;\r\n                    voiceReconize = true;\r\n                    // level 값이 처음으로 1000 값을 넘은시점으로부터 15 만큼 이전부터 플레이 시점 설정\r\n                    // 시작하는 목소리가 끊겨 들리지 않게 하기 위하여 -15\r\n                    startingIndex -= 15;\r\n                    if (startingIndex < 0)\r\n                        startingIndex = 0;\r\n                }\r\n            }\r\n\r\n            if (voiceReconize == true) {\r\n                // 목소리가 끝나고 500이하로 떨어진 상태가 40이상 지속된 경우\r\n                // 더이상 말하지 않는것으로 간주.. 레벨 체킹 끝냄\r\n                if (level < 200) {\r\n                    cnt++;\r\n                }\r\n                // 도중에 다시 소리가 커지는 경우 잠시 쉬었다가 계속 말하는 경우이므로 cnt 값은 0\r\n                if (level > 350) {\r\n                    cnt = 0;\r\n                }\r\n                // endIndex 를 저장하고 레벨체킹을 끝냄\r\n                if (cnt > 0) {\r\n                    voiceReconize = false;\r\n                    cnt = 0;\r\n                    endIndex = recData.size();\r\n\r\n                    Log.d(\"record_n\", \"녹음 완료!\");\r\n                    SendMessage(\"녹음 완료!\", 7);\r\n                    Log.d(\"record_s\", Integer.toString(startingIndex));\r\n                    Log.d(\"record_s\", Integer.toString(endIndex));\r\n\r\n                    Thread PR_Thread = new Thread(new Runnable() {\r\n                        @Override\r\n                        public synchronized void run(){\r\n                            int flag;\r\n                            flag = PrintResult(this, endIndex, startingIndex, recData);\r\n                            if (flag == -1) {\r\n                                SendMessage(\"ERROR\", 8);\r\n                            } else SendMessage(\"들었어요!\", 5);\r\n                            recData.clear();\r\n                        }\r\n                    });\r\n\r\n                    PR_Thread.start();\r\n\r\n                }\r\n            }\r\n            Log.d(\"record\", Integer.toString(level));\r\n        }\r\n    }\r\n\r\n    public int PrintResult(Runnable context, int endIndex, int startingIndex, LinkedList<short[]> recData){\r\n        short[] buffer;\r\n        int lenSpeech = 0;\r\n        byte [] speechData = new byte [maxLenSpeech * 2];\r\n\r\n        Log.d(\"record_i\", \"short to byte\");\r\n        for (int i = startingIndex; i < endIndex; i++) {\r\n            buffer = recData.get(i);\r\n            for (int j = 0; j < buffer.length; j++) {\r\n                if (lenSpeech >= maxLenSpeech) {\r\n                    forceStop = true;\r\n                    break;\r\n                }\r\n                speechData[lenSpeech * 2] = (byte) (buffer[j] & 0x00FF);\r\n                speechData[lenSpeech * 2 + 1] = (byte) ((buffer[j] & 0xFF00) >> 8);\r\n                lenSpeech++;\r\n            }\r\n        }\r\n\r\n            Log.d(\"record_d\", sendDataAndGetResult(speechData, lenSpeech));\r\n            result_text = sendDataAndGetResult(speechData, lenSpeech);\r\n            if(result_text.contains(\"ERROR\")) return -1;\r\n            if(result_text.contains(\"-1\")) return -1;\r\n            else return 0;\r\n\r\n    }\r\n\r\n    public String sendDataAndGetResult (byte[] speechData, int lenSpeech) {\r\n        transforming = true;\r\n        Log.d(\"record_n\", \"STT 작동!\");\r\n        String openApiURL = \"http://aiopen.etri.re.kr:8000/WiseASR/Recognition\";\r\n        String accessKey = \"140889f3-77c9-4522-a5af-5f8a3898b740\";\r\n        String languageCode;\r\n        String audioContents;\r\n\r\n        Gson gson = new Gson();\r\n        languageCode = \"korean\";\r\n\r\n        Map<String, Object> request = new HashMap<>();\r\n        Map<String, String> argument = new HashMap<>();\r\n\r\n        audioContents = Base64.encodeToString(\r\n                speechData, 0, lenSpeech*2, Base64.NO_WRAP);\r\n\r\n        argument.put(\"language_code\", languageCode);\r\n        argument.put(\"audio\", audioContents);\r\n\r\n        request.put(\"access_key\", accessKey);\r\n        request.put(\"argument\", argument);\r\n\r\n        URL url;\r\n        Integer responseCode;\r\n        String responBody;\r\n        try {\r\n            url = new URL(openApiURL);\r\n            HttpURLConnection con = (HttpURLConnection)url.openConnection();\r\n            con.setRequestMethod(\"POST\");\r\n            con.setDoOutput(true);\r\n\r\n            DataOutputStream wr = new DataOutputStream(con.getOutputStream());\r\n            wr.write(gson.toJson(request).getBytes(\"UTF-8\"));\r\n            wr.flush();\r\n            wr.close();\r\n\r\n            responseCode = con.getResponseCode();\r\n            if ( responseCode == 200 ) {\r\n                InputStream is = new BufferedInputStream(con.getInputStream());\r\n                responBody = readStream(is);\r\n                transforming = false;\r\n                return responBody;\r\n            }\r\n            else\r\n                transforming = false;\r\n                return \"ERROR: \" + Integer.toString(responseCode);\r\n        } catch (Throwable t) {\r\n            transforming = false;\r\n            return \"ERROR: \" + t.toString();\r\n        }\r\n    }\r\n\r\n    public void Stop(){\r\n        if(isRecording){\r\n            forceStop = true;\r\n            isStop_state = true;\r\n            sttBtn.setEnabled(true);\r\n            isListening = false;\r\n        }\r\n    }\r\n\r\n    public void Destroy(){\r\n        if(isRecording){\r\n            forceStop = true;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cbnu/dementiadiagnosis/MainSTT.java b/app/src/main/java/com/cbnu/dementiadiagnosis/MainSTT.java
--- a/app/src/main/java/com/cbnu/dementiadiagnosis/MainSTT.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/com/cbnu/dementiadiagnosis/MainSTT.java	(date 1667793063344)
@@ -16,6 +16,8 @@
 
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.core.app.ActivityCompat;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentActivity;
 
 import com.google.gson.Gson;
 
@@ -41,6 +43,11 @@
     TextView textView;
     TextView question;
 
+    int start = 350;
+    int end = 200;
+    int speed = 0;
+
+
     String result_text;
 
     final int PERMISSION = 1;
@@ -64,6 +71,7 @@
     boolean isAnalysing = false;
     boolean isTooFast = false;
     public boolean isFluency = false;
+    MainSTT stt;
 
     private short[] buffer = null;
 
@@ -80,6 +88,7 @@
         sttBtn = Btn;
         submit = sub;
         tts = talk;
+
     }
 
     public MainSTT (AppCompatActivity context, EditText editText,
@@ -96,8 +105,71 @@
         tts = talk;
     }
 
+    public MainSTT (FragmentActivity context,EditText editText,
+                    ImageButton Btn, int s, int e, int sp){
+        if ( Build.VERSION.SDK_INT >= 23 ){ // 퍼미션 체크
+            ActivityCompat.requestPermissions(
+                    context, new String[]{Manifest.permission.INTERNET,
+                            Manifest.permission.RECORD_AUDIO},PERMISSION);
+        }
+        result = editText;
+        sttBtn = Btn;
+        start = s;
+        end = e;
+        speed = sp;
+    }
+
+    public MainSTT (AppCompatActivity context, EditText editText, TextView announce,
+                    TextView quiz, ImageButton Btn, ImageButton sub, TTS talk, int s, int e, int v){
+        if ( Build.VERSION.SDK_INT >= 23 ){ // 퍼미션 체크
+            ActivityCompat.requestPermissions(
+                    context, new String[]{Manifest.permission.INTERNET,
+                            Manifest.permission.RECORD_AUDIO},PERMISSION);
+        }
+        result = editText;
+        textView = announce;
+        question = quiz;
+        sttBtn = Btn;
+        submit = sub;
+        tts = talk;
+        start = s;
+        end = e;
+        speed = v;
+    }
+
+    public MainSTT (AppCompatActivity context, EditText editText,
+                    TextView quiz, ImageButton Btn, ImageButton sub, TTS talk, int s, int e, int v){
+        if ( Build.VERSION.SDK_INT >= 23 ){ // 퍼미션 체크
+            ActivityCompat.requestPermissions(
+                    context, new String[]{Manifest.permission.INTERNET,
+                            Manifest.permission.RECORD_AUDIO},PERMISSION);
+        }
+        result = editText;
+        question = quiz;
+        sttBtn = Btn;
+        submit = sub;
+        tts = talk;
+        start = s;
+        end = e;
+        speed = v;
+    }
+
+    public void setStart(int s){
+        start = s;
+    }
+    public void setEnd(int e){
+        end = e;
+    }
+    public void setSpeed(int sp){
+        speed = sp;
+    }
+    public int getStart(){return start;}
+    public int getEnd(){return end;}
+    public int getSpeed(){return speed;}
+
     public void start_STT() {
         if (isRecording) {
+            sttBtn.setSelected(false);
             Log.d("record_확인", "오디오 릴리즈!");
             forceStop = true;
         } else {
@@ -105,6 +177,7 @@
                 new Thread(new Runnable() {
                     public void run() {
                         Log.d("record_확인", "녹음 시작!");
+                        sttBtn.setSelected(true);
                         SendMessage("듣는 중...", 1);
                         try {
                             recordSpeech();
@@ -137,7 +210,7 @@
                     isRecognize = false;
                     isAnalysing= false;
                     isTooFast = false;
-                    submit.setEnabled(false);
+                    if(submit != null) submit.setEnabled(false);
                     break;
                 // 목소리가 인식되었음(버튼 또는 max time)
                 case 2:
@@ -148,7 +221,7 @@
                     isAnalysing= false;
                     isTooFast = false;
                     sttBtn.setEnabled(false);
-                    submit.setEnabled(false);
+                    if(submit != null) submit.setEnabled(false);
                     break;
                 // 녹음이 비정상적으로 종료되었음(마이크 권한 등)
                 case 3:
@@ -158,7 +231,7 @@
                     isRecognize = false;
                     isAnalysing= false;
                     isTooFast = true;
-                    submit.setEnabled(true);
+                    if(submit != null) submit.setEnabled(true);
                     break;
                 // 인식이 비정상적으로 종료되었음(timeout 등)
                 case 4:
@@ -169,7 +242,7 @@
                     isAnalysing= false;
                     isTooFast = true;
                     sttBtn.setEnabled(true);
-                    submit.setEnabled(true);
+                    if(submit != null) submit.setEnabled(true);
                     break;
                 // 인식이 정상적으로 종료되었음 (thread내에서 exception포함)
                 case 5:
@@ -182,10 +255,10 @@
                         isTooFast = false;
                         if (isFluency) {
                             sttBtn.setEnabled(false);
-                            submit.setEnabled(false);
+                            if(submit != null) submit.setEnabled(false);
                         } else {
                             sttBtn.setEnabled(true);
-                            submit.setEnabled(true);
+                            if(submit != null) submit.setEnabled(true);
                         }
                     }
                     else{ // STT가 종료되었는데도 인식은 종료되지 않은 경우
@@ -196,10 +269,10 @@
                         isTooFast = false;
                         if (isFluency) {
                             sttBtn.setEnabled(false);
-                            submit.setEnabled(true);
+                            if(submit != null) submit.setEnabled(true);
                         } else {
                             sttBtn.setEnabled(true);
-                            submit.setEnabled(true);
+                            if(submit != null) submit.setEnabled(true);
                         }
                     }
 
@@ -228,11 +301,11 @@
                     isTooFast = false;
                     if(isFluency){
                         sttBtn.setEnabled(false);
-                        submit.setEnabled(true);
+                        if(submit != null) submit.setEnabled(true);
                     }
                     else{
                         sttBtn.setEnabled(true);
-                        submit.setEnabled(true);
+                        if(submit != null) submit.setEnabled(true);
                     }
                     break;
                 case 7: // 텍스트 변환이 진행 중임.
@@ -306,6 +379,7 @@
                 Thread threadRecog = new Thread(new Runnable() {
                     public void run() {
                         Recordingloop(audio, bufferSize);
+                        sttBtn.setSelected(false);
                         isRecording = false;
                         isListening = false;
                         SendMessage("말하기 완료.", 6);
@@ -322,6 +396,7 @@
                         SendMessage("2분 동안 말씀하지 않아 인식을 종료합니다.\n" +
                                 "'말하기'를 다시 누르고 말씀해주세요.", 4);
                         forceStop = true;
+                        sttBtn.setSelected(false);
                     }
                 } catch (InterruptedException e) {
                     SendMessage("Interrupted", 4);
@@ -346,13 +421,13 @@
             recData.add(inBuffer);
             level = (int) (total / ret);
             if (voiceReconize == false) {
-                if (level > 350) {
+                if (level > start) {
                     if (cnt == 0)
                         startingIndex = recData.size();
                     cnt++;
                 }
 
-                if (cnt > 0) {
+                if (cnt > speed) {
                     SendMessage("목소리 감지!", 2);
                     Log.d("record_n", "목소리 감지!");
                     cnt = 0;
@@ -368,15 +443,15 @@
             if (voiceReconize == true) {
                 // 목소리가 끝나고 500이하로 떨어진 상태가 40이상 지속된 경우
                 // 더이상 말하지 않는것으로 간주.. 레벨 체킹 끝냄
-                if (level < 200) {
+                if (level < end) {
                     cnt++;
                 }
                 // 도중에 다시 소리가 커지는 경우 잠시 쉬었다가 계속 말하는 경우이므로 cnt 값은 0
-                if (level > 350) {
+                if (level > start) {
                     cnt = 0;
                 }
                 // endIndex 를 저장하고 레벨체킹을 끝냄
-                if (cnt > 0) {
+                if (cnt > speed) {
                     voiceReconize = false;
                     cnt = 0;
                     endIndex = recData.size();
Index: app/src/main/java/user/SharedPreference.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package user;\r\n\r\nimport android.content.Context;\r\nimport android.content.SharedPreferences;\r\nimport android.preference.PreferenceManager;\r\n\r\npublic class SharedPreference {\r\n    static String PREFERENCES_NAME = \"pref_user\";\r\n\r\n    static String pref_user_serial_code = \"serial_code\";\r\n    static String pref_user_name = \"name\";\r\n    static String pref_user_birth = \"birth\";\r\n    static String pref_user_age = \"age\";\r\n    static String pref_user_sex = \"sex\";\r\n    static String pref_user_edu = \"edu\";\r\n    static String pref_user_score = \"score\";\r\n    static String pref_type = \"type\";\r\n\r\n    static public SharedPreferences getSharedPreferences(Context ctx) {\r\n        return PreferenceManager.getDefaultSharedPreferences(ctx);\r\n    }\r\n\r\n    // 사용자 정보 저장\r\n    public static void setUserInf(Context ctx, String serial_code, String name, String birth, int age,\r\n                                  String sex, String edu, int score) {\r\n        SharedPreferences.Editor editor = getSharedPreferences(ctx).edit();\r\n        editor.putString(pref_user_serial_code, serial_code);\r\n        editor.putString(pref_user_name, name);\r\n        editor.putString(pref_user_birth, birth);\r\n        editor.putInt(pref_user_age, age);\r\n        editor.putString(pref_user_sex, sex);\r\n        editor.putString(pref_user_edu, edu);\r\n        editor.putInt(pref_user_score, score);\r\n        editor.apply();\r\n    }\r\n    // 사용자 일련코드 정보 저장\r\n    public static void setSerialCodeInf(Context ctx, String serial_code) {\r\n        SharedPreferences.Editor editor = getSharedPreferences(ctx).edit();\r\n        editor.putString(pref_user_serial_code, serial_code);\r\n        editor.apply();\r\n    }\r\n    // 검사 타입 정보 저장\r\n    public static void setTypeInf(Context ctx, String type) {\r\n        SharedPreferences.Editor editor = getSharedPreferences(ctx).edit();\r\n        editor.putString(pref_type, type);\r\n        editor.apply();\r\n    }\r\n\r\n    // 저장된 사용자 일련코드 가져오기\r\n    public static String getSerialCode(Context ctx) {\r\n        return getSharedPreferences(ctx).getString(pref_user_serial_code, \"\");\r\n    }\r\n    // 저장된 사용자 이름 가져오기\r\n    public static String getUserName(Context ctx) {\r\n        return getSharedPreferences(ctx).getString(pref_user_name, \"\");\r\n    }\r\n    // 저장된 사용자 생년월일 가져오기\r\n    public static String getUserBirth(Context ctx) {\r\n        return getSharedPreferences(ctx).getString(pref_user_birth, \"\");\r\n    }\r\n    // 사용자 만 나이\r\n    public static int getUserAge(Context ctx) {\r\n        return getSharedPreferences(ctx).getInt(pref_user_age, 0);\r\n    }\r\n    // 저장된 사용자 성별 가져오기\r\n    public static String getUserSex(Context ctx) {\r\n        return getSharedPreferences(ctx).getString(pref_user_sex, \"\");\r\n    }\r\n    // 저장된 사용자 학력 가져오기\r\n    public static String getUserEdu(Context ctx) {\r\n        return getSharedPreferences(ctx).getString(pref_user_edu, \"\");\r\n    }\r\n    // 저장된 사용자 치매 기준 점수 가져오기\r\n    public static int getUserScore(Context ctx) {\r\n        return getSharedPreferences(ctx).getInt(pref_user_score, 0);\r\n    }\r\n    // 검사 타입 가져오기\r\n    public static String getSelectType(Context ctx) {\r\n        return getSharedPreferences(ctx).getString(pref_type, \"\");\r\n    }\r\n\r\n    //로그아웃 시 데이터 삭제\r\n    public static void clear_user(Context ctx) {\r\n        SharedPreferences.Editor editor = getSharedPreferences(ctx).edit();\r\n        editor.clear();\r\n        editor.apply();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/user/SharedPreference.java b/app/src/main/java/user/SharedPreference.java
--- a/app/src/main/java/user/SharedPreference.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/user/SharedPreference.java	(date 1667792313969)
@@ -4,6 +4,8 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 
+import fragment.FragmentSetting;
+
 public class SharedPreference {
     static String PREFERENCES_NAME = "pref_user";
 
@@ -15,11 +17,22 @@
     static String pref_user_edu = "edu";
     static String pref_user_score = "score";
     static String pref_type = "type";
+    static String pref_stt_start = "start";
+    static String pref_stt_end = "end";
+    static String pref_stt_speed = "speed";
 
     static public SharedPreferences getSharedPreferences(Context ctx) {
         return PreferenceManager.getDefaultSharedPreferences(ctx);
     }
 
+    public static void setSttInf(Context ctx, int s, int e, int v){
+        SharedPreferences.Editor editor = getSharedPreferences(ctx).edit();
+        editor.putInt(pref_stt_start, s);
+        editor.putInt(pref_stt_end, e);
+        editor.putInt(pref_stt_speed, v);
+        editor.apply();
+    }
+
     // 사용자 정보 저장
     public static void setUserInf(Context ctx, String serial_code, String name, String birth, int age,
                                   String sex, String edu, int score) {
@@ -46,6 +59,16 @@
         editor.apply();
     }
 
+    public static int getSTT_start(Context ctx){
+        return getSharedPreferences(ctx).getInt(pref_stt_start, 350);
+    }
+    public static int getSTT_end(Context ctx){
+        return getSharedPreferences(ctx).getInt(pref_stt_end, 200);
+    }
+    public static int getSTT_speed(Context ctx){
+        return getSharedPreferences(ctx).getInt(pref_stt_speed, 0);
+    }
+
     // 저장된 사용자 일련코드 가져오기
     public static String getSerialCode(Context ctx) {
         return getSharedPreferences(ctx).getString(pref_user_serial_code, "");
Index: app/src/main/java/QuizPage/memoryInput_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.memoryInput;\r\n\r\npublic class memoryInput_Page extends AppCompatActivity {\r\n    memoryInput memo_in;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    TextInputEditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    boolean isfirst = true;\r\n\r\n    ArrayList<String> first, second;\r\n    List<String> tem = new ArrayList<>();\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n        final TextInputLayout TIL = findViewById(R.id.goolelayout);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = findViewById(R.id.result);\r\n        answer.setEnabled(true);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        helper_img = findViewById(R.id.img);\r\n        memo_in = new memoryInput();\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        type.setText(\"기억등록\");\r\n        pro_bar.setProgress(10);\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        memo_in.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                int[] time = {1000, 500};\r\n                tts.onInit(status, question.getText().toString(), \"continue\", 1000);\r\n                tem.add(\"민수는.....자전거를 타고.....공원에 가서....11시부터...야구를 했다.\");\r\n                tts.UtteranceProgress(tem, \"continue\", time, sttBtn, submit);\r\n            }\r\n        });\r\n\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_in.quiz);\r\n        first = new ArrayList<>();\r\n        second = new ArrayList<>();\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        answer.setEnabled(false);\r\n        answer.setHint(\"이 항목은 자판 입력이 불가능합니다.\");\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                answer.setText(\"\");\r\n                if(QP.current == 0){\r\n                    pro_bar.setProgress(15);\r\n                    tts.isStopUtt = false;\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(false);\r\n\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString(), \"default\");\r\n                    tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n                }\r\n                else if(QP.current == 1){\r\n                    pro_bar.setProgress(20);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                    tts.UtteranceProgress();\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(true);\r\n                }\r\n                else{\r\n                    memo_in.scores[2] = memo_in.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), attention_Page.class);\r\n                    intent.putExtra(\"scores\", memo_in.scores);\r\n                    startActivity(intent);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"기억력 항목에서는 뒤로가기를 할 수 없습니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                isfirst = false;\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString();\r\n\r\n                if(QP.user_ans.isEmpty() && QP.current != 2){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else{\r\n                    answer.setText(\"\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(15);\r\n                        tts.isStopUtt = false;\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(false);\r\n\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_in.crr_ans[i].get(0);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                first.add(QP.correct);\r\n                            }\r\n                        }\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString(), \"default\");\r\n                        tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n                    }\r\n                    else if(QP.current == 1){\r\n                        pro_bar.setProgress(20);\r\n                        tts.isStopUtt = false;\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_in.crr_ans[i].get(0);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                second.add(QP.correct);\r\n                            }\r\n                        }\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                        tts.UtteranceProgress();\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(true);\r\n                    }\r\n                    else{\r\n                        memo_in.scores[2] = memo_in.Tscore;\r\n\r\n                        Intent intent = new Intent(getApplicationContext(), attention_Page.class);\r\n                        intent.putExtra(\"scores\", memo_in.scores);\r\n                        startActivity(intent);\r\n\r\n                        finish();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        answer.setEnabled(false);\r\n        answer.setHint(\"이 항목은 자판 입력이 불가능합니다.\");\r\n\r\n        if(QP.current < 2){\r\n            question.setText(memo_in.quiz.get(QP.current));\r\n            answer.setText(\"\");\r\n            tts.speakOut(question.getText().toString(),\"continue\");\r\n            tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n        }\r\n        else{\r\n            tts.speakOut(question.getText().toString());\r\n            tts.UtteranceProgress(\"다음 단계로 이동하시려면\\n아래 파란 상자를 눌러주세요!\", sttBtn, submit);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/memoryInput_Page.java b/app/src/main/java/QuizPage/memoryInput_Page.java
--- a/app/src/main/java/QuizPage/memoryInput_Page.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/QuizPage/memoryInput_Page.java	(date 1667793955463)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.Button;
@@ -31,6 +32,7 @@
 
 import QuizPage.QuizPage;
 import questions.memoryInput;
+import user.SharedPreference;
 
 public class memoryInput_Page extends AppCompatActivity {
     memoryInput memo_in;
@@ -89,7 +91,11 @@
         });
 
 
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_in.quiz);
         first = new ArrayList<>();
         second = new ArrayList<>();
Index: app/src/main/java/QuizPage/orientation_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport questions.orientation;\r\n\r\npublic class orientation_Page extends AppCompatActivity {\r\n    orientation ortt_main;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type, announce;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    ProgressBar pro_bar;\r\n    Helper helper;\r\n    boolean[] isCorrect;\r\n    boolean[] isWrong;\r\n    String[] U_answers;\r\n    AppCompatButton donKnow;\r\n    boolean isDK_inFirst = false;\r\n    float D_x = 0;\r\n    float D_y = 0;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        announce = (TextView) findViewById(R.id.announce);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        helper_img = findViewById(R.id.img);\r\n        ortt_main = new orientation(this);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, ortt_main.quiz);\r\n        QP.isOrient = true;\r\n        isCorrect = new boolean[4];\r\n        Arrays.fill(isCorrect, false);\r\n        isWrong = new boolean[4];\r\n        Arrays.fill(isWrong, false);\r\n        U_answers = new String[ortt_main.num];\r\n        Arrays.fill(U_answers, \"\");\r\n        announce.setText(\"년, 월, 일, 요일\");\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        type.setText(\"지남력\");\r\n        pro_bar.setProgress(0);\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(QP.current == 0 || QP.current == 4)\r\n                    announce.setText(\"도시 또는 동/읍/면 등을 말해주세요.\");\r\n                else announce.setText(\"\");\r\n\r\n                if(QP.current == 0){\r\n                    QP.current = 4;\r\n                    isDK_inFirst = true;\r\n                    pro_bar.setProgress(10);\r\n                }\r\n                if(QP.current == 3) pro_bar.setProgress(10);\r\n\r\n                //다음 문제 화면 전환\r\n                if(QP.current < 4){\r\n                    int j = 0;\r\n                    for(int i = 0; i < isCorrect.length; i++){\r\n                        if(!isCorrect[i] && QP.current <= i){\r\n                            QP.current = i;\r\n                            break;\r\n                        }\r\n                        if(isCorrect[i]) j++;\r\n                    }// 모두 정답이면 공간지남력 문제로 점프\r\n                    if(j == 4) QP.current = 4;\r\n                }\r\n                if(QP.current < 5){\r\n                    answer.setText(\"\");\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                }\r\n                else if(QP.current == 5){\r\n                    announce.setText(\"\");\r\n\r\n                    ortt_main.Tscore = cal_score(U_answers, ortt_main.crr_ans);\r\n\r\n                    ortt_main.scores[1] = ortt_main.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(),memoryInput_Page.class);\r\n                    intent.putExtra(\"scores\", ortt_main.scores);\r\n                    startActivity(intent);\r\n\r\n                    QP.isOrient = false;\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                int min = -1;\r\n                for(int i = 3; i >= 0; i--) {\r\n                    if(!isWrong[i]) min = i;\r\n                }\r\n                if(min == -1)QP.current = 0;\r\n\r\n                if(QP.current == 0){\r\n                    Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n                if(QP.current > 0){\r\n                    pro_bar.setProgress(5);\r\n                    boolean isChange = false;\r\n                    if(QP.current > 1){\r\n                        for(int i = 3; i >= 0; i--){\r\n                            if(!isWrong[i]){\r\n                                if(QP.current-1 > i){\r\n                                    QP.current = i + 1;\r\n                                    isChange = true;\r\n                                    break;\r\n                                }\r\n                                else isChange = false;\r\n                            } // 모두 정답이면 첫 문제로 점프\r\n                        }\r\n                        if(!isChange) QP.current--;\r\n                        if(QP.current == min)QP.current = 0;\r\n                    }\r\n                    else QP.current --;\r\n\r\n                    if(isDK_inFirst) {\r\n                        QP.current = 0;\r\n                        isDK_inFirst = false;\r\n                    }\r\n                    if(QP.current == 0) announce.setText(\"년, 월, 일, 요일\");\r\n                    else announce.setText(\"\");\r\n\r\n                    tts.isStopUtt = false;\r\n                    question.setText(ortt_main.quiz.get(QP.current));\r\n                    answer.setText(\"\");\r\n                    tts.speakOut(question.getText().toString());\r\n                }\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(QP.current == 4 || QP.current == 5) announce.setText(\"도시 또는 동/읍/면 등을 말해주세요.\");\r\n                else if(QP.current == 0) announce.setText(\"년, 월, 일, 요일\");\r\n                else announce.setText(\"\");\r\n                stt.Stop();\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n                sttBtn.setEnabled(true);\r\n\r\n                QP.user_ans = QP.ans_filter(answer.getText().toString());\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else\r\n                {\r\n                    //날짜 숫자로 변환\r\n                    if(QP.current == 0){ // 첫 물음의 경우\r\n                        Arrays.fill(isCorrect, false);\r\n                        Arrays.fill(isWrong, false);\r\n                        Arrays.fill(U_answers, \"\");\r\n                        pro_bar.setProgress(5);\r\n                        String[] answers = QP.user_ans.split(\" \");\r\n                        for(int i = 0; i < answers.length; i++){\r\n                            String str = \"\";\r\n                            if(answers[i].contains(\"년도\")){\r\n                                if(i-2 >= 0){\r\n                                    str = answers[i-2] + answers[i-1] + answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                else if(i-1 >= 0){\r\n                                    str = answers[i-1] + answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                else if(i >= 0){\r\n                                    str = answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                isCorrect[0] = true;\r\n                                U_answers[0] = dateFilter(str);\r\n                            }\r\n                            else if(answers[i].contains(\"년\")){\r\n                                if(i-2 >= 0){\r\n                                    str = answers[i-2] + answers[i-1] + answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                else if(i-1 >= 0){\r\n                                    str = answers[i-1] + answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                else if(i >= 0){\r\n                                    str = answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                isCorrect[0] = true;\r\n                                U_answers[0] = dateFilter(str);\r\n                            }\r\n                            else if(answers[i].contains(\"월\") && !answers[i].contains(\"요일\")){\r\n                                U_answers[1] = dateFilter(answers[i]);\r\n                                isCorrect[1] = true;\r\n                            }\r\n                            else if(answers[i].contains(\"요일\")){\r\n                                U_answers[3] = answers[i];\r\n                                isCorrect[3] = true;\r\n                            }\r\n                            else if(answers[i].contains(\"일\")){\r\n                                if(i != 0 && !answers[i-1].contains(\"월\") && !answers[i-1].contains(\"년\")\r\n                                        && !answers[i-1].contains(\"년도\") && !answers[i-1].contains(\"요일\")){\r\n                                    if(answers[i-1].contains(\"십\")){\r\n                                        str = answers[i-1] + answers[i];\r\n                                        str = str.substring(0, str.length()-1);\r\n                                        isCorrect[2] = true;\r\n                                        U_answers[2] = dateFilter(str);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    isCorrect[2] = true;\r\n                                    U_answers[2] = dateFilter(answers[i]);\r\n                                }\r\n                            }\r\n                        }\r\n                        for(int i = 0; i<isCorrect.length; i++){\r\n                            if(isCorrect[i]) isWrong[i] = true;\r\n                        }\r\n                    }\r\n                    else if(QP.current < 4){ // 틀린 것이 있을 경우\r\n                        QP.user_ans = dateFilter(QP.user_ans);\r\n                        U_answers[QP.current-1] = dateFilter(QP.user_ans);\r\n                    }\r\n                    else {\r\n                        pro_bar.setProgress(10);\r\n                        U_answers[QP.current-1] = QP.user_ans;\r\n                    }\r\n\r\n                    //다음 문제 화면 전환\r\n                    if(QP.current < 4){\r\n                        int j = 0;\r\n                        for(int i = 0; i < isCorrect.length; i++){\r\n                            if(!isCorrect[i] && QP.current <= i){\r\n                                QP.current = i;\r\n                                break;\r\n                            }\r\n                            if(isCorrect[i]) j++;\r\n                        }// 모두 정답이면 공간지남력 문제로 점프\r\n                        if(j == 4) QP.current = 4;\r\n                    }\r\n\r\n                    if(QP.current < 5){\r\n                        answer.setText(\"\");\r\n                        tts.isStopUtt = false;\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                    }\r\n                    else if(QP.current == 5){\r\n                        announce.setText(\"\");\r\n\r\n                        ortt_main.Tscore = cal_score(U_answers, ortt_main.crr_ans);\r\n\r\n                        if(ortt_main.Tscore != -1){\r\n                            ortt_main.scores[1] = ortt_main.Tscore;\r\n\r\n                            Intent intent = new Intent(getApplicationContext(),memoryInput_Page.class);\r\n                            intent.putExtra(\"scores\", ortt_main.scores);\r\n                            startActivity(intent);\r\n\r\n                            QP.isOrient = false;\r\n\r\n                            finish();\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    String dateFilter(@NonNull String userAns){\r\n        String[] ansArray = userAns.split(\"\");\r\n        String toDigit = \"\";\r\n        for(String s : ansArray){\r\n            if(!s.equals(\"\")) {\r\n                if(Character.isDigit(s.charAt(0))) {\r\n                    toDigit += s;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(toDigit.equals(\"\")){\r\n            userAns = ortt_main.KorTran(userAns);\r\n        }\r\n        else{\r\n            userAns = toDigit;\r\n        }\r\n\r\n        return userAns;\r\n    }\r\n\r\n    int cal_score(String[] ans, List<String>[] crr){\r\n        int score = 0;\r\n        if(ans.length == crr.length-1){\r\n            for(int i = 0; i < ans.length; i++){\r\n                if(crr[i+1].size() > 1){\r\n                    for(String s : crr[i+1]){\r\n                        if(ans[i].contains(s)) {\r\n                            score ++;\r\n                            break;\r\n                        }\r\n                        else if(s.contains(\"ERROR\")){\r\n                            Toast.makeText(this, \"GPS를 다시 확인해주세요.\",\r\n                                    Toast.LENGTH_SHORT).show();\r\n                            ortt_main.reverseCoding();\r\n                            return -1;\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    if(ans[i].contains(crr[i + 1].get(0))) score ++;\r\n                }\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            QP.isOrient = false;\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        QP.Start();\r\n        tts.speakOut(question.getText().toString());\r\n        if(QP.current == 0){\r\n            pro_bar.setProgress(0);\r\n        }\r\n        if(QP.current == 1){\r\n            pro_bar.setProgress(5);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/orientation_Page.java b/app/src/main/java/QuizPage/orientation_Page.java
--- a/app/src/main/java/QuizPage/orientation_Page.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/QuizPage/orientation_Page.java	(date 1667793955491)
@@ -24,10 +24,12 @@
 import com.cbnu.dementiadiagnosis.R;
 import com.cbnu.dementiadiagnosis.TTS;
 
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
 import questions.orientation;
+import user.SharedPreference;
 
 public class orientation_Page extends AppCompatActivity {
     orientation ortt_main;
@@ -70,7 +72,11 @@
         donKnow = (AppCompatButton) findViewById(R.id.donknow);
 
 
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, ortt_main.quiz);
         QP.isOrient = true;
         isCorrect = new boolean[4];
@@ -214,7 +220,7 @@
         submit.setOnClickListener(new View.OnClickListener() {
             public void onClick(View v) {
                 if(QP.current == 4 || QP.current == 5) announce.setText("도시 또는 동/읍/면 등을 말해주세요.");
-                else if(QP.current == 0) announce.setText("년, 월, 일, 요일");
+                else if(QP.current == 0 || QP.current == 1) announce.setText("년, 월, 일, 요일");
                 else announce.setText("");
                 stt.Stop();
                 tts.Stop();
Index: app/src/main/java/QuizPage/ExecutionPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport fragment.ExecutionOne;\r\nimport fragment.ExecutionThree;\r\nimport fragment.ExecutionTwo;\r\nimport questions.Execution;\r\n\r\n\r\npublic class ExecutionPage extends AppCompatActivity {\r\n\r\n    Execution execution;\r\n    FragmentManager fragmentManager;\r\n    ExecutionOne executionOne;\r\n    ExecutionTwo executionTwo;\r\n    ExecutionThree executionThree;\r\n    TextView question, type;\r\n    //TextView p_num;\r\n    EditText answer;\r\n    String total;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    QuizPage QP;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    String[] U_answers;\r\n    ProgressBar pro_bar;\r\n    TextInputLayout textInputLayout;\r\n    LinearLayout LL;\r\n    RelativeLayout.LayoutParams Param1, Param2;\r\n\r\n    AppCompatButton donKnow;\r\n    FrameLayout frame;\r\n\r\n    private long backBtnTime = 0;\r\n    List<String> tem = new ArrayList<>();\r\n    int[] time = {1000, 1000, 1000, 1000};\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.execution);\r\n\r\n        question = findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        //p_num = (TextView) findViewById(R.id.process_num);\r\n        textInputLayout = findViewById(R.id.textInput);\r\n        answer = findViewById(R.id.result);\r\n        sttBtn = findViewById(R.id.sttStart);\r\n        submit = findViewById(R.id.right);\r\n        undo = (ImageButton) findViewById(R.id.left);\r\n        execution = new Execution();\r\n        U_answers = new String[execution.num];\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n        frame = findViewById(R.id.frame_layout);\r\n        answer.setHint(\"답변이 여기 나타납니다.\");\r\n        LL = findViewById(R.id.LL);\r\n        Param1 = new RelativeLayout.LayoutParams(LL.getLayoutParams());\r\n        Param2 = new RelativeLayout.LayoutParams(LL.getLayoutParams());\r\n\r\n        Param1.height = 0;\r\n        Param1.width = 0;\r\n        Param2.topMargin = 50;\r\n        Param2.addRule(RelativeLayout.CENTER_HORIZONTAL);\r\n\r\n        LL.setLayoutParams(Param1);\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        execution.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        type.setText(\"집행기능\");\r\n        //p_num.setText(\"9/17\");\r\n        pro_bar.setProgress(40);\r\n        Arrays.fill(U_answers, \"\");\r\n\r\n        // Fragment 객체 선언\r\n        fragmentManager = (FragmentManager)getSupportFragmentManager();\r\n        executionOne = new ExecutionOne();\r\n        executionTwo = new ExecutionTwo();\r\n        executionThree = new ExecutionThree();\r\n\r\n\r\n        // 제일 처음 띄워줄 뷰 설정\r\n        fragmentManager.beginTransaction().replace(R.id.frame_layout, executionOne).commit();\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"default\");\r\n                tem.clear();\r\n                tem.add(\"모양들을 보면서 어떤 순서로 나오는지 생각해보세요.\");\r\n                tem.add(\"네모, 동그라미, 세모, 네모, 빈칸, 세모\");\r\n                tem.add(\"그렇다면 빈칸에는 무엇이 들어가야 할까요?\");\r\n                tts.UtteranceProgress(tem, \"continue\", question, sttBtn, submit);\r\n            }\r\n        });\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, execution.quiz);\r\n\r\n        sttBtn.setEnabled(false);\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                question.setText(execution.quiz.get(QP.current));\r\n                tts.speakOut(question.getText().toString(), \"default\");\r\n                if(QP.current == 0){\r\n                    tem.clear();\r\n                    tem.add(\"모양들을 보면서 어떤 순서로 나오는지 생각해보세요.\");\r\n                    tem.add(\"네모, 동그라미, 세모, 네모, 빈칸, 세모\");\r\n                    tem.add(\"그렇다면 빈칸에는 무엇이 들어가야 할까요?\");\r\n                    tts.UtteranceProgress(tem, \"continue\", question, sttBtn, submit);\r\n                }\r\n                else if(QP.current == 1){\r\n                    tem.clear();\r\n                    tem.add(\"별이 각자 다른 위치로 이동합니다.\");\r\n                    tem.add(\"어떤 식으로 이동하는지 잘 생각해 보십시오.\");\r\n                    tem.add(\"이 다음에는 네 칸중 별이 어디에 위치하게 될까요?\");\r\n                    tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                }\r\n                else if(QP.current == 2){\r\n                    tts.speakOut(question.getText().toString(), \"default\");\r\n                    tem.clear();\r\n                    tem.add(\"'1 봄 2 여름 ~' 이런 형태로 연결되어 나갑니다.\");\r\n                    tem.add(\"첫번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                    tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                }\r\n                else if(QP.current == 3){\r\n                    tts.speakOut(\"두번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                }\r\n            }\r\n        });\r\n\r\n        frame.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n        //안되면 위 코드 주석처리\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                answer.setText(\"\");\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                if(QP.current == 0) {\r\n                    pro_bar.setProgress(45);\r\n                    tts.isStopUtt = false;\r\n                    QP.current++;\r\n                    question.setText(execution.quiz.get(QP.current));\r\n                    tts.speakOut(question.getText().toString(), \"default\");\r\n                    tem.clear();\r\n                    tem.add(\"별이 각자 다른 위치로 이동합니다.\");\r\n                    tem.add(\"어떤 식으로 이동하는지 잘 생각해 보십시오.\");\r\n                    tem.add(\"이 다음에는 네 칸중 별이 어디에 위치하게 될까요?\");\r\n                    tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                    fragmentManager.beginTransaction().replace(R.id.frame_layout, executionTwo).commit();\r\n                }\r\n                else if(QP.current == 1) {\r\n                    pro_bar.setProgress(50);\r\n                    LL.setLayoutParams(Param2);\r\n                    sttBtn.setVisibility(View.VISIBLE);\r\n                    sttBtn.setEnabled(true);\r\n                    textInputLayout.setVisibility(View.VISIBLE);\r\n                    tts.isStopUtt = false;\r\n                    QP.current++;\r\n                    question.setText(execution.quiz.get(QP.current));\r\n                    tts.speakOut(question.getText().toString(), \"default\");\r\n                    tem.clear();\r\n                    tem.add(\"'1 봄 2 여름 ~' 이런 형태로 연결되어 나갑니다.\");\r\n                    tem.add(\"첫번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                    tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                    fragmentManager.beginTransaction().replace(R.id.frame_layout, ExecutionThree.newInstance(1, 0)).commit();\r\n                }\r\n                else if(QP.current == 2) {\r\n                    pro_bar.setProgress(55);\r\n                    LL.setLayoutParams(Param2);\r\n                    sttBtn.setVisibility(View.VISIBLE);\r\n                    sttBtn.setEnabled(true);\r\n                    textInputLayout.setVisibility(View.VISIBLE);\r\n                    tts.isStopUtt = false;\r\n                    QP.current++;\r\n                    question.setText(execution.quiz.get(QP.current));\r\n                    tts.speakOut(\"두번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                    fragmentManager.beginTransaction().replace(R.id.frame_layout, ExecutionThree.newInstance(0, 1)).commit();\r\n                }\r\n                else if(QP.current == 3) {\r\n                    pro_bar.setProgress(60);\r\n                    execution.Tscore = cal_score(U_answers, execution.crr_ans);\r\n\r\n                    execution.scores[5] = execution.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), memoryOutput_Page.class);\r\n                    intent.putExtra(\"scores\", execution.scores);\r\n                    startActivity(intent);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                if(QP.current == 0){\r\n                    Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n                if(QP.current > 0){\r\n                    QP.current --;\r\n                    tts.isStopUtt = false;\r\n                    question.setText(execution.quiz.get(QP.current));\r\n                    answer.setText(\"\");\r\n                    tts.speakOut(question.getText().toString(),\"default\");\r\n                    if(QP.current == 0){\r\n                        LL.setLayoutParams(Param1);\r\n                        sttBtn.setVisibility(View.INVISIBLE);\r\n                        sttBtn.setEnabled(false);\r\n                        textInputLayout.setVisibility(View.INVISIBLE);\r\n                        pro_bar.setProgress(45);\r\n                        //p_num.setText(\"9/17\");\r\n                        tem.clear();\r\n                        tem.add(\"모양들을 보면서 어떤 순서로 나오는지 생각해보세요.\");\r\n                        tem.add(\"네모, 동그라미, 세모, 네모, 빈칸, 세모\");\r\n                        tem.add(\"그렇다면 빈칸에는 무엇이 들어가야 할까요?\");\r\n                        tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, executionOne).commit();\r\n                    }\r\n                    else if(QP.current == 1){\r\n                        LL.setLayoutParams(Param1);\r\n                        sttBtn.setVisibility(View.INVISIBLE);\r\n                        sttBtn.setEnabled(false);\r\n                        textInputLayout.setVisibility(View.INVISIBLE);\r\n                        pro_bar.setProgress(50);\r\n                        //p_num.setText(\"10/17\");\r\n                        tem.clear();\r\n                        tem.add(\"별이 각자 다른 위치로 이동합니다.\");\r\n                        tem.add(\"어떤 식으로 이동하는지 잘 생각해 보십시오.\");\r\n                        tem.add(\"이 다음에는 네 칸중 별이 어디에 위치하게 될까요?\");\r\n                        tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, executionTwo).commit();\r\n                    }\r\n                    else if(QP.current == 2){\r\n                        pro_bar.setProgress(55);\r\n                        LL.setLayoutParams(Param2);\r\n                        sttBtn.setVisibility(View.VISIBLE);\r\n                        sttBtn.setEnabled(true);\r\n                        textInputLayout.setVisibility(View.VISIBLE);\r\n                        //p_num.setText(\"11/17\");\r\n                        tem.clear();\r\n                        tem.add(\"'1 봄 2 여름 ~' 이런 형태로 연결되어 나갑니다.\");\r\n                        tem.add(\"첫번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                        tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, ExecutionThree.newInstance(1, 0)).commit();\r\n                    }\r\n                    else if(QP.current == 3) {\r\n                        pro_bar.setProgress(60);\r\n                        LL.setLayoutParams(Param2);\r\n                        sttBtn.setVisibility(View.VISIBLE);\r\n                        sttBtn.setEnabled(true);\r\n                        textInputLayout.setVisibility(View.VISIBLE);\r\n                        tts.isStopUtt = false;\r\n                        tts.speakOut(\"두번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, ExecutionThree.newInstance(0, 1)).commit();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                stt.Stop();\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString()\r\n                        .replace(\",\",\"\")\r\n                        .replace(\".\", \"\");\r\n\r\n                switch (QP.current) {\r\n                    case 0:\r\n                        total = executionOne.oneResult();\r\n                        Log.d(\"result\", \"oneResult\");\r\n                        break;\r\n                    case 1:\r\n                        total = executionTwo.twoResult();\r\n                        Log.d(\"result\", \"twoResult\");\r\n                        break;\r\n                    case 2:\r\n                        total = answer.getText().toString();\r\n                        Log.d(\"result\", \"threeResult_number \" + total);\r\n                        break;\r\n                    case 3 :\r\n                        total = answer.getText().toString();\r\n                        Log.d(\"result\", \"threeResult_season \" + total);\r\n                        break;\r\n                    default:\r\n                        Log.d(\"case default!!\", \"넘어감\");\r\n                        break;\r\n                }\r\n\r\n                answer.setText(\"\");\r\n\r\n                if(total.isEmpty()) {\r\n                    Toast.makeText(getApplicationContext(),\"응답을 하셔야 넘어가실 수 있습니다\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                else {\r\n                    tts.Stop();\r\n                    tts.isStopUtt = true;\r\n\r\n                    U_answers[QP.current] = total;\r\n\r\n                    if(QP.current == 0) {\r\n                        pro_bar.setProgress(45);\r\n                        tts.isStopUtt = false;\r\n                        QP.current++;\r\n                        question.setText(execution.quiz.get(QP.current));\r\n                        //p_num.setText(\"10/17\");\r\n                        tts.speakOut(question.getText().toString(), \"default\");\r\n                        tem.clear();\r\n                        tem.add(\"별이 각자 다른 위치로 이동합니다.\");\r\n                        tem.add(\"어떤 식으로 이동하는지 잘 생각해 보십시오.\");\r\n                        tem.add(\"이 다음에는 네 칸중 별이 어디에 위치하게 될까요?\");\r\n                        tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, executionTwo).commit();\r\n                    }\r\n                    else if(QP.current == 1) {\r\n                        pro_bar.setProgress(50);\r\n                        LL.setLayoutParams(Param2);\r\n                        sttBtn.setVisibility(View.VISIBLE);\r\n                        sttBtn.setEnabled(true);\r\n                        textInputLayout.setVisibility(View.VISIBLE);\r\n                        tts.isStopUtt = false;\r\n                        QP.current++;\r\n                        //p_num.setText(\"11/17\");\r\n                        question.setText(execution.quiz.get(QP.current));\r\n                        tts.speakOut(question.getText().toString(), \"default\");\r\n                        tem.clear();\r\n                        tem.add(\"'1 봄 2 여름 ~' 이런 형태로 연결되어 나갑니다.\");\r\n                        tem.add(\"첫번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                        tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, ExecutionThree.newInstance(1, 0)).commit();\r\n                    }\r\n                    else if(QP.current == 2) {\r\n                        pro_bar.setProgress(55);\r\n                        LL.setLayoutParams(Param2);\r\n                        sttBtn.setVisibility(View.VISIBLE);\r\n                        sttBtn.setEnabled(true);\r\n                        textInputLayout.setVisibility(View.VISIBLE);\r\n                        tts.isStopUtt = false;\r\n                        QP.current++;\r\n                        question.setText(execution.quiz.get(QP.current));\r\n                        tts.speakOut(\"두번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, ExecutionThree.newInstance(0, 1)).commit();\r\n                    }\r\n                    else if(QP.current == 3) {\r\n                        pro_bar.setProgress(60);\r\n                        execution.Tscore = cal_score(U_answers, execution.crr_ans);\r\n\r\n                        execution.scores[5] = execution.Tscore;\r\n\r\n                        Intent intent = new Intent(getApplicationContext(), memoryOutput_Page.class);\r\n                        intent.putExtra(\"scores\", execution.scores);\r\n                        startActivity(intent);\r\n\r\n                        finish();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public int cal_score(String[] ans, List<String>[] crr){\r\n        int score = 0;\r\n        if(ans.length == crr.length){\r\n            for(int i = 0; i < ans.length; i++){\r\n                if(crr[i].size() > 1){\r\n                    for(String s : crr[i]){\r\n                        if(ans[i].contains(s)) score ++;\r\n                    }\r\n                }\r\n                else if(ans[i].contains(crr[i].get(0))) score ++;\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        QP.Start();\r\n        answer.setHint(\"답변이 여기 나타납니다.\");\r\n        tts.speakOut(question.getText().toString(),\"default\");\r\n        if(QP.current == 0){\r\n            LL.setLayoutParams(Param1);\r\n            sttBtn.setVisibility(View.INVISIBLE);\r\n            sttBtn.setEnabled(false);\r\n            textInputLayout.setVisibility(View.INVISIBLE);\r\n            pro_bar.setProgress(45);\r\n            //p_num.setText(\"9/17\");\r\n            tem.clear();\r\n            tem.add(\"모양들을 보면서 어떤 순서로 나오는지 생각해보세요.\");\r\n            tem.add(\"네모, 동그라미, 세모, 네모, 빈칸, 세모\");\r\n            tem.add(\"그렇다면 빈칸에는 무엇이 들어가야 할까요?\");\r\n            tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n            fragmentManager.beginTransaction().replace(R.id.frame_layout, executionOne).commit();\r\n        }\r\n        else if(QP.current == 1){\r\n            LL.setLayoutParams(Param1);\r\n            sttBtn.setVisibility(View.INVISIBLE);\r\n            sttBtn.setEnabled(false);\r\n            textInputLayout.setVisibility(View.INVISIBLE);\r\n            pro_bar.setProgress(50);\r\n            //p_num.setText(\"10/17\");\r\n            tem.clear();\r\n            tem.add(\"별이 각자 다른 위치로 이동합니다.\");\r\n            tem.add(\"어떤 식으로 이동하는지 잘 생각해 보십시오.\");\r\n            tem.add(\"이 다음에는 네 칸중 별이 어디에 위치하게 될까요?\");\r\n            tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n            fragmentManager.beginTransaction().replace(R.id.frame_layout, executionTwo).commit();\r\n        }\r\n        else if(QP.current == 2){\r\n            pro_bar.setProgress(55);\r\n            LL.setLayoutParams(Param2);\r\n            sttBtn.setVisibility(View.VISIBLE);\r\n            sttBtn.setEnabled(true);\r\n            textInputLayout.setVisibility(View.VISIBLE);\r\n            //p_num.setText(\"11/17\");\r\n            tem.clear();\r\n            tem.add(\"'1 봄 2 여름 ~' 이런 형태로 연결되어 나갑니다.\");\r\n            tem.add(\"첫번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n            tts.UtteranceProgress(tem, \"continue\", time, question, sttBtn, submit);\r\n            fragmentManager.beginTransaction().replace(R.id.frame_layout, ExecutionThree.newInstance(1, 0)).commit();\r\n        }\r\n        else if(QP.current == 3) {\r\n            pro_bar.setProgress(60);\r\n            LL.setLayoutParams(Param2);\r\n            sttBtn.setVisibility(View.VISIBLE);\r\n            sttBtn.setEnabled(true);\r\n            textInputLayout.setVisibility(View.VISIBLE);\r\n            tts.isStopUtt = false;\r\n            tts.speakOut(\"두번째 빈칸에는 무엇이 들어갈 차례일까요?\");\r\n            fragmentManager.beginTransaction().replace(R.id.frame_layout, ExecutionThree.newInstance(0, 1)).commit();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/ExecutionPage.java b/app/src/main/java/QuizPage/ExecutionPage.java
--- a/app/src/main/java/QuizPage/ExecutionPage.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/QuizPage/ExecutionPage.java	(date 1667793955521)
@@ -37,6 +37,7 @@
 import fragment.ExecutionThree;
 import fragment.ExecutionTwo;
 import questions.Execution;
+import user.SharedPreference;
 
 
 public class ExecutionPage extends AppCompatActivity {
@@ -128,7 +129,10 @@
                 tts.UtteranceProgress(tem, "continue", question, sttBtn, submit);
             }
         });
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
         QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, execution.quiz);
 
         sttBtn.setEnabled(false);
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/edge.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/mic_color_drawable.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/mic_default.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/mic_disable.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/mic_pressed.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/round_button.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/font/font_resource.xml\" value=\"0.19814814814814816\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_first.xml\" value=\"0.13333333333333333\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_home.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_register.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_result.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_simple_test.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/comprehension.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution.xml\" value=\"0.14666666666666667\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution_season.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution_star.xml\" value=\"0.4466666666666667\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/fluency.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/fragment_home.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/language_func.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/map.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/memory_input.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/memory_output.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/orientation.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/quiz_home.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/space_time.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/drawable-v24/round_button.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/drawable/round_button.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/layout/activity_first.xml\" value=\"0.1539855072463768\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/layout/activity_formal_test.xml\" value=\"0.24895833333333334\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/layout/activity_home.xml\" value=\"0.17904761904761904\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/layout/activity_main.xml\" value=\"0.1721014492753623\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/layout/activity_register.xml\" value=\"0.16259057971014493\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/layout/activity_simple_test.xml\" value=\"0.24895833333333334\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/layout/main_home.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/layout/quiz_home.xml\" value=\"0.15942028985507245\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/bg01.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/bg_updown.xml\" value=\"0.11666666666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/dialog_end.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/edge.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_baseline_check.xml\" value=\"0.24722222222222223\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_baseline_home.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_delete.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_east.xml\" value=\"0.16203703703703703\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_fill.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_fill_gray.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_full.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_left_right.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_mic.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/ic_star.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/progressbar.xml\" value=\"0.1259259259259259\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/quiz_start_end.xml\" value=\"0.2074074074074074\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/radio_padding.xml\" value=\"0.2175925925925926\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/res_circle.xml\" value=\"0.10277777777777777\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/res_square.xml\" value=\"0.10277777777777777\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/res_triangle.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/round_button.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/round_gray.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_anim.xml\" value=\"0.13055555555555556\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_change.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_exe.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_exe_two.xml\" value=\"0.265625\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_false.xml\" value=\"0.2175925925925926\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_line.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_oval.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_rectangle.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_ring.xml\" value=\"0.16296296296296298\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_round_bar.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_triangle.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_true.xml\" value=\"0.2175925925925926\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/shape_x.xml\" value=\"0.2074074074074074\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/star_square.xml\" value=\"0.176\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/target_shape.xml\" value=\"0.23385416666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/triangle_blue.xml\" value=\"0.10277777777777777\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_comprehension_page.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_first.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_home.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_information.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_main.xml\" value=\"0.17474048442906576\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_main2.xml\" value=\"0.16259057971014493\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_register.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_result.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_scomprehension.xml\" value=\"0.2484375\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_sexecution.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_simple_test.xml\" value=\"0.23333333333333334\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_start.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/bottom_navigation.xml\" value=\"0.1490036231884058\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/comprehension.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/dialog_delete.xml\" value=\"0.2164855072463768\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/dialog_full.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/dialog_quiz_end.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/dialog_retrieve.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution_number.xml\" value=\"0.1766304347826087\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution_season.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution_shape.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution_star.xml\" value=\"0.25462962962962965\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/fragment_chart.xml\" value=\"0.1941747572815534\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/fragment_first.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/fragment_home.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/fragment_inf.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/fragment_second.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/fragment_setting.xml\" value=\"0.12037037037037036\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/ic_left_right.xml\" value=\"0.6\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/inf_view.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/language_func.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/map.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/memory_input.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/orientation.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/quiz_home.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/quiz_home1.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/quiz_start.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/quiz_start_end.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/recycler_result.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/result_loading.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/result_view.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/s_comprehension.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/s_execution.xml\" value=\"0.128\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/s_language.xml\" value=\"0.1947463768115942\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/scomprehension.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/space_time.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/spinner.xml\" value=\"0.22871376811594202\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/standard_quiz_ui.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/star_square.xml\" value=\"0.12082066869300911\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/temp.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/understand.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/menu/bottom_navigation.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\" value=\"0.265625\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/.idea/misc.xml	(date 1667981982659)
@@ -9,13 +9,20 @@
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/mic_disable.xml" value="0.1" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/mic_pressed.xml" value="0.1" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/round_button.xml" value="0.1" />
+        <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/selector_text_input_color.xml" value="0.1953125" />
+        <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/drawable/styles.xml" value="0.1953125" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/font/font_resource.xml" value="0.19814814814814816" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_first.xml" value="0.13333333333333333" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_home.xml" value="0.1" />
+        <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_map_google.xml" value="0.1526268115942029" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_register.xml" value="0.22" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_result.xml" value="0.1" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_simple_test.xml" value="0.22" />
+        <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/activity_voice_bot.xml" value="0.15942028985507245" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/comprehension.xml" value="0.22" />
+        <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/content_voice_bot.xml" value="0.22" />
+        <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/dialog_full.xml" value="0.12771739130434784" />
+        <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/dialog_stt.xml" value="0.3333333333333333" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution.xml" value="0.14666666666666667" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution_season.xml" value="0.16666666666666666" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/execution_star.xml" value="0.4466666666666667" />
@@ -28,6 +35,7 @@
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/orientation.xml" value="0.22" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/quiz_home.xml" value="0.16666666666666666" />
         <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/space_time.xml" value="0.22" />
+        <entry key="..\:/Users/YooJin/AndroidStudioProjects/DementiaDiagnosis2/app/src/main/res/layout/styles.xml" value="0.14175724637681159" />
         <entry key="..\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/drawable-v24/round_button.xml" value="0.1" />
         <entry key="..\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/drawable/ic_launcher_background.xml" value="0.1" />
         <entry key="..\:/Users/user/AndroidStudioProjects/DementiaDiagnosis/app/src/main/res/drawable/round_button.xml" value="0.1" />
Index: app/src/main/java/QuizPage/attention_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport questions.attention;\r\n\r\npublic class attention_Page extends AppCompatActivity {\r\n    attention att;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    String[] U_answers;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    List<String> tem = new ArrayList<>();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        att = new attention();\r\n        helper_img = findViewById(R.id.img);\r\n        U_answers = new String[att.num];\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        type.setText(\"주의력\");\r\n        pro_bar.setProgress(20);\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        Arrays.fill(U_answers, \"\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        att.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tem.clear();\r\n                tts.onInit(status, question.getText().toString(), \"default\", 1000);\r\n                tem.add(\"6, 9, 7, 3\");\r\n                tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                sttBtn.setEnabled(false);\r\n                submit.setEnabled(false);\r\n                answer.setEnabled(false);\r\n            }\r\n        });\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, att.quiz);\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                question.setText(att.quiz.get(QP.current));\r\n                tts.speakOut(question.getText().toString(),\"default\");\r\n                if(QP.current == 0){\r\n                    tem.clear();\r\n                    tem.add(\"6, 9, 7, 3\");\r\n                    tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                }\r\n                else if(QP.current == 1){\r\n                    tem.clear();\r\n                    tem.add(\"5, 7, 2, 8, 4\");\r\n                    tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                }\r\n                else if(QP.current == 2){\r\n                    tem.clear();\r\n                    tem.add(\"금수강산\");\r\n                    tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                }\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                answer.setText(\"\");\r\n                if(QP.current == 0){\r\n                    pro_bar.setProgress(25);\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(false);\r\n                    answer.setEnabled(false);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString(), \"default\");\r\n                    tem.clear();\r\n                    tem.add(\"5, 7, 2, 8, 4\");\r\n                    tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                }\r\n                else if(QP.current == 1){\r\n                    pro_bar.setProgress(30);\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(false);\r\n                    answer.setEnabled(false);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString(), \"default\");\r\n                    tem.clear();\r\n                    tem.add(\"금수강산\");\r\n                    tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                }\r\n                else if(QP.current == 2){\r\n                    pro_bar.setProgress(35);\r\n\r\n                    att.Tscore = cal_score(U_answers, att.crr_ans);\r\n\r\n                    att.scores[3] = att.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), SpaceTimePage.class);\r\n                    intent.putExtra(\"scores\", att.scores);\r\n                    startActivity(intent);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                if(QP.current == 0){\r\n                    Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n                if(QP.current > 0){\r\n                    QP.current --;\r\n                    tts.isStopUtt = false;\r\n                    question.setText(att.quiz.get(QP.current));\r\n                    answer.setText(\"\");\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(false);\r\n                    answer.setEnabled(false);\r\n\r\n                    tts.speakOut(question.getText().toString(),\"default\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(20);\r\n                        tem.clear();\r\n                        tem.add(\"6, 9, 7, 3\");\r\n                        tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                    }\r\n                    else if(QP.current == 1){\r\n                        pro_bar.setProgress(25);\r\n                        tem.clear();\r\n                        tem.add(\"5, 7, 2, 8, 4\");\r\n                        tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                    }\r\n                    else if(QP.current == 2){\r\n                        pro_bar.setProgress(30);\r\n                        tem.clear();\r\n                        tem.add(\"금수강산\");\r\n                        tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString()\r\n                        .replace(\" \",\"\")\r\n                        .replace(\",\",\"\")\r\n                        .replace(\".\", \"\");\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else\r\n                {\r\n                    U_answers[QP.current] = QP.user_ans;\r\n                    answer.setText(\"\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(25);\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(false);\r\n                        answer.setEnabled(false);\r\n                        tts.isStopUtt = false;\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString(), \"default\");\r\n                        tem.clear();\r\n                        tem.add(\"5, 7, 2, 8, 4\");\r\n                        tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                    }\r\n                    else if(QP.current == 1){\r\n                        pro_bar.setProgress(30);\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(false);\r\n                        answer.setEnabled(false);\r\n                        tts.isStopUtt = false;\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString(), \"default\");\r\n                        tem.clear();\r\n                        tem.add(\"금수강산\");\r\n                        tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n                    }\r\n                    else if(QP.current == 2){\r\n                        pro_bar.setProgress(35);\r\n\r\n                        att.Tscore = cal_score(U_answers, att.crr_ans);\r\n\r\n                        att.scores[3] = att.Tscore;\r\n\r\n                        Intent intent = new Intent(getApplicationContext(), SpaceTimePage.class);\r\n                        intent.putExtra(\"scores\", att.scores);\r\n                        startActivity(intent);\r\n\r\n                        finish();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    int cal_score(String[] ans, List<String>[] crr){\r\n        int score = 0;\r\n        if(ans.length == crr.length){\r\n            for(int i = 0; i < ans.length; i++){\r\n                if(crr[i].size() > 1){\r\n                    for(String s : crr[i]){\r\n                        if(ans[i].contains(s)) score ++;\r\n                    }\r\n                }\r\n                else if(ans[i].contains(crr[i].get(0))) score ++;\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        QP.Start();\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        answer.setEnabled(false);\r\n        tts.speakOut(question.getText().toString(),\"default\");\r\n        if(QP.current == 0){\r\n            tem.clear();\r\n            tem.add(\"6, 9, 7, 3\");\r\n            tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n        }\r\n        else if(QP.current == 1){\r\n            tem.clear();\r\n            tem.add(\"5, 7, 2, 8, 4\");\r\n            tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n        }\r\n        else if(QP.current == 2){\r\n            tem.clear();\r\n            tem.add(\"금수강산\");\r\n            tts.UtteranceProgress(tem, \"continue\", sttBtn, submit, answer);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/attention_Page.java b/app/src/main/java/QuizPage/attention_Page.java
--- a/app/src/main/java/QuizPage/attention_Page.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/QuizPage/attention_Page.java	(date 1667793955638)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.Button;
@@ -28,6 +29,7 @@
 import java.util.List;
 
 import questions.attention;
+import user.SharedPreference;
 
 public class attention_Page extends AppCompatActivity {
     attention att;
@@ -86,7 +88,10 @@
                 answer.setEnabled(false);
             }
         });
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
         QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, att.quiz);
 
         helper = new Helper(tts, stt, helper_img, this);
Index: app/src/main/java/QuizPage/fluency_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.QuizHOME;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport questions.fluency;\r\nimport questions.orientation;\r\n\r\npublic class fluency_Page extends AppCompatActivity {\r\n    fluency flu;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    List<String> tem = new ArrayList<>();\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        flu = new fluency();\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        flu.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        stt.isFluency = true;\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, flu.quiz);\r\n        helper_img = findViewById(R.id.img);\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tem.clear();\r\n                answer.setEnabled(false);\r\n                sttBtn.setEnabled(false);\r\n                submit.setEnabled(false);\r\n                int time[] = {1500, 1000, 1000, 1001};\r\n                tts.onInit(status, question.getText().toString(), \"default\", 1000);\r\n                tem.add(flu.quiz.get(1));\r\n                tem.add(flu.quiz.get(2));\r\n                tem.add(flu.quiz.get(3));\r\n                tts.UtteranceProgress(tem, \"continue\", time, question, answer, stt);\r\n            }\r\n        });\r\n\r\n        type.setText(\"유창성(집행기능)\");\r\n        pro_bar.setProgress(95);\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                    tts.isStopUtt = true;\r\n                    tts.Stop();\r\n                    stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                pro_bar.setProgress(100);\r\n                stt.Stop();\r\n                tts.Stop();\r\n\r\n                flu.Tscore = 0;\r\n\r\n                flu.scores[8] = flu.Tscore;\r\n\r\n                Intent intent = new Intent(getApplicationContext(), QuizHOME.class);\r\n                intent.putExtra(\"scores\", flu.scores);\r\n                intent.putExtra(\"isDone\", true);\r\n                startActivity(intent);\r\n\r\n                stt.isFluency = false;\r\n\r\n                finish();\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                pro_bar.setProgress(100);\r\n                stt.Stop();\r\n                tts.Stop();\r\n                QP.user_ans = answer.getText().toString().replace(\".\", \"\");\r\n                QP.user_ans = answer.getText().toString().replace(\",\", \"\");\r\n                String ans[] = QP.user_ans.split(\" \");\r\n                int correct = 0;\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else {\r\n                    for (int i = 0; i < ans.length; i++) {\r\n                        if (flu.crr_ans[0].contains(ans[i])) {\r\n                            correct++;\r\n                        }\r\n                    }\r\n                    if (correct >= 15) {\r\n                        flu.Tscore = 2;\r\n                    } else if (correct >= 9) {\r\n                        flu.Tscore = 1;\r\n                    } else {\r\n                        flu.Tscore = 0;\r\n                    }\r\n\r\n                    flu.scores[8] = flu.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), QuizHOME.class);\r\n                    intent.putExtra(\"scores\", flu.scores);\r\n                    intent.putExtra(\"isDone\", true);\r\n                    startActivity(intent);\r\n\r\n                    stt.isFluency = false;\r\n                    tts.Destroy();\r\n                    stt.Destroy();\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        if(!question.getText().equals(\"그만!\")){\r\n            tem.clear();\r\n            answer.setEnabled(false);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(false);\r\n            int time[] = {2000, 1000, 1000, 1001};\r\n            question.setText(flu.quiz.get(0));\r\n            answer.setText(\"\");\r\n            tts.speakOut(flu.quiz.get(0), \"default\");\r\n            tem.add(flu.quiz.get(1));\r\n            tem.add(flu.quiz.get(2));\r\n            tem.add(flu.quiz.get(3));\r\n            tts.UtteranceProgress(tem, \"continue\", time, question, answer, stt);\r\n        }\r\n        else{\r\n            tem.clear();\r\n            answer.setEnabled(true);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(true);\r\n            question.setText(\"답변을 완료하셨습니다.\\n파란색 상자를 눌러 답변을 저장해주세요!\");\r\n            tts.speakOut(question.getText().toString(), \"Done\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        tts.Destroy();\r\n        stt.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/fluency_Page.java b/app/src/main/java/QuizPage/fluency_Page.java
--- a/app/src/main/java/QuizPage/fluency_Page.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/QuizPage/fluency_Page.java	(date 1667793955720)
@@ -31,6 +31,7 @@
 
 import questions.fluency;
 import questions.orientation;
+import user.SharedPreference;
 
 public class fluency_Page extends AppCompatActivity {
     fluency flu;
@@ -72,7 +73,11 @@
         intent = getIntent();
         flu.scores = intent.getIntArrayExtra("scores");
 
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         stt.isFluency = true;
         QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, flu.quiz);
         helper_img = findViewById(R.id.img);
Index: app/src/main/java/memoryQuiz/StartActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package memoryQuiz;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class StartActivity extends AppCompatActivity {\r\n\r\n    TextView speakMsg;\r\n    Button startBtn;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    TTS tts;\r\n    private long backBtnTime = 0;\r\n    List<String> tem = new ArrayList<>();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_start);\r\n\r\n        helper_img = (ImageView) findViewById(R.id.img);\r\n        speakMsg = (TextView) findViewById(R.id.textView3);\r\n        startBtn = (Button) findViewById(R.id.button);\r\n\r\n        tts = new TTS(this, status -> {\r\n            tem.clear();\r\n            tts.onInit(status, speakMsg.getText().toString(), \"default\");\r\n            tem.add(\"아래 예시를 보면\\n각 문제마다 다른 초성이 주어집니다.\");\r\n            tem.add(\"초성을 보고 생각나는\\n단어 3개를 말씀해주시면 됩니다.\");\r\n            tem.add(\"답변 시 아래 마이크를\\n누르신 후 말씀해주시면 됩니다.\");\r\n            tem.add(\"시작할 준비가 되셨다면\\n아래 시작하기 버튼을 눌러주세요.\");\r\n            tts.UtteranceProgress(tem,\"continue\", speakMsg);\r\n        });\r\n\r\n        helper = new Helper(tts, helper_img, this);\r\n        helper.setStart();\r\n\r\n        speakMsg.setOnClickListener(v -> {\r\n            speakMsg.setText(\"기억력 향상 퀴즈로는\\n초성퀴즈가 진행됩니다.\");\r\n            tts.speakOut(speakMsg.getText().toString(),\"default\");\r\n            tem.clear();\r\n            tem.add(\"아래 예시를 보면\\n각 문제마다 다른 초성이 주어집니다.\");\r\n            tem.add(\"초성을 보고 생각나는\\n단어 3개를 말씀해주시면 됩니다.\");\r\n            tem.add(\"답변 시 아래 마이크를\\n누르신 후 말씀해주시면 됩니다.\");\r\n            tem.add(\"시작할 준비가 되셨다면\\n아래 시작하기 버튼을 눌러주세요.\");\r\n            tts.UtteranceProgress(tem, \"continue\", speakMsg);\r\n        });\r\n\r\n        startBtn.setOnClickListener(v -> {\r\n            tts.Destroy();\r\n            startActivity(new Intent(StartActivity.this, MainActivity.class));\r\n            finish();\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            super.onBackPressed();\r\n            tts.Destroy();\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"한번 더 누르시면 퀴즈가 종료됩니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n\r\n        speakMsg.setText(\"기억력 향상 퀴즈로는\\n초성퀴즈가 진행됩니다.\");\r\n        tts.speakOut(speakMsg.getText().toString(),\"default\");\r\n        tem.clear();\r\n        tem.add(\"아래 예시를 보면\\n각 문제마다 다른 초성이 주어집니다.\");\r\n        tem.add(\"초성을 보고 생각나는\\n단어 3개를 말씀해주시면 됩니다.\");\r\n        tem.add(\"답변 시 아래 마이크를\\n누르신 후 말씀해주시면 됩니다.\");\r\n        tem.add(\"시작할 준비가 되셨다면\\n아래 시작하기 버튼을 눌러주세요.\");\r\n        tts.UtteranceProgress(tem, \"continue\", speakMsg);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        tts.Stop();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/memoryQuiz/StartActivity.java b/app/src/main/java/memoryQuiz/StartActivity.java
--- a/app/src/main/java/memoryQuiz/StartActivity.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/memoryQuiz/StartActivity.java	(date 1667793063278)
@@ -2,6 +2,7 @@
 
 import android.content.Intent;
 import android.os.Bundle;
+import android.os.Parcelable;
 import android.speech.tts.TextToSpeech;
 import android.view.View;
 import android.widget.Button;
@@ -12,12 +13,15 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.cbnu.dementiadiagnosis.Helper;
+import com.cbnu.dementiadiagnosis.HomeActivity;
 import com.cbnu.dementiadiagnosis.R;
 import com.cbnu.dementiadiagnosis.TTS;
 
 import java.util.ArrayList;
 import java.util.List;
 
+import QuizPage.SpaceTimePage;
+
 public class StartActivity extends AppCompatActivity {
 
     TextView speakMsg;
@@ -63,7 +67,8 @@
 
         startBtn.setOnClickListener(v -> {
             tts.Destroy();
-            startActivity(new Intent(StartActivity.this, MainActivity.class));
+            Intent intent1 = new Intent(getApplicationContext(), MainActivity.class);
+            startActivity(intent1);
             finish();
         });
     }
@@ -75,7 +80,10 @@
 
         if (0 <= gapTime && 2000 >= gapTime) {
             super.onBackPressed();
+            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);
+            startActivity(intent);
             tts.Destroy();
+
             finish();
         } else {
             backBtnTime = curTime;
Index: app/src/main/java/QuizPage/memoryOutput_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport questions.memoryOutput;\r\n\r\npublic class memoryOutput_Page extends AppCompatActivity {\r\n    memoryOutput memo_out;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    boolean first[];\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n        final TextInputLayout TIL = findViewById(R.id.goolelayout);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        answer = TIL.getEditText();\r\n        answer.setEnabled(true);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        memo_out = new memoryOutput();\r\n        helper_img = findViewById(R.id.img);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        type.setText(\"기억회상\");\r\n        pro_bar.setProgress(55);\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        memo_out.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_out.quiz);\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        first = new boolean[memo_out.num];\r\n        Arrays.fill(first, false);\r\n        first[0] = true;\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                answer.setText(\"\");\r\n                QP.current ++;\r\n                if(QP.current == 0) QP.current = 6;\r\n                else{\r\n                    while (QP.current < 6){\r\n                        if(!first[QP.current]){\r\n                            question.setText(memo_out.quiz.get(QP.current));\r\n                            tts.speakOut(question.getText().toString());\r\n                            break;\r\n                        }\r\n                        else QP.current ++;\r\n                    }\r\n                }\r\n                if(QP.current == 6){\r\n                    pro_bar.setProgress(70);\r\n                    memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), LanguagePage.class);\r\n                    intent.putExtra(\"scores\", memo_out.scores);\r\n                    startActivity(intent);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                Toast.makeText(getApplicationContext(), \"기억력 항목에서는 뒤로가기를 할 수 없습니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                // 설정 초기화\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString();\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else{\r\n                    answer.setText(\"\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(60);\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_out.crr_ans[0].get(i);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                first[i+1] = true;\r\n                                memo_out.Tscore += 2;\r\n                            }\r\n                            else if(QP.correct == \"11시\"){\r\n                                if(QP.user_ans.contains(\"열 한시\") || QP.user_ans.contains(\"열한시\")){\r\n                                    first[i+1] = true;\r\n                                    memo_out.Tscore += 2;\r\n                                }\r\n                            }\r\n                        }\r\n                        if(memo_out.Tscore == 10){ // 점수가 만점이면 액티비티 종료.\r\n                            memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                            Intent intent = new Intent(getApplicationContext(), LanguagePage.class);\r\n                            intent.putExtra(\"scores\", memo_out.scores);\r\n                            startActivity(intent);\r\n\r\n                            finish();\r\n                        }\r\n                        else{\r\n                            while (QP.current < 6){\r\n                                if(!first[QP.current]){\r\n                                    question.setText(memo_out.quiz.get(QP.current));\r\n                                    tts.speakOut(question.getText().toString());\r\n                                    break;\r\n                                }\r\n                                else QP.current ++;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        QP.correct = memo_out.crr_ans[QP.current].get(0);\r\n                        if(QP.user_ans.contains(QP.correct)){\r\n                            memo_out.Tscore ++;\r\n                        }\r\n                        else if(QP.correct == \"11시\"){\r\n                            if(QP.user_ans.contains(\"열 한시\") || QP.user_ans.contains(\"열한시\")){\r\n                                memo_out.Tscore ++;\r\n                            }\r\n                        }\r\n                        QP.current ++;\r\n                        while (QP.current < 6){\r\n                            if(!first[QP.current]){\r\n                                question.setText(memo_out.quiz.get(QP.current));\r\n                                tts.speakOut(question.getText().toString());\r\n                                break;\r\n                            }\r\n                            else QP.current ++;\r\n                        }\r\n                        if(QP.current == 6){\r\n                            pro_bar.setProgress(70);\r\n                            memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                            Intent intent = new Intent(getApplicationContext(), LanguagePage.class);\r\n                            intent.putExtra(\"scores\", memo_out.scores);\r\n                            startActivity(intent);\r\n\r\n                            finish();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        if(QP.current < 2){\r\n            QP.Start();\r\n            tts.speakOut(question.getText().toString());\r\n        }\r\n        else{\r\n            tts.speakOut(question.getText().toString());\r\n            sttBtn.setEnabled(false);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/memoryOutput_Page.java b/app/src/main/java/QuizPage/memoryOutput_Page.java
--- a/app/src/main/java/QuizPage/memoryOutput_Page.java	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/java/QuizPage/memoryOutput_Page.java	(date 1667793955611)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.speech.tts.TextToSpeech;
+import android.util.Log;
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.Button;
@@ -29,6 +30,7 @@
 import java.util.List;
 
 import questions.memoryOutput;
+import user.SharedPreference;
 
 public class memoryOutput_Page extends AppCompatActivity {
     memoryOutput memo_out;
@@ -81,7 +83,11 @@
                 tts.onInit(status, question.getText().toString(), "Done", 1000);
             }
         });
-        stt = new MainSTT(this, answer, question, sttBtn, submit, tts);
+        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,
+                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),
+                SharedPreference.getSTT_speed(this));
+        Log.d("STT_setting", "s= "+stt.getStart()+", e= "+stt.getEnd()+", v= "+stt.getSpeed());
+
         QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_out.quiz);
 
         helper = new Helper(tts, stt, helper_img, this);
Index: app/src/main/res/layout/fragment_setting.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/frame_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"200dp\"\r\n        android:background=\"?attr/colorTertiary\">\r\n\r\n        <ImageView\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"80dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:src=\"@drawable/ic_account\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/userIf_name\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"55dp\"\r\n            android:text=\"홍길동님\"\r\n            android:textSize=\"18sp\"\r\n            android:fontFamily=\"@font/jejugothic\"/>\r\n    </FrameLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/userIf_retrieve\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_below=\"@+id/frame_layout\"\r\n        android:layout_marginTop=\"50dp\"\r\n        android:gravity=\"center_vertical\"\r\n        android:paddingStart=\"30dp\"\r\n        android:text=\"사용자 정보 수정\"\r\n        android:textColor=\"?attr/colorOnTertiary\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:textSize=\"16sp\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/userIf_delete\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_below=\"@+id/userIf_retrieve\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:gravity=\"center_vertical\"\r\n        android:paddingStart=\"30dp\"\r\n        android:text=\"사용자 정보 삭제\"\r\n        android:textColor=\"?attr/colorOnTertiary\"\r\n        android:textSize=\"16sp\" />\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_below=\"@+id/userIf_delete\"\r\n        android:gravity=\"center_vertical\"\r\n        android:paddingStart=\"30dp\"\r\n        android:text=\"개발자 정보\\n충북대학교 소프트웨어학과 신이숙 이유진\\ndldbwls6763@chungbuk.co.kr\\n\\nSTT서비스   ETRI\\nAI대화봇     (주)스캐터랩\\n검색 엔진     NAVER\"\r\n        android:textColor=\"?attr/colorSecondaryVariant\"\r\n        android:lineSpacingExtra =\"10dp\"\r\n        android:fontFamily=\"@font/jejugothic\"\r\n        android:textSize=\"13sp\" />\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_setting.xml b/app/src/main/res/layout/fragment_setting.xml
--- a/app/src/main/res/layout/fragment_setting.xml	(revision b413ffba48eb34d058deceb94cd7929d8e257068)
+++ b/app/src/main/res/layout/fragment_setting.xml	(date 1667440838180)
@@ -53,6 +53,18 @@
         android:textColor="?attr/colorOnTertiary"
         android:textSize="16sp" />
 
+    <TextView
+        android:id="@+id/setting_stt"
+        android:layout_width="match_parent"
+        android:layout_height="50dp"
+        android:layout_below="@+id/userIf_delete"
+        android:fontFamily="@font/jejugothic"
+        android:gravity="center_vertical"
+        android:paddingStart="30dp"
+        android:text="음성인식 옵션"
+        android:textColor="?attr/colorOnTertiary"
+        android:textSize="16sp" />
+
     <TextView
         android:layout_width="match_parent"
         android:layout_height="match_parent"
