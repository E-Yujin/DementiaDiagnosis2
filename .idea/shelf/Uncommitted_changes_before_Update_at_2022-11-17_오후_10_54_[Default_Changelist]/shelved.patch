Index: app/src/main/java/QuizPage/orientation_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport questions.orientation;\r\nimport user.SharedPreference;\r\n\r\npublic class orientation_Page extends AppCompatActivity {\r\n    orientation ortt_main;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type, announce;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    ProgressBar pro_bar;\r\n    Helper helper;\r\n    boolean[] isCorrect;\r\n    boolean[] isWrong;\r\n    String[] U_answers;\r\n    AppCompatButton donKnow;\r\n    boolean isDK_inFirst = false;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        announce = (TextView) findViewById(R.id.announce);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        helper_img = findViewById(R.id.img);\r\n        ortt_main = new orientation(this);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,\r\n                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),\r\n                SharedPreference.getSTT_speed(this));\r\n        Log.d(\"STT_setting\", \"s= \"+stt.getStart()+\", e= \"+stt.getEnd()+\", v= \"+stt.getSpeed());\r\n\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, ortt_main.quiz);\r\n        QP.isOrient = true;\r\n        isCorrect = new boolean[4];\r\n        Arrays.fill(isCorrect, false);\r\n        isWrong = new boolean[4];\r\n        Arrays.fill(isWrong, false);\r\n        U_answers = new String[ortt_main.num];\r\n        Arrays.fill(U_answers, \"\");\r\n        announce.setText(\"년, 월, 일, 요일\");\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        type.setText(\"지남력\");\r\n        pro_bar.setProgress(0);\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                announce.setText(\"\");\r\n\r\n                if(QP.current == 0){\r\n                    QP.current = 4;\r\n                    isDK_inFirst = true;\r\n                    pro_bar.setProgress(10);\r\n                }\r\n                if(QP.current == 3) pro_bar.setProgress(10);\r\n\r\n                int max = -1;\r\n                for(int i = 0; i < 4; i++) {\r\n                    if(!isWrong[i]) max = i;\r\n                }\r\n\r\n                //다음 문제 화면 전환\r\n                if(QP.current < 4){\r\n                    int j = 0;\r\n                    for(int i = 0; i < isCorrect.length; i++){\r\n                        if(!isCorrect[i] && QP.current <= i){\r\n                            QP.current = i;\r\n                            break;\r\n                        }\r\n                        if(isCorrect[i]) j++;\r\n                    }// 모두 정답이면 공간지남력 문제로 점프\r\n                    if(j == 4) QP.current = 4;\r\n                    if(QP.current == max+1) QP.current = 4;\r\n                }\r\n                if(QP.current < 5){\r\n                    answer.setText(\"\");\r\n                    tts.isStopUtt = false;\r\n                    QP.current++;\r\n                    question.setText(ortt_main.quiz.get(QP.current));\r\n                    if(QP.current ==4 ) announce.setText(\"도시 또는 동/읍/면 등을 말해주세요.\");\r\n                    tts.speakOut(question.getText().toString());\r\n                }\r\n                else if(QP.current == 5){\r\n                    announce.setText(\"\");\r\n\r\n                    ortt_main.Tscore = cal_score(U_answers, ortt_main.crr_ans);\r\n\r\n                    ortt_main.scores[1] = ortt_main.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(),memoryInput_Page.class);\r\n                    intent.putExtra(\"scores\", ortt_main.scores);\r\n                    startActivity(intent);\r\n\r\n                    QP.isOrient = false;\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                int min = -1;\r\n                for(int i = 3; i >= 0; i--) {\r\n                    if(!isWrong[i]) min = i;\r\n                }\r\n\r\n                if(QP.current == 0){\r\n                    Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n                if(QP.current > 0){\r\n                    pro_bar.setProgress(5);\r\n                    if(QP.current > 1){\r\n                        boolean isChange = false;\r\n                        for(int i = 3; i >= 0; i--){\r\n                            if(!isWrong[i]){\r\n                                if(QP.current-1 > i){\r\n                                    QP.current = i + 1;\r\n                                    isChange = true;\r\n                                    break;\r\n                                }\r\n                            } // 모두 정답이면 첫 문제로 점프\r\n                        }\r\n                        if(!isChange && min == QP.current-1) QP.current = 0;\r\n                        // current를 바꾼 적이 없고 제일 앞에 있는 되묻기 질문이라면\r\n                        // 반복되지 않도록 제일 첫 질문으로 이동함\r\n                        if(min == -1 && QP.current == 5) QP.current = 0;\r\n                        // 시간지남력 문제에서 틀린 것이 없으면 첫 질문으로 이동\r\n                    }\r\n                    else QP.current --;\r\n\r\n                    if(isDK_inFirst) {\r\n                        QP.current = 0;\r\n                        isDK_inFirst = false;\r\n                    }\r\n                    if(QP.current == 0) {\r\n                        announce.setText(\"년, 월, 일, 요일\");\r\n                        Arrays.fill(isCorrect, false);\r\n                        Arrays.fill(isWrong, false);\r\n                        ortt_main.Tscore = 0;\r\n                    }\r\n                    else announce.setText(\"\");\r\n\r\n                    tts.isStopUtt = false;\r\n                    question.setText(ortt_main.quiz.get(QP.current));\r\n                    answer.setText(\"\");\r\n                    tts.speakOut(question.getText().toString());\r\n                }\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                announce.setText(\"\");\r\n                stt.Stop();\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n                sttBtn.setEnabled(true);\r\n\r\n                QP.user_ans = QP.ans_filter(answer.getText().toString());\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else\r\n                {\r\n                    //날짜 숫자로 변환\r\n                    if(QP.current == 0){ // 첫 물음의 경우\r\n                        Arrays.fill(isCorrect, false);\r\n                        Arrays.fill(isWrong, false);\r\n                        Arrays.fill(U_answers, \"\");\r\n                        pro_bar.setProgress(5);\r\n                        String[] answers = QP.user_ans.split(\" \");\r\n                        for(int i = 0; i < answers.length; i++){\r\n                            String str = \"\";\r\n                            if(answers[i].contains(\"년도\")){\r\n                                if(i-2 >= 0){\r\n                                    str = answers[i-2] + answers[i-1] + answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                else if(i-1 >= 0){\r\n                                    str = answers[i-1] + answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                else if(i >= 0){\r\n                                    str = answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                isCorrect[0] = true;\r\n                                U_answers[0] = dateFilter(str);\r\n                            }\r\n                            else if(answers[i].contains(\"년\")){\r\n                                if(i-2 >= 0){\r\n                                    str = answers[i-2] + answers[i-1] + answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                else if(i-1 >= 0){\r\n                                    str = answers[i-1] + answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                else if(i >= 0){\r\n                                    str = answers[i].replace(\"년\", \"\");\r\n                                }\r\n                                isCorrect[0] = true;\r\n                                U_answers[0] = dateFilter(str);\r\n                            }\r\n                            else if(answers[i].contains(\"월\") && !answers[i].contains(\"요일\")){\r\n                                U_answers[1] = dateFilter(answers[i]);\r\n                                isCorrect[1] = true;\r\n                            }\r\n                            else if(answers[i].contains(\"요일\")){\r\n                                U_answers[3] = answers[i];\r\n                                isCorrect[3] = true;\r\n                            }\r\n                            else if(answers[i].contains(\"일\")){\r\n                                if(i != 0 && !answers[i-1].contains(\"월\") && !answers[i-1].contains(\"년\")\r\n                                        && !answers[i-1].contains(\"년도\") && !answers[i-1].contains(\"요일\")){\r\n                                    if(answers[i-1].contains(\"십\")){\r\n                                        str = answers[i-1] + answers[i];\r\n                                        str = str.substring(0, str.length()-1);\r\n                                        isCorrect[2] = true;\r\n                                        U_answers[2] = dateFilter(str);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    isCorrect[2] = true;\r\n                                    U_answers[2] = dateFilter(answers[i]);\r\n                                }\r\n                            }\r\n                        }\r\n                        for(int i = 0; i<isCorrect.length; i++){\r\n                            if(isCorrect[i]) isWrong[i] = true;\r\n                        }\r\n                    }\r\n                    else if(QP.current < 4){ // 틀린 것이 있을 경우\r\n                        QP.user_ans = dateFilter(QP.user_ans);\r\n                        U_answers[QP.current-1] = dateFilter(QP.user_ans);\r\n                    }\r\n                    else {\r\n                        pro_bar.setProgress(10);\r\n                        U_answers[QP.current-1] = QP.user_ans;\r\n                    }\r\n                    int max = -1;\r\n                    for(int i = 0; i < 4; i++) {\r\n                        if(!isWrong[i]) max = i;\r\n                    }\r\n\r\n                    //다음 문제 화면 전환\r\n                    if(QP.current < 4){\r\n                        int j = 0;\r\n                        for(int i = 0; i < isCorrect.length; i++){\r\n                            if(!isCorrect[i] && QP.current <= i){\r\n                                QP.current = i;\r\n                                break;\r\n                            }\r\n                            if(isCorrect[i]) j++;\r\n                        }// 모두 정답이면 공간지남력 문제로 점프\r\n                        if(j == 4) QP.current = 4;\r\n                        if(QP.current == max+1) QP.current = 4;\r\n                    }\r\n                    if(QP.current < 5){\r\n                        answer.setText(\"\");\r\n                        tts.isStopUtt = false;\r\n                        QP.current++;\r\n                        question.setText(ortt_main.quiz.get(QP.current));\r\n                        if(QP.current == 5) announce.setText(\"도시 또는 동/읍/면 등을 말해주세요.\");\r\n                        tts.speakOut(question.getText().toString());\r\n                    }\r\n\r\n                    else if(QP.current == 5){\r\n                        announce.setText(\"\");\r\n\r\n                        ortt_main.Tscore = cal_score(U_answers, ortt_main.crr_ans);\r\n\r\n                        if(ortt_main.Tscore != -1){\r\n                            ortt_main.scores[1] = ortt_main.Tscore;\r\n\r\n                            Intent intent = new Intent(getApplicationContext(),memoryInput_Page.class);\r\n                            intent.putExtra(\"scores\", ortt_main.scores);\r\n                            startActivity(intent);\r\n\r\n                            QP.isOrient = false;\r\n\r\n                            finish();\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    String dateFilter(@NonNull String userAns){\r\n        String[] ansArray = userAns.split(\"\");\r\n        String toDigit = \"\";\r\n        for(String s : ansArray){\r\n            if(!s.equals(\"\")) {\r\n                if(Character.isDigit(s.charAt(0))) {\r\n                    toDigit += s;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(toDigit.equals(\"\")){\r\n            userAns = ortt_main.KorTran(userAns);\r\n        }\r\n        else{\r\n            userAns = toDigit;\r\n        }\r\n\r\n        return userAns;\r\n    }\r\n\r\n    int cal_score(String[] ans, List<String>[] crr){\r\n        int score = 0;\r\n        if(ans.length == crr.length-1){\r\n            for(int i = 0; i < ans.length; i++){\r\n                if(crr[i+1].size() > 1){\r\n                    for(String s : crr[i+1]){\r\n                        if(ans[i].contains(s)) {\r\n                            score ++;\r\n                            break;\r\n                        }\r\n                        else if(s.contains(\"ERROR\")){\r\n                            Toast.makeText(this, \"GPS를 다시 확인해주세요.\",\r\n                                    Toast.LENGTH_SHORT).show();\r\n                            ortt_main.reverseCoding();\r\n                            return -1;\r\n                        }\r\n                    }\r\n                }\r\n                else{\r\n                    if(ans[i].contains(crr[i + 1].get(0))) score ++;\r\n                }\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            QP.isOrient = false;\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        QP.Start();\r\n        tts.speakOut(question.getText().toString());\r\n        if(QP.current == 0){\r\n            pro_bar.setProgress(0);\r\n        }\r\n        if(QP.current == 1){\r\n            pro_bar.setProgress(5);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/orientation_Page.java b/app/src/main/java/QuizPage/orientation_Page.java
--- a/app/src/main/java/QuizPage/orientation_Page.java	(revision dd08c4b08c8b1ff9df562d9b91d223223becee9f)
+++ b/app/src/main/java/QuizPage/orientation_Page.java	(date 1668692775174)
@@ -173,7 +173,7 @@
                     startActivity(intent);
 
                     QP.isOrient = false;
-
+                    overridePendingTransition(0, 0);
                     finish();
                 }
             }
@@ -359,7 +359,7 @@
                             startActivity(intent);
 
                             QP.isOrient = false;
-
+                            overridePendingTransition(0, 0);
                             finish();
                         }
                     }
@@ -434,7 +434,7 @@
             startActivity(intent);
 
             QP.isOrient = false;
-
+            overridePendingTransition(0, 0);
             finish();
         } else {
             backBtnTime = curTime;
Index: app/src/main/java/QuizPage/LanguagePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.result.ActivityResult;\r\nimport androidx.activity.result.ActivityResultCallback;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport questions.LanguageFunc;\r\nimport questions.attention;\r\nimport user.SharedPreference;\r\n\r\npublic class LanguagePage extends AppCompatActivity {\r\n    LanguageFunc languageFunc;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    //TextView p_num;\r\n    ImageView image;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    String[] U_answers;\r\n    ActivityResultLauncher<Intent> startActivityResult;\r\n    private long backBtnTime = 0;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.language_func);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        //p_num = (TextView) findViewById(R.id.process_num);\r\n        image = (ImageView) findViewById(R.id.question_image);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.right);\r\n        languageFunc = new LanguageFunc();\r\n        U_answers = new String[languageFunc.num];\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        undo = (ImageButton) findViewById(R.id.left);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        answer.setHint(\"답변이 여기 나타납니다.\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        languageFunc.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        Arrays.fill(U_answers, \"\");\r\n\r\n        type.setText(\"언어기능\");\r\n        //p_num.setText(\"13/17\");\r\n        pro_bar.setProgress(70);\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,\r\n                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),\r\n                SharedPreference.getSTT_speed(this));\r\n        Log.d(\"STT_setting\", \"s= \"+stt.getStart()+\", e= \"+stt.getEnd()+\", v= \"+stt.getSpeed());\r\n\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn, submit, languageFunc.quiz);\r\n\r\n        image.setImageResource(R.drawable.toothbrush);\r\n\r\n        startActivityResult = registerForActivityResult(\r\n                new ActivityResultContracts.StartActivityForResult(),\r\n                new ActivityResultCallback<ActivityResult>() {\r\n                    @Override\r\n                    public void onActivityResult(ActivityResult result) {\r\n                        if (result.getResultCode() == RESULT_OK) {\r\n                            Log.d(\"launcher_intent\", \"성공!!!!!!!!!!!\");\r\n                            assert result.getData() != null;\r\n                            String str = result.getData().getStringExtra(\"comprehension\");\r\n                            int curr = result.getData().getIntExtra(\"current\",-2);\r\n\r\n                            if(curr == -1){\r\n                                U_answers[3] = str;\r\n                                languageFunc.Tscore = cal_score(U_answers, languageFunc.crr_ans);\r\n\r\n                                languageFunc.scores[7] = languageFunc.Tscore;\r\n\r\n                                Intent intent = new Intent(getApplicationContext(), fluency_Page.class);\r\n                                intent.putExtra(\"scores\", languageFunc.scores);\r\n                                startActivity(intent);\r\n\r\n                                finish();\r\n                            }\r\n                            else{\r\n                                QP.current = curr;\r\n                                tts.isStopUtt = false;\r\n                                question.setText(languageFunc.quiz.get(QP.current));\r\n                                tts.speakOut(question.getText().toString());\r\n                                answer.setText(\"\");\r\n                                pro_bar.setProgress(80);\r\n                                //p_num.setText(\"15/17\");\r\n                                image.setImageResource(R.drawable.dice);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        image.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                question.setText(languageFunc.quiz.get(QP.current));\r\n                answer.setText(\"\");\r\n                answer.setHint(\"답변이 여기 나타납니다.\");\r\n                if (QP.current == 0) {\r\n                    pro_bar.setProgress(75);\r\n                    image.setImageResource(R.drawable.swing);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                } else if (QP.current == 1) {\r\n                    pro_bar.setProgress(80);\r\n                    image.setImageResource(R.drawable.dice);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                } else if (QP.current == 2) {\r\n                    pro_bar.setProgress(80);\r\n                    Intent intent = new Intent(LanguagePage.this, ComprehensionPage.class);\r\n                    startActivityResult.launch(intent);\r\n                    overridePendingTransition(0, 0);\r\n                    intent.putExtra(\"isDone\", true);\r\n                    intent.putExtra(\"score\", languageFunc.Tscore);\r\n                    setResult(1, intent);\r\n                    QP.Submit();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                if(QP.current == 0){\r\n                    Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n                if(QP.current > 0){\r\n                    answer.setHint(\"답변이 여기 나타납니다.\");\r\n                    QP.current --;\r\n                    tts.isStopUtt = false;\r\n                    question.setText(languageFunc.quiz.get(QP.current));\r\n                    answer.setText(\"\");\r\n                    tts.speakOut(question.getText().toString());\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(70);\r\n                        //p_num.setText(\"13/17\");\r\n                        image.setImageResource(R.drawable.toothbrush);\r\n                    }\r\n                    else if(QP.current == 1){\r\n                        pro_bar.setProgress(75);\r\n                        //p_num.setText(\"14/17\");\r\n                        image.setImageResource(R.drawable.swing);\r\n                    }\r\n                    else if(QP.current == 2){\r\n                        pro_bar.setProgress(80);\r\n                        //p_num.setText(\"15/17\");\r\n                        image.setImageResource(R.drawable.dice);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n                answer.setHint(\"답변이 여기 나타납니다.\");\r\n\r\n                QP.user_ans = answer.getText().toString()\r\n                        .replace(\" \", \"\")\r\n                        .replace(\",\", \"\")\r\n                        .replace(\".\", \"\");\r\n\r\n\r\n                answer.setText(\"\");\r\n\r\n                if (QP.user_ans.isEmpty()) {\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                } else {\r\n                    U_answers[QP.current] = QP.user_ans;\r\n\r\n                    if (QP.current == 0) {\r\n                        //p_num.setText(\"14/17\");\r\n                        pro_bar.setProgress(75);\r\n                        image.setImageResource(R.drawable.swing);\r\n                        tts.isStopUtt = false;\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                    } else if (QP.current == 1) {\r\n                        //p_num.setText(\"15/17\");\r\n                        pro_bar.setProgress(80);\r\n                        image.setImageResource(R.drawable.dice);\r\n                        tts.isStopUtt = false;\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                    } else if (QP.current == 2) {\r\n                        //p_num.setText(\"16/17\");\r\n                        pro_bar.setProgress(80);\r\n                        Intent intent = new Intent(LanguagePage.this, ComprehensionPage.class);\r\n                        startActivityResult.launch(intent);\r\n                        overridePendingTransition(0, 0);\r\n                        intent.putExtra(\"isDone\", true);\r\n                        intent.putExtra(\"score\", languageFunc.Tscore);\r\n                        setResult(1, intent);\r\n                        QP.Submit();\r\n                    } /*else if(QP.current == 3) {\r\n                        Intent intent = new Intent();\r\n                        intent.putExtra(\"isDone\", true);\r\n                        intent.putExtra(\"score\", languageFunc.score);\r\n                        setResult(1, intent);\r\n                        finish();\r\n                    }*/\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    int cal_score(String[] ans, List<String>[] crr){\r\n        int score = 0;\r\n        if(ans.length == crr.length){\r\n            for(int i = 0; i < ans.length; i++){\r\n                if(crr[i].size() > 1){\r\n                    for(String s : crr[i]){\r\n                        if(ans[i].contains(s)) score ++;\r\n                    }\r\n                }\r\n                else if(ans[i].contains(crr[i].get(0))) score ++;\r\n            }\r\n        }\r\n        return score;\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        question.setText(languageFunc.quiz.get(QP.current));\r\n        tts.isStopUtt = false;\r\n        answer.setHint(\"답변이 여기 나타납니다.\");\r\n        answer.setText(\"\");\r\n        tts.speakOut(question.getText().toString());\r\n        QP.Start();\r\n        if(QP.current == 0){\r\n            pro_bar.setProgress(70);\r\n            image.setImageResource(R.drawable.toothbrush);\r\n        }\r\n        else if (QP.current == 1) {\r\n            pro_bar.setProgress(75);\r\n            image.setImageResource(R.drawable.swing);\r\n        } else if (QP.current == 2) {\r\n            pro_bar.setProgress(80);\r\n            image.setImageResource(R.drawable.dice);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/LanguagePage.java b/app/src/main/java/QuizPage/LanguagePage.java
--- a/app/src/main/java/QuizPage/LanguagePage.java	(revision dd08c4b08c8b1ff9df562d9b91d223223becee9f)
+++ b/app/src/main/java/QuizPage/LanguagePage.java	(date 1668692775186)
@@ -120,7 +120,7 @@
                                 Intent intent = new Intent(getApplicationContext(), fluency_Page.class);
                                 intent.putExtra("scores", languageFunc.scores);
                                 startActivity(intent);
-
+                                overridePendingTransition(0, 0);
                                 finish();
                             }
                             else{
Index: app/src/main/java/QuizPage/SpaceTimePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.orientation;\r\nimport questions.spaceTime;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class SpaceTimePage extends AppCompatActivity {\r\n    spaceTime ST;\r\n    SpaceTimeView STV;\r\n    TTS tts;\r\n    TextView question, type;\r\n    Button eraser;\r\n    ImageButton submit, undo;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n    QuizPage QP;\r\n\r\n    private long backBtnTime = 0;\r\n    List<String> tem = new ArrayList<>();\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.space_time);\r\n\r\n        question = (TextView) findViewById(R.id.announce);\r\n        type = (TextView) findViewById(R.id.type);\r\n        eraser = (Button) findViewById(R.id.eraser);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        ST = new spaceTime();\r\n        STV = (SpaceTimeView) findViewById(R.id.canvas);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n        QP = new QuizPage();\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        ST.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        type.setText(\"시공간 기능\");\r\n        pro_bar.setProgress(35);\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tem.clear();\r\n                tts.onInit(status, question.getText().toString(), \"default\", 1000);\r\n                tem.add(ST.quiz.get(1));\r\n                tem.add(ST.quiz.get(2));\r\n                tem.add(ST.quiz.get(3));\r\n                tts.UtteranceProgress(tem, \"continue\", question, submit);\r\n            }\r\n        });\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                tts.speakOut(question.getText().toString());\r\n                tem.add(ST.quiz.get(1));\r\n                tem.add(ST.quiz.get(2));\r\n                tem.add(ST.quiz.get(3));\r\n                tts.UtteranceProgress(tem, \"continue\", question, submit);\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                ST.Tscore = 0;\r\n\r\n                ST.scores[4] = ST.Tscore;\r\n\r\n                pro_bar.setProgress(40);\r\n\r\n                Intent intent = new Intent(getApplicationContext(), ExecutionPage.class);\r\n                intent.putExtra(\"scores\", ST.scores);\r\n                startActivity(intent);\r\n\r\n                finish();\r\n            }\r\n        });\r\n\r\n        eraser.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                STV.clear();\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                Toast.makeText(getApplicationContext(), \"해당 항목의 첫 문제 입니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                ST.Tscore = STV.getScore();\r\n\r\n                ST.scores[4] = ST.Tscore;\r\n\r\n                pro_bar.setProgress(40);\r\n\r\n                Intent intent = new Intent(getApplicationContext(), ExecutionPage.class);\r\n                intent.putExtra(\"scores\", ST.scores);\r\n                startActivity(intent);\r\n\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        if(tts != null){\r\n            tts.Stop();\r\n        }\r\n        tem.clear();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        if(!question.getText().toString().equals(ST.quiz.get(0))){\r\n            question.setText(ST.quiz.get(0));\r\n            tts.speakOut(ST.quiz.get(0), \"default\");\r\n            tem.add(ST.quiz.get(1));\r\n            tem.add(ST.quiz.get(2));\r\n            tem.add(ST.quiz.get(3));\r\n            tts.UtteranceProgress(tem, \"continue\", question, submit);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if(tts != null) {\r\n            tts.Destroy();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/SpaceTimePage.java b/app/src/main/java/QuizPage/SpaceTimePage.java
--- a/app/src/main/java/QuizPage/SpaceTimePage.java	(revision dd08c4b08c8b1ff9df562d9b91d223223becee9f)
+++ b/app/src/main/java/QuizPage/SpaceTimePage.java	(date 1668692775197)
@@ -104,7 +104,7 @@
                 Intent intent = new Intent(getApplicationContext(), ExecutionPage.class);
                 intent.putExtra("scores", ST.scores);
                 startActivity(intent);
-
+                overridePendingTransition(0, 0);
                 finish();
             }
         });
@@ -138,7 +138,7 @@
                 Intent intent = new Intent(getApplicationContext(), ExecutionPage.class);
                 intent.putExtra("scores", ST.scores);
                 startActivity(intent);
-
+                overridePendingTransition(0, 0);
                 finish();
             }
         });
Index: app/src/main/java/QuizPage/memoryOutput_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport questions.memoryOutput;\r\nimport user.SharedPreference;\r\n\r\npublic class memoryOutput_Page extends AppCompatActivity {\r\n    memoryOutput memo_out;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    EditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    boolean first[];\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n        final TextInputLayout TIL = findViewById(R.id.goolelayout);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = (EditText) findViewById(R.id.result);\r\n        answer = TIL.getEditText();\r\n        answer.setEnabled(true);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        memo_out = new memoryOutput();\r\n        helper_img = findViewById(R.id.img);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        type.setText(\"기억회상\");\r\n        pro_bar.setProgress(55);\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        memo_out.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString(), \"Done\", 1000);\r\n            }\r\n        });\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,\r\n                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),\r\n                SharedPreference.getSTT_speed(this));\r\n        Log.d(\"STT_setting\", \"s= \"+stt.getStart()+\", e= \"+stt.getEnd()+\", v= \"+stt.getSpeed());\r\n\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_out.quiz);\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        first = new boolean[memo_out.num];\r\n        Arrays.fill(first, false);\r\n        first[0] = true;\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                answer.setText(\"\");\r\n                QP.current ++;\r\n                if(QP.current == 0) QP.current = 6;\r\n                else{\r\n                    while (QP.current < 6){\r\n                        if(!first[QP.current]){\r\n                            question.setText(memo_out.quiz.get(QP.current));\r\n                            tts.speakOut(question.getText().toString());\r\n                            break;\r\n                        }\r\n                        else QP.current ++;\r\n                    }\r\n                }\r\n                if(QP.current == 6){\r\n                    pro_bar.setProgress(70);\r\n                    memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), LanguagePage.class);\r\n                    intent.putExtra(\"scores\", memo_out.scores);\r\n                    startActivity(intent);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                Toast.makeText(getApplicationContext(), \"기억력 항목에서는 뒤로가기를 할 수 없습니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                // 설정 초기화\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString();\r\n\r\n                if(QP.user_ans.isEmpty()){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else{\r\n                    answer.setText(\"\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(60);\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_out.crr_ans[0].get(i);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                first[i+1] = true;\r\n                                memo_out.Tscore += 2;\r\n                            }\r\n                            else if(QP.correct == \"11시\"){\r\n                                if(QP.user_ans.contains(\"열 한시\") || QP.user_ans.contains(\"열한시\")){\r\n                                    first[i+1] = true;\r\n                                    memo_out.Tscore += 2;\r\n                                }\r\n                            }\r\n                        }\r\n                        if(memo_out.Tscore == 10){ // 점수가 만점이면 액티비티 종료.\r\n                            memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                            Intent intent = new Intent(getApplicationContext(), LanguagePage.class);\r\n                            intent.putExtra(\"scores\", memo_out.scores);\r\n                            startActivity(intent);\r\n\r\n                            finish();\r\n                        }\r\n                        else{\r\n                            while (QP.current < 6){\r\n                                if(!first[QP.current]){\r\n                                    question.setText(memo_out.quiz.get(QP.current));\r\n                                    tts.speakOut(question.getText().toString());\r\n                                    break;\r\n                                }\r\n                                else QP.current ++;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        QP.correct = memo_out.crr_ans[QP.current].get(0);\r\n                        if(QP.user_ans.contains(QP.correct)){\r\n                            memo_out.Tscore ++;\r\n                        }\r\n                        else if(QP.correct == \"11시\"){\r\n                            if(QP.user_ans.contains(\"열 한시\") || QP.user_ans.contains(\"열한시\")){\r\n                                memo_out.Tscore ++;\r\n                            }\r\n                        }\r\n                        QP.current ++;\r\n                        while (QP.current < 6){\r\n                            if(!first[QP.current]){\r\n                                question.setText(memo_out.quiz.get(QP.current));\r\n                                tts.speakOut(question.getText().toString());\r\n                                break;\r\n                            }\r\n                            else QP.current ++;\r\n                        }\r\n                        if(QP.current == 6){\r\n                            pro_bar.setProgress(70);\r\n                            memo_out.scores[6] = memo_out.Tscore;\r\n\r\n                            Intent intent = new Intent(getApplicationContext(), LanguagePage.class);\r\n                            intent.putExtra(\"scores\", memo_out.scores);\r\n                            startActivity(intent);\r\n\r\n                            finish();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        answer.setHint(\"답변이 여기에 나타납니다.\");\r\n        if(QP.current < 2){\r\n            QP.Start();\r\n            tts.speakOut(question.getText().toString());\r\n        }\r\n        else{\r\n            tts.speakOut(question.getText().toString());\r\n            sttBtn.setEnabled(false);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/memoryOutput_Page.java b/app/src/main/java/QuizPage/memoryOutput_Page.java
--- a/app/src/main/java/QuizPage/memoryOutput_Page.java	(revision dd08c4b08c8b1ff9df562d9b91d223223becee9f)
+++ b/app/src/main/java/QuizPage/memoryOutput_Page.java	(date 1668692775209)
@@ -144,7 +144,7 @@
                     Intent intent = new Intent(getApplicationContext(), LanguagePage.class);
                     intent.putExtra("scores", memo_out.scores);
                     startActivity(intent);
-
+                    overridePendingTransition(0, 0);
                     finish();
                 }
             }
@@ -235,7 +235,7 @@
                             Intent intent = new Intent(getApplicationContext(), LanguagePage.class);
                             intent.putExtra("scores", memo_out.scores);
                             startActivity(intent);
-
+                            overridePendingTransition(0, 0);
                             finish();
                         }
                     }
Index: app/src/main/java/QuizPage/memoryInput_Page.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport com.cbnu.dementiadiagnosis.Helper;\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport QuizPage.QuizPage;\r\nimport questions.memoryInput;\r\nimport user.SharedPreference;\r\n\r\npublic class memoryInput_Page extends AppCompatActivity {\r\n    memoryInput memo_in;\r\n    MainSTT stt;\r\n    TTS tts;\r\n    QuizPage QP;\r\n    TextView question, type;\r\n    TextInputEditText answer;\r\n    ImageButton sttBtn;\r\n    ImageButton submit, undo;\r\n    ImageView helper_img;\r\n    Helper helper;\r\n    ProgressBar pro_bar;\r\n    AppCompatButton donKnow;\r\n\r\n    boolean isfirst = true;\r\n\r\n    ArrayList<String> first, second;\r\n    List<String> tem = new ArrayList<>();\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.orientation);\r\n        final TextInputLayout TIL = findViewById(R.id.goolelayout);\r\n\r\n        question = (TextView) findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        answer = findViewById(R.id.result);\r\n        answer.setEnabled(true);\r\n        sttBtn = (ImageButton) findViewById(R.id.sttStart);\r\n        submit = (ImageButton) findViewById(R.id.submit);\r\n        undo = (ImageButton) findViewById(R.id.before);\r\n        helper_img = findViewById(R.id.img);\r\n        memo_in = new memoryInput();\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n\r\n        type.setText(\"기억등록\");\r\n        pro_bar.setProgress(10);\r\n\r\n        Intent intent;\r\n        intent = getIntent();\r\n        memo_in.scores = intent.getIntArrayExtra(\"scores\");\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                int[] time = {1000, 500};\r\n                tts.onInit(status, question.getText().toString(), \"continue\", 1000);\r\n                tem.add(\"민수는.....자전거를 타고.....공원에 가서....11시부터...야구를 했다.\");\r\n                tts.UtteranceProgress(tem, \"continue\", time, sttBtn, submit);\r\n            }\r\n        });\r\n\r\n\r\n        stt = new MainSTT(this, answer, question, sttBtn, submit, tts,\r\n                SharedPreference.getSTT_start(this), SharedPreference.getSTT_end(this),\r\n                SharedPreference.getSTT_speed(this));\r\n        Log.d(\"STT_setting\", \"s= \"+stt.getStart()+\", e= \"+stt.getEnd()+\", v= \"+stt.getSpeed());\r\n\r\n        QP = new QuizPage(stt, tts, question, answer, sttBtn,submit, memo_in.quiz);\r\n        first = new ArrayList<>();\r\n        second = new ArrayList<>();\r\n\r\n        helper = new Helper(tts, stt, helper_img, this);\r\n        helper.setTest();\r\n\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        answer.setEnabled(false);\r\n        answer.setHint(\"이 항목은 자판 입력이 불가능합니다.\");\r\n\r\n        helper_img.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                if(!tts.IsTalking() && !answer.getText().toString().equals(\"\"))\r\n                    tts.speakOut(answer.getText().toString());\r\n            }\r\n        });\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                answer.setText(\"\");\r\n                if(QP.current == 0){\r\n                    pro_bar.setProgress(15);\r\n                    tts.isStopUtt = false;\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(false);\r\n\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString(), \"default\");\r\n                    tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n                }\r\n                else if(QP.current == 1){\r\n                    pro_bar.setProgress(20);\r\n                    tts.isStopUtt = false;\r\n                    QP.Submit();\r\n                    tts.speakOut(question.getText().toString());\r\n                    tts.UtteranceProgress();\r\n                    sttBtn.setEnabled(false);\r\n                    submit.setEnabled(true);\r\n                }\r\n                else{\r\n                    memo_in.scores[2] = memo_in.Tscore;\r\n\r\n                    Intent intent = new Intent(getApplicationContext(), attention_Page.class);\r\n                    intent.putExtra(\"scores\", memo_in.scores);\r\n                    startActivity(intent);\r\n\r\n                    finish();\r\n                }\r\n            }\r\n        });\r\n\r\n        undo.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                Toast.makeText(getApplicationContext(), \"기억력 항목에서는 뒤로가기를 할 수 없습니다.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                isfirst = false;\r\n                stt.Stop();\r\n                tts.Stop();\r\n                sttBtn.setEnabled(true);\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString();\r\n\r\n                if(QP.user_ans.isEmpty() && QP.current != 2){\r\n                    tts.speakOut(\"무응답으로 넘어가실 수 없습니다.\\n아시는 대로 천천히 말씀해주시면 됩니다.\");\r\n                }\r\n                else{\r\n                    answer.setText(\"\");\r\n                    if(QP.current == 0){\r\n                        pro_bar.setProgress(15);\r\n                        tts.isStopUtt = false;\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(false);\r\n\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_in.crr_ans[i].get(0);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                first.add(QP.correct);\r\n                            }\r\n                        }\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString(), \"default\");\r\n                        tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n                    }\r\n                    else if(QP.current == 1){\r\n                        pro_bar.setProgress(20);\r\n                        tts.isStopUtt = false;\r\n                        for(int i = 0; i<5; i++){\r\n                            QP.correct = memo_in.crr_ans[i].get(0);\r\n                            if(QP.user_ans.contains(QP.correct)){\r\n                                second.add(QP.correct);\r\n                            }\r\n                        }\r\n                        QP.Submit();\r\n                        tts.speakOut(question.getText().toString());\r\n                        tts.UtteranceProgress();\r\n                        sttBtn.setEnabled(false);\r\n                        submit.setEnabled(true);\r\n                    }\r\n                    else{\r\n                        memo_in.scores[2] = memo_in.Tscore;\r\n\r\n                        Intent intent = new Intent(getApplicationContext(), attention_Page.class);\r\n                        intent.putExtra(\"scores\", memo_in.scores);\r\n                        startActivity(intent);\r\n\r\n                        finish();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, undo, submit);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n            stt.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n        stt.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        sttBtn.setEnabled(false);\r\n        submit.setEnabled(false);\r\n        answer.setEnabled(false);\r\n        answer.setHint(\"이 항목은 자판 입력이 불가능합니다.\");\r\n\r\n        if(QP.current < 2){\r\n            question.setText(memo_in.quiz.get(QP.current));\r\n            answer.setText(\"\");\r\n            tts.speakOut(question.getText().toString(),\"continue\");\r\n            tts.UtteranceProgress(tem,\"continue\", sttBtn, submit);\r\n        }\r\n        else{\r\n            tts.speakOut(question.getText().toString());\r\n            tts.UtteranceProgress(\"다음 단계로 이동하시려면\\n아래 파란 상자를 눌러주세요!\", sttBtn, submit);\r\n            sttBtn.setEnabled(false);\r\n            submit.setEnabled(true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        QP.Destroy();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/memoryInput_Page.java b/app/src/main/java/QuizPage/memoryInput_Page.java
--- a/app/src/main/java/QuizPage/memoryInput_Page.java	(revision dd08c4b08c8b1ff9df562d9b91d223223becee9f)
+++ b/app/src/main/java/QuizPage/memoryInput_Page.java	(date 1668692775220)
@@ -153,7 +153,7 @@
                     Intent intent = new Intent(getApplicationContext(), attention_Page.class);
                     intent.putExtra("scores", memo_in.scores);
                     startActivity(intent);
-
+                    overridePendingTransition(0, 0);
                     finish();
                 }
             }
@@ -220,7 +220,7 @@
                         Intent intent = new Intent(getApplicationContext(), attention_Page.class);
                         intent.putExtra("scores", memo_in.scores);
                         startActivity(intent);
-
+                        overridePendingTransition(0, 0);
                         finish();
                     }
                 }
Index: app/src/main/java/QuizPage/ComprehensionPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.ClipData;\r\nimport android.content.ClipDescription;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.DragEvent;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.cbnu.dementiadiagnosis.HomeActivity;\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport questions.LanguageFunc;\r\n\r\npublic class ComprehensionPage extends AppCompatActivity {\r\n\r\n    private ImageView mImg, image2, image3, image4, image5;\r\n    private static final String IMAGEVIEW_TAG = \"드래그 이미지\";\r\n    int resLeft = 0, resRight = 0; // 정답 체크\r\n    LanguageFunc languageFunc;\r\n    TTS tts;\r\n    TextView question, type;\r\n    String Okey = \"\";\r\n    ProgressBar pro_bar;\r\n    ImageButton beforeBtn, nextBtn;\r\n    AppCompatButton donKnow;\r\n    QuizPage QP;\r\n    LinearLayout left, left1, left2, left3;\r\n    LinearLayout right, right1, right2, right3;\r\n\r\n    private long backBtnTime = 0;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.s_language);\r\n\r\n        Log.d(\"languageFunc\", \"start\");\r\n        languageFunc = new LanguageFunc();\r\n        mImg = findViewById(R.id.image);\r\n        image2 = findViewById(R.id.image2);\r\n        image3 = findViewById(R.id.image3);\r\n        image4 = findViewById(R.id.image4);\r\n        image5 = findViewById(R.id.image5);\r\n        question = findViewById(R.id.question);\r\n        type = (TextView) findViewById(R.id.type);\r\n        beforeBtn = (ImageButton) findViewById(R.id.before);\r\n        nextBtn = (ImageButton) findViewById(R.id.next);\r\n        pro_bar = (ProgressBar) findViewById(R.id.progressBar);\r\n        donKnow = (AppCompatButton) findViewById(R.id.donknow);\r\n        QP = new QuizPage();\r\n\r\n        type.setText(\"언어기능\");\r\n        pro_bar.setProgress(85);\r\n\r\n        left = findViewById(R.id.left);\r\n        left1 = findViewById(R.id.left1);\r\n        left2 = findViewById(R.id.left2);\r\n        left3 = findViewById(R.id.left3);\r\n\r\n        right = findViewById(R.id.right);\r\n        right1 = findViewById(R.id.right1);\r\n        right2 = findViewById(R.id.right2);\r\n        right3 = findViewById(R.id.right3);\r\n\r\n        mImg.setTag(IMAGEVIEW_TAG);\r\n        image2.setTag(IMAGEVIEW_TAG);\r\n        image3.setTag(IMAGEVIEW_TAG);\r\n        image4.setTag(IMAGEVIEW_TAG);\r\n        image5.setTag(IMAGEVIEW_TAG);\r\n\r\n        mImg.setOnLongClickListener(new LongClickListener());\r\n        image2.setOnLongClickListener(new LongClickListener());\r\n        image3.setOnLongClickListener(new LongClickListener());\r\n        image4.setOnLongClickListener(new LongClickListener());\r\n        image5.setOnLongClickListener(new LongClickListener());\r\n\r\n        findViewById(R.id.left).setOnDragListener(\r\n                new DragListener());\r\n        findViewById(R.id.right).setOnDragListener(\r\n                new DragListener());\r\n        findViewById(R.id.ball).setOnDragListener(\r\n                new DragListener());\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString());\r\n                //tts.UtteranceProgress(announce.getText().toString());\r\n            }\r\n        });\r\n\r\n        question.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.speakOut(question.getText().toString());\r\n            }\r\n        });\r\n\r\n        donKnow.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                pro_bar.setProgress(90);\r\n\r\n                Intent intent = new Intent(ComprehensionPage.this, LanguagePage.class);\r\n                intent.putExtra(\"comprehension\" , \"\");\r\n                intent.putExtra(\"current\" , -1);\r\n                Log.d(\"comprehension\", Okey);\r\n                setResult(RESULT_OK, intent);\r\n\r\n                finish();\r\n            }\r\n        });\r\n\r\n        beforeBtn.setOnClickListener(new View.OnClickListener(){\r\n            public void onClick(View v){\r\n                tts.Stop();\r\n                Intent intent = new Intent(ComprehensionPage.this, LanguagePage.class);\r\n                intent.putExtra(\"current\" , 2);\r\n                intent.putExtra(\"comprehension\" , \"yet\");\r\n                setResult(RESULT_OK, intent);\r\n\r\n                finish();\r\n            }\r\n        });\r\n        nextBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                pro_bar.setProgress(90);\r\n                if(resLeft == 2 && resRight == 3) {\r\n                    Okey = \"OK\";\r\n                } else {\r\n                    Okey = \"notOk\";\r\n                }\r\n                Intent intent = new Intent(ComprehensionPage.this, LanguagePage.class);\r\n                intent.putExtra(\"comprehension\" , Okey);\r\n                intent.putExtra(\"current\" , -1);\r\n                Log.d(\"comprehension\", Okey);\r\n                setResult(RESULT_OK, intent);\r\n\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n    private static final class LongClickListener implements\r\n            View.OnLongClickListener {\r\n\r\n        public boolean onLongClick(View view) {\r\n\r\n            // 태그 생성\r\n            ClipData.Item item = new ClipData.Item(\r\n                    (CharSequence) view.getTag());\r\n\r\n            String[] mimeTypes = { ClipDescription.MIMETYPE_TEXT_PLAIN };\r\n            ClipData data = new ClipData(view.getTag().toString(),\r\n                    mimeTypes, item);\r\n            View.DragShadowBuilder shadowBuilder = new View.DragShadowBuilder(\r\n                    view);\r\n\r\n            view.startDrag(data, // data to be dragged\r\n                    shadowBuilder, // drag shadow\r\n                    view, // 드래그 드랍할  Vew\r\n                    0 // 필요없은 플래그\r\n            );\r\n\r\n            view.setVisibility(View.VISIBLE);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    class DragListener implements View.OnDragListener {\r\n        @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n        Drawable normalShape = getResources().getDrawable(\r\n                R.drawable.shape_exe);\r\n        @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n        Drawable targetShape = getResources().getDrawable(\r\n                R.drawable.target_shape);\r\n        @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n        Drawable roundNShape = getResources().getDrawable(\r\n                R.drawable.round_button);\r\n        @SuppressLint(\"UseCompatLoadingForDrawables\")\r\n        Drawable roundTShape = getResources().getDrawable(\r\n                R.drawable.round_gray);\r\n\r\n\r\n        public boolean onDrag(View v, DragEvent event) {\r\n            // 이벤트 시작\r\n            switch (event.getAction()) {\r\n                // 이미지를 드래그 시작될때\r\n                case DragEvent.ACTION_DRAG_STARTED:\r\n                    Log.d(\"DragClickListener\", \"ACTION_DRAG_STARTED\");\r\n                    break;\r\n\r\n                // 드래그한 이미지를 옮길려는 지역으로 들어왔을때\r\n                case DragEvent.ACTION_DRAG_ENTERED:\r\n                    // 이미지가 들어왔다는 것을 알려주기 위해 배경이미지 변경\r\n                    if(v == findViewById(R.id.left)) {\r\n                        v.setBackground(targetShape);\r\n                    } else if(v == findViewById(R.id.right)) {\r\n                        v.setBackground(targetShape);\r\n                    } else {\r\n                        v.setBackground(roundTShape);\r\n                    }\r\n                    Log.d(\"DragClickListener\", \"ACTION_DRAG_ENTERED\");\r\n                    break;\r\n\r\n                // 드래그한 이미지가 영역을 빠져 나갈때\r\n                case DragEvent.ACTION_DRAG_EXITED:\r\n                    if(v == findViewById(R.id.left))\r\n                        resLeft--;\r\n                    else if(v == findViewById(R.id.right))\r\n                        resRight--;\r\n                    Log.d(\"DragClickListener\", \"ACTION_DRAG_EXITED\");\r\n                    v.setBackground(normalShape);\r\n                    break;\r\n\r\n                // 이미지를 드래그해서 드랍시켰을때\r\n                case DragEvent.ACTION_DROP:\r\n                    Log.d(\"DragClickListener\", \"ACTION_DROP\");\r\n\r\n                    if (v == findViewById(R.id.left)) {\r\n                        View view = (View) event.getLocalState();\r\n                        ViewGroup viewgroup = (ViewGroup) view\r\n                                .getParent();\r\n                        viewgroup.removeView(view);\r\n\r\n                        resLeft++;\r\n                        Log.e(\"resLeft\", Integer.toString(resLeft));\r\n\r\n                        if (resLeft < 3) {\r\n                            left1.addView(view);\r\n                            view.setVisibility(View.VISIBLE);\r\n                        } else if (resLeft < 5) {\r\n                            left2.addView(view);\r\n                            view.setVisibility(View.VISIBLE);\r\n                        } else {\r\n                            left3.addView(view);\r\n                            view.setVisibility(View.VISIBLE);\r\n                        }\r\n                    } else if (v == findViewById(R.id.right)) {\r\n                        View view = (View) event.getLocalState();\r\n                        ViewGroup viewgroup = (ViewGroup) view\r\n                                .getParent();\r\n                        viewgroup.removeView(view);\r\n\r\n                        resRight++;\r\n                        Log.e(\"resRight\", Integer.toString(resRight));\r\n\r\n                        if (resRight < 3) {\r\n                            right1.addView(view);\r\n                            view.setVisibility(View.VISIBLE);\r\n                        } else if (resRight < 5) {\r\n                            right2.addView(view);\r\n                            view.setVisibility(View.VISIBLE);\r\n                        } else {\r\n                            right3.addView(view);\r\n                            view.setVisibility(View.VISIBLE);\r\n                        }\r\n                    } else if (v == findViewById(R.id.ball)) {\r\n                        View view = (View) event.getLocalState();\r\n                        ViewGroup viewgroup = (ViewGroup) view\r\n                                .getParent();\r\n                        viewgroup.removeView(view);\r\n\r\n                        LinearLayout containView = (LinearLayout) v;\r\n                        containView.addView(view);\r\n                        view.setVisibility(View.VISIBLE);\r\n\r\n                    } else {\r\n                        View view = (View) event.getLocalState();\r\n                        view.setVisibility(View.VISIBLE);\r\n                        break;\r\n                    }\r\n\r\n                case DragEvent.ACTION_DRAG_ENDED:\r\n                    if(v == findViewById(R.id.left)) {\r\n                        v.setBackground(normalShape);\r\n                    } else if(v == findViewById(R.id.right)) {\r\n                        v.setBackground(normalShape);\r\n                    } else {\r\n                        v.setBackground(roundNShape);\r\n                    }\r\n                    Log.d(\"DragClickListener\", \"ACTION_DRAG_ENDED\");\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public boolean onTouchEvent(MotionEvent event) {\r\n        return QP.onTouchEvent(event, beforeBtn, nextBtn);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            tts.Destroy();\r\n\r\n            Intent intent = new Intent(getApplicationContext(), HomeActivity.class);\r\n            startActivity(intent);\r\n\r\n            finish();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop(){\r\n        tts.isStopUtt = true;\r\n        super.onStop();\r\n        tts.Stop();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart(){\r\n        super.onStart();\r\n        tts.isStopUtt = false;\r\n        question.setText(languageFunc.quiz.get(3));\r\n        tts.speakOut(question.getText().toString());\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        tts.Destroy();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/ComprehensionPage.java b/app/src/main/java/QuizPage/ComprehensionPage.java
--- a/app/src/main/java/QuizPage/ComprehensionPage.java	(revision dd08c4b08c8b1ff9df562d9b91d223223becee9f)
+++ b/app/src/main/java/QuizPage/ComprehensionPage.java	(date 1668692775150)
@@ -124,7 +124,7 @@
                 intent.putExtra("current" , -1);
                 Log.d("comprehension", Okey);
                 setResult(RESULT_OK, intent);
-
+                overridePendingTransition(0, 0);
                 finish();
             }
         });
@@ -154,7 +154,7 @@
                 intent.putExtra("current" , -1);
                 Log.d("comprehension", Okey);
                 setResult(RESULT_OK, intent);
-
+                overridePendingTransition(0, 0);
                 finish();
             }
         });
Index: app/src/main/res/anim/pop.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/anim/pop.xml b/app/src/main/res/anim/pop.xml
new file mode 100644
--- /dev/null	(date 1668692332045)
+++ b/app/src/main/res/anim/pop.xml	(date 1668692332045)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<set xmlns:android="http://schemas.android.com/apk/res/android">
+    <scale
+        android:duration = "1000"
+        android:fromXScale="0.6"
+        android:fromYScale="0.6"
+        android:pivotX="50%"
+        android:pivotY="50%"
+        android:toXScale="1.0"
+        android:toYScale="1.0"
+        />
+</set>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/logo_round.xml b/app/src/main/res/drawable/logo_round.xml
new file mode 100644
