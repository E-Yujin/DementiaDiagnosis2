Index: app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cbnu.dementiadiagnosis;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.navigation.NavigationBarView;\r\n\r\nimport QuizPage.QuizPage;\r\nimport fragment.FragmentChart;\r\nimport fragment.FragmentHome;\r\nimport fragment.FragmentSetting;\r\nimport user.SharedPreference;\r\n\r\npublic class HomeActivity extends AppCompatActivity {\r\n\r\n    private FragmentManager fragmentManager = getSupportFragmentManager();\r\n    private FragmentHome fragmentHome = new FragmentHome();\r\n    private FragmentChart fragmentChart = new FragmentChart();\r\n    private FragmentSetting fragmentSetting = new FragmentSetting();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n\r\n        FragmentTransaction transaction = fragmentManager.beginTransaction();\r\n        transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();\r\n\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.navigationView);\r\n        bottomNavigationView.setOnItemSelectedListener(new ItemSelectedListener());\r\n    }\r\n\r\n    class ItemSelectedListener implements NavigationBarView.OnItemSelectedListener {\r\n\r\n        @Override\r\n        public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n            FragmentTransaction transaction = fragmentManager.beginTransaction();\r\n\r\n            switch(item.getItemId())\r\n            {\r\n                case R.id.homeItem:\r\n                    transaction.replace(R.id.frameLayout, fragmentHome).commitAllowingStateLoss();\r\n                    break;\r\n                case R.id.resultItem:\r\n                    transaction.replace(R.id.frameLayout, fragmentChart).commitAllowingStateLoss();\r\n                    break;\r\n                case R.id.setItem:\r\n                    transaction.replace(R.id.frameLayout, fragmentSetting).commitAllowingStateLoss();\r\n                    break;\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java b/app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java
--- a/app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java	(revision 69e35bb15038be143a161b094c67f62c5ff43517)
+++ b/app/src/main/java/com/cbnu/dementiadiagnosis/HomeActivity.java	(date 1654077448496)
@@ -7,6 +7,7 @@
 
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.Button;
@@ -15,6 +16,7 @@
 import com.google.android.material.navigation.NavigationBarView;
 
 import QuizPage.QuizPage;
+import database.DBHelper;
 import fragment.FragmentChart;
 import fragment.FragmentHome;
 import fragment.FragmentSetting;
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.cbnu.dementiadiagnosis\">\r\n\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>\r\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.DementiaDiagnosis\"\r\n        android:usesCleartextTraffic=\"true\">\r\n\r\n        <activity android:name=\".RegisterActivity\" android:exported=\"false\"/>\r\n        <activity android:name=\".SimpleTestActivity\" android:exported=\"false\"/>\r\n        <activity android:name=\".HomeActivity\" android:exported=\"false\"/>\r\n        <activity android:name=\".FirstActivity\" android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\"/>\r\n                <category android:name=\"android.intent.category.LAUNCHER\"/>\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <activity android:name=\".QuizHOME\"> </activity>\r\n        <activity android:name=\".Map\"> </activity>\r\n        <activity android:name=\"QuizPage.orientation_Page\"> </activity>\r\n        <activity android:name=\"QuizPage.memoryInput_Page\"> </activity>\r\n        <activity android:name=\"QuizPage.attention_Page\"> </activity>\r\n        <activity android:name=\"QuizPage.ExecutionPage\"> </activity>\r\n        <activity android:name=\"QuizPage.memoryOutput_Page\"> </activity>\r\n        <activity android:name=\"QuizPage.fluency_Page\"> </activity>\r\n        <activity android:name=\"QuizPage.SpaceTimePage\"> </activity>\r\n        <meta-data android:name=\"com.kakao.sdk.AppKey\"\r\n            android:value=\"deeed953cb0bd5ce8fb32d971a0039d7\"/>\r\n    </application>\r\n\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 69e35bb15038be143a161b094c67f62c5ff43517)
+++ b/app/src/main/AndroidManifest.xml	(date 1654061300760)
@@ -35,6 +35,8 @@
         <activity android:name="QuizPage.memoryOutput_Page"> </activity>
         <activity android:name="QuizPage.fluency_Page"> </activity>
         <activity android:name="QuizPage.SpaceTimePage"> </activity>
+        <activity android:name="QuizPage.LanguagePage"> </activity>
+        <activity android:name="QuizPage.ComprehensionPage"> </activity>
         <meta-data android:name="com.kakao.sdk.AppKey"
             android:value="deeed953cb0bd5ce8fb32d971a0039d7"/>
     </application>
Index: app/src/main/java/QuizPage/ExecutionPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package QuizPage;\r\n\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.cbnu.dementiadiagnosis.MainSTT;\r\nimport com.cbnu.dementiadiagnosis.R;\r\nimport com.cbnu.dementiadiagnosis.TTS;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport fragment.ExecutionOne;\r\nimport fragment.ExecutionThree;\r\nimport fragment.ExecutionTwo;\r\nimport questions.Execution;\r\n\r\n\r\npublic class ExecutionPage extends AppCompatActivity {\r\n\r\n    Execution execution;\r\n    FragmentManager fragmentManager;\r\n    ExecutionOne executionOne;\r\n    ExecutionTwo executionTwo;\r\n    ExecutionThree executionThree;\r\n    TextView question, announce;\r\n    EditText answer;\r\n    String total;\r\n    Button sttBtn, submit;\r\n    QuizPage QP;\r\n    MainSTT stt;\r\n    TTS tts;\r\n\r\n    private long backBtnTime = 0;\r\n    List<String> tem = new ArrayList<>();\r\n    int[] time = {2000, 2000, 2000, 2000};\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.execution);\r\n\r\n        question = findViewById(R.id.question);\r\n        answer = findViewById(R.id.result);\r\n        announce = findViewById(R.id.textView);\r\n        sttBtn = findViewById(R.id.sttStart);\r\n        submit = findViewById(R.id.btnSubmit);\r\n        execution = new Execution();\r\n\r\n        // Fragment 객체 선언\r\n        fragmentManager = (FragmentManager)getSupportFragmentManager();\r\n        executionOne = new ExecutionOne();\r\n        executionTwo = new ExecutionTwo();\r\n        executionThree = new ExecutionThree();\r\n\r\n        // 제일 처음 띄워줄 뷰 설정\r\n        fragmentManager.beginTransaction().replace(R.id.frame_layout, executionOne).commit();\r\n\r\n        tts = new TTS(this, new TextToSpeech.OnInitListener() {\r\n            @Override\r\n            public void onInit(int status) {\r\n                tts.onInit(status, question.getText().toString());\r\n                tem.add(\"모양들을 보면서 어떤 순서로 나오는지 생각해보세요.\");\r\n                tem.add(\"네모, 동그라미, 세모, 네모, 빈칸, 세모\");\r\n                tem.add(\"그렇다면 빈칸에는 무엇이 들어가야 할까요?\");\r\n                tts.UtteranceProgress(tem, \"continue\", time, question);\r\n            }\r\n        }, sttBtn, submit);\r\n        stt = new MainSTT(this, answer, announce, question, sttBtn, submit, tts);\r\n        QP = new QuizPage(stt, tts, question, announce, answer, sttBtn,submit, execution.quiz);\r\n\r\n        sttBtn.setEnabled(false);\r\n\r\n        sttBtn.setOnClickListener(new View.OnClickListener() {\r\n            public void onClick(View v) {\r\n                tts.isStopUtt = true;\r\n                tts.Stop();\r\n                stt.start_STT();\r\n            }\r\n        });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                stt.Stop();\r\n                tts.Stop();\r\n                tts.isStopUtt = true;\r\n\r\n                QP.user_ans = answer.getText().toString()\r\n                        .replace(\",\",\"\")\r\n                        .replace(\".\", \"\");\r\n\r\n                switch (QP.current) {\r\n                    case 0:\r\n                        total = executionOne.oneResult();\r\n                        Log.d(\"result\", \"oneResult\");\r\n                        break;\r\n                    case 1:\r\n                        total = executionTwo.twoResult();\r\n                        Log.d(\"result\", \"twoResult\");\r\n                        break;\r\n                    case 2:\r\n                        total = answer.getText().toString();\r\n                        Log.d(\"result\", \"threeResult \" + total);\r\n                        break;\r\n                    default:\r\n                        Log.d(\"case default!!\", \"넘어감\");\r\n                        break;\r\n                }\r\n\r\n                List<String> correct = new ArrayList<>();\r\n                correct.clear();\r\n                for(String data : execution.crr_ans[QP.current]){\r\n                    correct.add(data);\r\n                }\r\n\r\n                answer.setText(\"\");\r\n\r\n                if(total.isEmpty()) {\r\n                    Toast.makeText(getApplicationContext(),\"응답을 하셔야 넘어가실 수 있습니다\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                else {\r\n                    tts.Stop();\r\n                    tts.isStopUtt = true;\r\n\r\n                    for(String data : correct){\r\n                        if(total.contains(data)){\r\n                            execution.score ++;\r\n                        }\r\n                        if(QP.current + 1 < execution.score){\r\n                            execution.score = QP.current + 1;\r\n                        }\r\n                    }\r\n\r\n                    if(QP.current == 0) {\r\n                        tts.isStopUtt = false;\r\n                        QP.current++;\r\n                        question.setText(execution.quiz.get(QP.current));\r\n                        tts.speakOut(question.getText().toString());\r\n                        tem.clear();\r\n                        tem.add(\"별이 각자 다른 위치로 이동합니다.\");\r\n                        tem.add(\"어떤 식으로 이동하는지 잘 생각해 보십시오.\");\r\n                        tem.add(\"이 다음에는 네 칸중 별이 어디에 위치하게 될까요?\");\r\n                        tts.UtteranceProgress(tem, \"continue\", time, question);\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, executionTwo).commit();\r\n                    }\r\n                    else if(QP.current == 1) {\r\n                        sttBtn.setEnabled(true);\r\n                        answer.setVisibility(View.VISIBLE);\r\n                        announce.setVisibility(View.VISIBLE);\r\n                        tts.isStopUtt = false;\r\n                        QP.current++;\r\n                        question.setText(execution.quiz.get(QP.current));\r\n                        tts.speakOut(question.getText().toString());\r\n                        tem.clear();\r\n                        tem.add(\"'1 봄 2 여름 ~' 이런 형태로 연결되어 나갑니다.\");\r\n                        tem.add(\"빈칸에는 무엇이 들어갈 차례일까요?\");\r\n                        tts.UtteranceProgress(tem, \"continue\", time, question);\r\n                        fragmentManager.beginTransaction().replace(R.id.frame_layout, executionThree).commit();\r\n                    }\r\n                    else if(QP.current == 2) {\r\n                        Intent resultIntent = new Intent();\r\n\r\n                        resultIntent.putExtra(\"isDone\", true);\r\n                        resultIntent.putExtra(\"score\", execution.score);\r\n\r\n                        setResult(1, resultIntent);\r\n                        finish();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        long curTime = System.currentTimeMillis();\r\n        long gapTime = curTime - backBtnTime;\r\n\r\n        if (0 <= gapTime && 2000 >= gapTime) {\r\n            super.onBackPressed();\r\n        } else {\r\n            backBtnTime = curTime;\r\n            Toast.makeText(this, \"지금 나가시면 진행된 검사가 저장되지 않습니다.\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/QuizPage/ExecutionPage.java b/app/src/main/java/QuizPage/ExecutionPage.java
--- a/app/src/main/java/QuizPage/ExecutionPage.java	(revision 69e35bb15038be143a161b094c67f62c5ff43517)
+++ b/app/src/main/java/QuizPage/ExecutionPage.java	(date 1654062556268)
@@ -70,7 +70,7 @@
         tts = new TTS(this, new TextToSpeech.OnInitListener() {
             @Override
             public void onInit(int status) {
-                tts.onInit(status, question.getText().toString());
+                tts.onInit(status, question.getText().toString(), "default");
                 tem.add("모양들을 보면서 어떤 순서로 나오는지 생각해보세요.");
                 tem.add("네모, 동그라미, 세모, 네모, 빈칸, 세모");
                 tem.add("그렇다면 빈칸에는 무엇이 들어가야 할까요?");
